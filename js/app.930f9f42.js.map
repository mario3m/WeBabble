{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/Constants.js","webpack:///./src/store/AuxMethods.js","webpack:///./src/App.vue?d948","webpack:///src/App.vue","webpack:///./src/App.vue?5b92","webpack:///./src/App.vue","webpack:///./src/views/Home.vue?ee2d","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?231f","webpack:///./src/views/Home.vue","webpack:///./src/I18NMessages.js","webpack:///./src/i18n.js","webpack:///./src/store/modules/database.js","webpack:///./src/store/modules/permissions.js","webpack:///./src/store/modules/users.js","webpack:///./src/store/modules/user.js","webpack:///./src/store/modules/events.js","webpack:///./src/store/modules/chats.js","webpack:///./src/store/modules/ranking.js","webpack:///./src/store/store.js","webpack:///./src/router.js","webpack:///./src/registerServiceWorker.js","webpack:///./src/plugins/vuetify.js","webpack:///./src/main.js","webpack:///./src/assets/WhiteLogoWeBabble.png","webpack:///./src/views/Home.vue?14a1"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","RULE_MIN_VALUE_CHARACTERS_USERNAME","RULE_MAX_VALUE_CHARACTERS_USERNAME","RULE_MIN_VALUE_CHARACTERS_USER_DESCRIPTION","RULE_MIN_VALUE_AGE","RANKING_PAGE_SIZE","MAX_RANKING_PAGE_SIZE","SEARCHED_USERS_PAGE_SIZE","EVENTS_PAGE_SIZE","MIN_USER_AGE","MAX_USER_AGE","IMG_EMOJI_SAD_FACE","arraysContainSameElements","arr1","arr2","Array","isArray","arr1_aux","concat","sort","arr2_aux","generateChatID","id1","id2","chatID","emptyCallback","_vm","this","_h","$createElement","_c","_self","staticStyle","_e","staticRenderFns","component","VApp","staticClass","attrs","_v","_s","sloganText","on","$event","$router","createAnAccountText","toLogInText","VBtn","VContainer","messages","es","ERROR_GENERIC_PROBLEM","ERROR_GENERIC_CONNECTION_PROBLEM","ERROR_GENERIC_DATABASE_PROBLEM","ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_EMAIL","ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_USERNAME","ERROR_WRONG_EMAIL_PASSWORD_COMBINATION","ERROR_UPLOADING_IMAGE","ERROR_SOMETHING_HAPPENED","ERROR_API_FILEREADER_NOT_SUPPORTED","ERROR_PASSWORDS_DONT_MATCH","ERROR_TOO_MANY_REQUESTS","ERROR_TEXT_WRONG_PASSWORD","ERROR_NO_ACCOUNT_WITH_THIS_EMAIL","ERROR_GETTING_CURRENT_LOCATION","ERROR_COULD_NOT_SET_YOUR_RATING","ERROR_PROBLEM_RETRIEVING_RANKING","ERROR_PROBLEM_GETTING_CURRENT_LOCATION","ERROR_PROBLEM_GETTING_NEARBY_USERS","ERROR_PROBLEM_GETTING_EVENTS","RULE_TEXT_MANDATORY_FIELD","RULE_TEXT_MIN_VALUE_CHARACTERS_USERNAME","RULE_TEXT_MAX_VALUE_CHARACTERS_USERNAME","RULE_TEXT_MIN_VALUE_CHARACTERS_USERNAME_TO_START_SEARCHING","RULE_TEXT_MIN_VALUE_CHARACTERS_USER_DESCRIPTION","RULE_TEXT_MIN_VALUE_CHARACTERS_PASSWORD","RULE_YOU_HAVE_TO_BE_AT_LEAST_X_YEARS_OLD_TO_REGISTER","RULE_INVALID_DATE","RULE_TEXT_SELECT_RECOMMENDED_ADDRESS","ASK_FOR_IMAGE_SELECTION","TEXT_VERIFICATION_EMAIL_SENT_TO","TEXT_FILL_FIELDS_CORRECTLY","TEXT_LANGUAGES_YOU_WANT_TO_IMPROVE","TEXT_LANGUAGES_YOU_WANT_TO_PRACTICE","TEXT_LANGUAGES_YOU_SPEAK_FLUENTLY","TEXT_MOTHER_LANGUAGES","TEXT_LANGUAGE_HE_SHE_WANT_TO_IMPROVE","TEXT_LANGUAGE_HE_SHE_WANT_TO_PRACTICE","TEXT_LANGUAGE_HE_SHE_SPEAK_FLUENTLY","TEXT_MOTHER_LANGUAGE","TEXT_LANGUAGE","TEXT_GENDER","TEXT_DISTANCE","TEXT_AGE","TEXT_FILTER_BY_MOTHER_LANGUAGE","TEXT_FILTER_BY_LANGUAGE_TO_LEARN","TEXT_SEARCH","TEXT_NO_FIT_USERS_TO_LIST","TEXT_FILTERS","TEXT_RATE_USER","TEXT_YOU","TEXT_CANCEL","TEXT_RATE","TEXT_REMOVE","TEXT_NO_LIMIT","TEXT_REMOVE_FILTERS","TEXT_YOUR_PROFILE","TEXT_EDIT","TEXT_EDIT_PROFILE","TEXT_USERS","TEXT_TO_FILTER","TEXT_EVENTS","TEXT_RANKING","TEXT_CHATS","TEXT_CLOSE","TEXT_SHOW_USERS","TEXT_OF","TEXT_CREATE_YOUR_ACCOUNT","TEXT_CREATE_AN_ACCOUNT","TEXT_NAME","TEXT_LASTNAME","TEXT_EMAIL","TEXT_EMAIL_DIRECTION","TEXT_PASSWORD","TEXT_REPEAT_PASSWORD","TEXT_REGISTER","TEXT_REGISTER_NOW","TEXT_ALREADY_HAVE_AN_ACCOUNT","TEXT_ACCESS_NOW","TEXT_ACCESS_TO_YOUR_ACCOUNT","TEXT_VERIFY_YOUR_EMAIL","TEXT_USERNAME","TEXT_FILL_YOUR_PROFILE","TEXT_BIRTHDATE","TEXT_TELL_US_A_LITTLE_ABOUT_YOU","TEXT_TO_CONTINUE","TEXT_YOUR_LANGUAGES","TEXT_WOMAN","TEXT_MAN","TEXT_ANY","TEXT_OTHER","TEXT_CHOOSE_YOUR_PROFILE_IMAGE","TEXT_PROFILE_IMAGE","TEXT_EMAIL_NOT_VALID","TEXT_USERNAME_NOT_VALID","TEXT_HAVE_YOU_FORGOTTEN_YOUR_PASSWORD","TEXT_STILL_DONT_HAVE_AN_ACCOUNT","TEXT_TO_LOG_IN","TEXT_TO_LOG_OUT","TEXT_RESEND_EMAIL","TEXT_YOU_ARE_ABOUT_TO_LOG_OUT","TEXT_CONFIRM","TEXT_ARE_YOU_SURE_YOU_WANT_TO_LOG_OUT","TEXT_PROFILE_INFO","TEXT_LANGUAGES_TO_PRACTICE","TEXT_SAVE","TEXT_SETTINGS","TEXT_ACCOUNT","TEXT_PERMISSIONS","TEXT_NAME_AND_LASTNAME","TEXT_CHANGE_NAME_AND_LASTNAME","TEXT_CHANGE_EMAIL","TEXT_UPDATE","TEXT_VERIFY_YOUR_PASSWORD","TEXT_REMOVE_ACCOUNT","TEXT_INTRODUCE_YOUR_PASSWORD_TO_CONTINUE","TEXT_YOUR_EMAIL_HAS_BEEN_UPDATED","TEXT_YOUR_PASSWORD_HAS_BEEN_UPDATED","TEXT_CHANGE_PASSWORD","TEXT_CURRENT_PASSWORD","TEXT_NEW_PASSWORD","TEXT_CONFIRM_PASSWORD","TEXT_UPDATE_PASSWORD","TEXT_ENTER_YOUR_EMAIL_TO_RESET_YOUR_PASSWORD","TEXT_RESET_PASSWORD","TEXT_RESET_PASSWORD_INSTRUCTIONS","TEXT_SPACE_YEARS","TEXT_PARTICIPANTS","TEXT_NO_PARTICIPANTS_YET","TEXT_VERIFICATION_EMAIL_SENT","TEXT_NO_USERS_MATCH_SEARCH","TEXT_NO_EVENTS_AVAILABLE","TEXT_NO_CHATS_AVAILABLE","TEXT_NO_CHATS_MATCH_SEARCH","TEXT_LANGUAGE_INVOLVED_IN_EVENTS","TEXT_LOCATION_PERMISSION_NOT_GRANTED","TEXT_CONFIRM_EVENT_PARTICIPATION","TEXT_CANCEL_EVENT_PARTICIPATION","TEXT_APP_LANGUAGE","TEXT_LANGUAGE_OF_APP","TEXT_LANGUAGE_DE","TEXT_LANGUAGE_ZH","TEXT_LANGUAGE_ES","TEXT_LANGUAGE_FR","TEXT_LANGUAGE_EN","TEXT_LANGUAGE_IT","TEXT_LANGUAGE_JA","TEXT_LANGUAGE_PT","TEXT_LANGUAGE_ALL","TEXT_WE_BABBLE_SLOGAN","TEXT_LOCATION","TEXT_NOTIFICATIONS","TEXT_GRANTED","TEXT_NOT_GRANTED","TEXT_CREATE_EVENT","TEXT_PUBLISH","TEXT_DATE","TEXT_DESCRIPTION","TEXT_LANGUAGES","TEXT_INFORMATION","TEXT_HEADER_IMAGE","TEXT_PLACE","TEXT_ADDRESS","TEXT_YOU_ARE_ABOUT_TO_REMOVE_EVENT","TEXT_ARE_YOU_SURE_YOU_WANT_TO_REMOVE_EVENT","TEXT_EDIT_EVENT","en","dateTimeFormats","abbrMonth","month","short","year","day","long","weekday","hour","minute","hour12","Vue","use","VueI18n","localeLanguage","navigator","language","i18n","locale","I18NMessages","Vuex","genericDatabaseError","alreadyRegisteredEmailError","emailPasswordCombinationError","tooManyRequestsError","genericError","uploadingImageError","namespaced","state","getters","mutations","actions","isUserAuth","firebase","currentUser","setAccount","context","firestoreDB","collection","doc","uid","set","lastName","merge","log","catch","setAccountLanguage","lang","askForMessagingPermission","requestPermission","generatePushNotificationToken","getToken","token","localStorage","getItem","currentMessageToken","update","tokens","FieldValue","arrayUnion","getAccount","id","email","createAccountListener","userID","docRef","onSnapshot","user","formattedUser","dispatch","root","createAccount","createUserWithEmailAndPassword","password","setPersistance","setPersistence","Auth","Persistence","LOCAL","login","signInWithEmailAndPassword","removePushNotificationToken","arrayRemove","logout","signOut","sendEmailVerification","isEmailVerified","reload","emailVerified","sendPasswordResetEmail","updateAccountData","batch","infoToUpdate","commit","updateAccountEmail","updateEmail","updateAccountPassword","updatePassword","getProfileByUID","toDate","setHours","getProfile","profileInfo","getMultipleProfilesByUID","ids","userProfiles","forEach","getProfileByUsername","username","where","querySnapshot","size","docs","setProfile","toLowerCase","birthDate","Date","gender","description","avgRating","numRatings","score","setRegistrationCompleted","registrationCompleted","updateProfile","knownLanguages","languagesToLearn","setLanguages","uploadProfileImg","img","path","url","uploadImg","storageDB","ref","child","putString","getDownloadURL","setProfileImg","profileImg","updateUserLocation","location","geoFirestore","GeoFirestore","coordinates","GeoPoint","lat","lng","date","getLocation","getRatings","exists","setRating","newRating","rating","delete","isNextUsersPageEmpty","page","lastUserShowed","filters","ageRange","Constants","orderBy","currentDate","setFullYear","getFullYear","filterBy","languageToLearn","knownLanguage","startAfter","endAt","limit","documentSnapshots","searchedUserIndex","findIndex","searchedUser","newDocs","map","dataDocs","getNextUsersPage","newLastUserShowed","startAt","users","getNearbyUserIDs","geofirestore","queryNearbyUsers","near","center","radius","maxDistance","snapshot","getEventByID","uploadEventHeaderImg","eventID","data2","createEvent","eventRef","headerImg","eventData","participants","involvedLanguages","removeEvent","updateEvent","returnValue","getNextEventsPage","newLastEventShowed","lastEventShowed","languageInvolved","eventsRetrieved","events","getEventsToBeCelebrated","isNextEventsPageEmpty","addParticipantToEvent","removeParticipantFromEvent","createChatMessagesListener","chatMessages","docChanges","change","formattedChatMessages","setMessagesToRead","addMessagesToChat","newMessage","serverTimestamp","sender","text","addChat","chat","newChat","chats","getChatByID","getTop100RankingUsers","position","database","isGeolocationPermissionGranted","isPushNotificationPermissionGranted","getIsGeolocationPermissionGranted","getIsPushNotificationPermissionGranted","resetState","setIsGeolocationPermissionGranted","setIsPushNotificationPermissionGranted","checkForGeolocationPermission","permissions","query","geolocation","getCurrentPosition","AuxMethods","onchange","checkForPushNotificationsPermission","isPermissionGranted","searchedUsersIDs","genderFilter","ageRangeFilter","languageFilter","searchByUsernameFilter","maxDistanceFilter","maxDistanceRanges","maxDistanceRangesText","locationFilter","nearbyUsersIDs","getLanguagesByUserID","getGenderFilter","getAgeRangeFilter","getLanguageFilter","getSearchByUsernameFilter","getMaxDistanceFilter","getMaxDistanceRangesText","getUserByID","getNearbyUsersIDs","getNearbyUsersIDsLength","areThereFiltersOn","getFilters","filtersOn","getLastUserShowed","getSearchedUsers","searchedUsersReturn","setGenderFilter","setAgeRangeFilter","setNearbyUsersIDs","setLanguageFilter","setLocationFilter","setSearchByUsernameFilter","setMaxDistanceFilter","addUser","addSearchedUserID","resetSearchedUsersIDs","setLastUserShowed","addRating","userTo","prev","newAvgRating","areThereMore","isEmpty","isEmpty2","areThereMoreNearbyUsers","allIDs","idsToGetProfiles","isValid","startsWith","languageToLearnIndex","knownLanguageIndex","getNearbyUsersProfiles","usersAdded","resetSearchedUsers","setFilters","resetFilters","alreadyAccountUsernameError","gettingCurrentLocationError","role","ratings","genderOptions","defaultProfileImg","languageOptions","getName","getID","getLastName","getEmail","getRole","getChats","getBirthDate","getGender","getDescription","getProfileImg","getKnownLanguages","getLanguagesToLearn","getGenderImgByID","getGenderDefaultProfileImgByUserGender","getGenderOptionsAsArray","keys","getLanguageImgByID","getLanguageOptionsAsArray","getLanguageFromLanguageOptionsByID","getRating","setName","setLanguage","setLastName","setEmail","accountInfo","setUsername","setBirthDate","setGender","setDescription","setAvgRating","setNumRatings","setKnownLanguages","setLanguagesToLearn","setRatings","setLocation","initState","generateNotificationToken","updateAccountNameAndLastName","isUserLogged","isIt","checkIfEmailIsVerified","isVerified","checkIfUsernameIsAlreadyRegistered","createProfile","isAlreadyRegistered","nextTick","getRegistrationState","checkRegistrationState","getCurrentLocation","coords","latitude","longitude","ratingsInfo","rateUser","currentLocation","eventsToShowIDs","mapEventsToShowIDs","languageInvolvedFilter","eventsTab","getLanguageInvolvedFilter","getEvents","getEventsTab","getEventsToShow","eventsToShow","distance","userLocation","haversine","nEvent","getMapEventsToShow","getLastEventShowed","amIParticipating","found","find","participantID","setLanguageInvolvedFilter","setEventsTab","removeEventByID","indexEventsToShowIDs","indexMapEventsToShowIDs","resetEventsToShowIDs","addEvent","addEventToShow","addMapEventToShow","setLastEventShowed","eventCoordinates","dataToUpdate","localEvent","toString","city","place","address","updatesValues","entries","eventLocation","eventNonFormattedLoc","getAllEvents","getEventParticipants","chatsToShowIDs","chatListListener","chatMessagesListeners","usernameFilter","getChatsToShowIDs","getChatMessagesByChatID","getUnreadMessagesByChatID","myID","unreadMessages","read","getUnreadMessages","count","getChatsToShow","chatsToShow","auxChat","lastMessage","lowNotMe","getUserByChatID","includes","getNotReadMessagesCountByChatID","addChatMessagesListener","listener","updateChatMessages","index","mMessage","addChatToShow","sortChatsToShowByLastMessage","compareChatsByLastMessageDate","a","b","chatALastMessageDate","chatBLastMessageDate","setUsernameFilter","setChatListListener","pushChatMessages","mp","alreadyAdded","manageChatListChange","manageChatMessagesChange","newMessages","modifiedMessagesToRead","modifiedMessagesDated","setChatMessagesToReadByChatID","sendNewChatMessage","messageText","createChatListeners","rankingUsers","rankingUsersIDs","getRankingUsersToShow","rus","ru","getRankedUserByIndex","getRankingUsers","setRankingUsers","addRankingUserID","rankingUserID","top100Users","getPagedRankingUsers","newUserShowed","pageEnding","areThereMoreRankingUsersToShow","Store","ranking","appInfoLoaded","getAppInfoLoaded","setAppInfoLoaded","getLoggedUser","resetAppState","$i18n","initAppInfo","Router","router","base","process","routes","redirect","Home","meta","requiresAuth","children","menu","beforeEach","to","from","next","auth","matched","some","record","store","registrationState","register","ready","registered","cached","updatefound","updated","offline","Vuetify","VTextField","icons","iconfont","theme","themes","light","primary","secondary","thirdary","accent","info","success","warning","components","VueChatScroll","VueGoogleMaps","load","libraries","config","productionTip","app","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","storage","messaging","onAuthStateChanged","render","h","App","vuetify","$mount","VuetifyGoogleAutocomplete"],"mappings":"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","file":"js/app.930f9f42.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-25c771b8\":\"83503bd3\",\"chunk-20d8013b\":\"8038ff87\",\"chunk-014fb837\":\"dfd4ecc2\",\"chunk-7ef6b764\":\"22dcd313\",\"chunk-3b63178d\":\"83f8d6d1\",\"chunk-28e4efe2\":\"b40884ad\",\"chunk-4d7591bf\":\"beefb3cf\",\"chunk-6cc23625\":\"4846e87d\",\"chunk-1bfdcb26\":\"490b1e43\",\"chunk-384c73f6\":\"bef7fa25\",\"chunk-39e2aeca\":\"698bd9bc\",\"chunk-d95f6404\":\"39e41c90\",\"chunk-0062ab72\":\"18e899fb\",\"chunk-a3f747da\":\"f18ac858\",\"chunk-11350bc4\":\"309814ec\",\"chunk-14b9bb78\":\"f4dccb68\",\"chunk-382272b3\":\"174f785c\",\"chunk-d6467d40\":\"ceb406ba\",\"chunk-2d0b9607\":\"7aaa6831\",\"chunk-2d0ceaf1\":\"6a64fef7\",\"chunk-2d213713\":\"6fef66ec\",\"chunk-07faa12f\":\"81ad80c3\",\"chunk-38d17488\":\"99d97a73\",\"chunk-5ff0355c\":\"ee550364\",\"chunk-59fedc16\":\"160c21a1\",\"chunk-9bf12744\":\"79aab246\",\"chunk-3417d63c\":\"21ad4692\",\"chunk-6100152e\":\"f115024a\",\"chunk-b648f4e6\":\"ebde550c\",\"chunk-7b29b94c\":\"ae590114\",\"chunk-1ba8e311\":\"653abffd\",\"chunk-1bcecc20\":\"40cbd4b2\",\"chunk-0256ba59\":\"5ce51659\",\"chunk-c6d03f52\":\"bf90d839\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-25c771b8\":1,\"chunk-20d8013b\":1,\"chunk-014fb837\":1,\"chunk-7ef6b764\":1,\"chunk-3b63178d\":1,\"chunk-28e4efe2\":1,\"chunk-4d7591bf\":1,\"chunk-6cc23625\":1,\"chunk-1bfdcb26\":1,\"chunk-384c73f6\":1,\"chunk-39e2aeca\":1,\"chunk-d95f6404\":1,\"chunk-0062ab72\":1,\"chunk-a3f747da\":1,\"chunk-11350bc4\":1,\"chunk-14b9bb78\":1,\"chunk-d6467d40\":1,\"chunk-07faa12f\":1,\"chunk-38d17488\":1,\"chunk-5ff0355c\":1,\"chunk-9bf12744\":1,\"chunk-3417d63c\":1,\"chunk-6100152e\":1,\"chunk-b648f4e6\":1,\"chunk-7b29b94c\":1,\"chunk-1ba8e311\":1,\"chunk-1bcecc20\":1,\"chunk-0256ba59\":1,\"chunk-c6d03f52\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-25c771b8\":\"0fea8ff0\",\"chunk-20d8013b\":\"3d60cca4\",\"chunk-014fb837\":\"0993e8a4\",\"chunk-7ef6b764\":\"2a012898\",\"chunk-3b63178d\":\"39446fbf\",\"chunk-28e4efe2\":\"a7aa8c19\",\"chunk-4d7591bf\":\"10778335\",\"chunk-6cc23625\":\"9d9ff020\",\"chunk-1bfdcb26\":\"10778335\",\"chunk-384c73f6\":\"5c1b4a8f\",\"chunk-39e2aeca\":\"10778335\",\"chunk-d95f6404\":\"f2aebfb2\",\"chunk-0062ab72\":\"04a99269\",\"chunk-a3f747da\":\"714ab32f\",\"chunk-11350bc4\":\"c36f255f\",\"chunk-14b9bb78\":\"12362d7a\",\"chunk-382272b3\":\"31d6cfe0\",\"chunk-d6467d40\":\"0a4f775e\",\"chunk-2d0b9607\":\"31d6cfe0\",\"chunk-2d0ceaf1\":\"31d6cfe0\",\"chunk-2d213713\":\"31d6cfe0\",\"chunk-07faa12f\":\"7b831379\",\"chunk-38d17488\":\"cb828e31\",\"chunk-5ff0355c\":\"48f43873\",\"chunk-59fedc16\":\"31d6cfe0\",\"chunk-9bf12744\":\"7f907a80\",\"chunk-3417d63c\":\"f613719f\",\"chunk-6100152e\":\"c26d33b7\",\"chunk-b648f4e6\":\"6bade0ac\",\"chunk-7b29b94c\":\"f613719f\",\"chunk-1ba8e311\":\"f613719f\",\"chunk-1bcecc20\":\"f613719f\",\"chunk-0256ba59\":\"d595a527\",\"chunk-c6d03f52\":\"10778335\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default{\r\n\r\n    /* RULES */\r\n    RULE_MIN_VALUE_CHARACTERS_USERNAME: 5,\r\n    RULE_MAX_VALUE_CHARACTERS_USERNAME: 14,\r\n    RULE_MIN_VALUE_CHARACTERS_USER_DESCRIPTION: 20,\r\n    RULE_MIN_VALUE_AGE: 16,\r\n    RANKING_PAGE_SIZE: 10,\r\n    MAX_RANKING_PAGE_SIZE: 100,\r\n    SEARCHED_USERS_PAGE_SIZE: 5, //Allways SEARCHED_USERS_PAGE_SIZE >= 2\r\n    EVENTS_PAGE_SIZE: 1,\r\n\r\n    /* DATA */\r\n    MIN_USER_AGE: 16,\r\n    MAX_USER_AGE: 100,\r\n\r\n    /* IMAGES */\r\n    IMG_EMOJI_SAD_FACE: 'img/emojis/sad_face.png'\r\n}\r\n","export default {\r\n    // @vuese\r\n    // Comprueba si dos arrays contienen los mismos elementos\r\n    // @arg Array 1\r\n    // @arg Array 2\r\n    arraysContainSameElements: function (arr1, arr2) {\r\n        if (!Array.isArray(arr1) || !Array.isArray(arr2) || arr1.length !== arr2.length)\r\n            return false;\r\n\r\n        var arr1_aux = arr1.concat().sort();\r\n        var arr2_aux = arr2.concat().sort();\r\n\r\n        for (var i = 0; i < arr1_aux.length; i++) {\r\n\r\n            if (arr1_aux[i] !== arr2_aux[i])\r\n                return false;\r\n\r\n        }\r\n        return true;\r\n    },\r\n\r\n    // @vuese\r\n    // Genera el ID de un chat entre dos usuarios\r\n    // @arg ID de usuario 1\r\n    // @arg ID de usuario 2\r\n    generateChatID(id1, id2) {\r\n        let chatID;\r\n\r\n        if (id1 < id2) {\r\n            chatID = id1 + id2;\r\n        } else {\r\n            chatID = id2 + id1;\r\n        }\r\n\r\n        return chatID;\r\n    },\r\n\r\n    // @vuese\r\n    // No realiza ninguna acción\r\n    emptyCallback: function () {\r\n    },\r\n\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{staticStyle:{\"max-width\":\"100%\",\"height\":\"100%\"}},[(_vm.dataIsReady)?_c('router-view',{staticStyle:{\"max-width\":\"100%\",\"height\":\"100%\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <v-app style=\"max-width: 100%; height: 100%;\">\n        <router-view v-if=\"dataIsReady\" style=\"max-width: 100%; height: 100%;\"/>\n    </v-app>\n</template>\n\n<script>\n    import {mapActions} from 'vuex';\n\n    // Componente principal de la aplicación\n    // @group General\n    export default {\n        name: 'App',\n        components: {},\n        data() {\n            return {\n                dataIsReady: false\n            }\n        },\n        methods: {\n            ...mapActions('user', ['getRegistrationState', 'initState']),\n            ...mapActions(['getLoggedUser']),\n            // @vuese\n            // Inicializa la aplicación obteniendo los datos de la misma en función de si el usuario está o no loggeado y redirigiendo a esta a una parte de la aplicación u otra en consecuencia\n            initialize: function () {\n                let self = this;\n                self.getLoggedUser().then(currentUser => {\n                    if (currentUser != null && currentUser != undefined) {\n                        // user is logged in\n                        let resultInitAppInfo = self.initState();\n\n                        resultInitAppInfo\n                            .then(() => {\n                                self.dataIsReady = true;\n                            })\n                            .catch((error) => {\n                                self.snackbarText = error;\n                                self.snackbar = true;\n                            });\n                    } else {\n                        self.$store.dispatch('resetAppState').then(() => {\n                            self.$router.replace('home');\n                        })\n                            .catch((error) => {\n                                self.snackbarText = error;\n                                self.snackbar = true;\n                            });\n\n                        self.dataIsReady = true;\n                        console.log(\"No user logged\");\n                    }\n                });\n            }\n        },\n        created() {\n            this.initialize();\n        }\n    };\n</script>\n\n<style>\n</style>","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=ab02458e&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\ninstallComponents(component, {VApp})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"img-back\",staticStyle:{\"position\":\"relative\",\"height\":\"100%!important\"}},[_c('v-container',{staticClass:\"home justify-center text-center\",staticStyle:{\"height\":\"100%\",\"position\":\"relative\",\"width\":\"100%\"},attrs:{\"align\":\"center\"}},[_c('p',{staticClass:\"white--text\"},[_vm._v(\"webabble.es\")]),_c('div',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"12vh\"},attrs:{\"align\":\"center\"}},[_c('img',{staticStyle:{\"width\":\"44vw\",\"max-width\":\"200px\"},attrs:{\"src\":require(\"../assets/WhiteLogoWeBabble.png\")}}),_c('p',{staticClass:\"white--text slogan\"},[_c('i',[_vm._v(_vm._s(_vm.sloganText))])])]),_c('div',{staticClass:\"bottom-centered-buttons\",staticStyle:{\"margin-bottom\":\"20px\",\"max-width\":\"600px\"},attrs:{\"align\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"94%\"},attrs:{\"align\":\"center\"}},[_c('v-btn',{staticClass:\"white primary--text\",staticStyle:{\"width\":\"100%\"},attrs:{\"rounded\":\"\"},on:{\"click\":function($event){return _vm.$router.push({name: 'signUp'})}}},[_vm._v(\" \"+_vm._s(_vm.createAnAccountText)+\" \")])],1),_c('br'),_c('div',{staticStyle:{\"width\":\"94%\"},attrs:{\"align\":\"center\"}},[_c('v-btn',{staticClass:\"white primary--text\",staticStyle:{\"width\":\"100%\"},attrs:{\"rounded\":\"\"},on:{\"click\":function($event){return _vm.$router.push({name: 'login'})}}},[_vm._v(\" \"+_vm._s(_vm.toLogInText)+\" \")])],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"img-back\" style=\"position: relative; height: 100%!important;\">\n        <v-container class=\"home justify-center text-center\" style=\"height: 100%; position: relative; width: 100%\"\n                     align=\"center\">\n            <p class=\"white--text\">webabble.es</p>\n\n            <div align=\"center\" style=\"width: 100%; margin-top: 12vh\">\n                <img style=\"width: 44vw; max-width: 200px\" src=\"../assets/WhiteLogoWeBabble.png\"/>\n                <p class=\"white--text slogan\"><i>{{sloganText}}</i></p>\n            </div>\n\n            <div class=\"bottom-centered-buttons\" align=\"center\" style=\"margin-bottom: 20px; max-width: 600px\">\n                <div align=\"center\" style=\"width: 94%\">\n                    <v-btn class=\"white primary--text\" rounded @click=\"$router.push({name: 'signUp'})\"\n                           style=\"width: 100%;\">\n                        {{createAnAccountText}}\n                    </v-btn>\n                </div>\n                <br>\n                <div align=\"center\" style=\"width: 94%\">\n                    <v-btn class=\"white primary--text\" rounded @click=\"$router.push({name: 'login'})\"\n                           style=\"width: 100%\">\n                        {{toLogInText}}\n                    </v-btn>\n                </div>\n            </div>\n        </v-container>\n    </div>\n\n</template>\n\n<script>\n    // Página de entrada a la aplicación\n    // @group General\n    export default {\n        name: \"Home\",\n        computed: {\n            // @vuese\n            // Devuelve el texto de crear cuenta en formato i18n\n            createAnAccountText: function () {\n                return this.$i18n.t('messages.TEXT_CREATE_AN_ACCOUNT');\n            },\n            // @vuese\n            // Devuelve el texto de iniciar sesión en formato i18n\n            toLogInText: function () {\n                return this.$i18n.t('messages.TEXT_TO_LOG_IN');\n            },\n            // @vuese\n            // Devuelve el eslógan de WeBabble en formato i18n\n            sloganText: function () {\n                return this.$i18n.t('messages.TEXT_WE_BABBLE_SLOGAN');\n            }\n        }\n    };\n</script>\n\n<style scoped>\n    .bottom-centered-buttons {\n        width: 92.5%;\n        bottom: 5%;\n        left: 50%;\n        transform: translate(-50%, 0);\n        position: fixed;\n    }\n\n    .slogan {\n        font-family: \"Arial\", sans-serif;\n    }\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=45b87d34&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=45b87d34&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"45b87d34\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VContainer})\n","export default {\r\n    messages: {\r\n        es: {\r\n            messages: {\r\n                /* ERRORS */\r\n                ERROR_GENERIC_PROBLEM: 'Parece que ha habido un problema con tu petición. Por favor, vuelve a intentarlo más tarde.',\r\n                ERROR_GENERIC_CONNECTION_PROBLEM: 'Parece que ha habido un problema de conexión. Por favor, vuelve a intentarlo más tarde.',\r\n                ERROR_GENERIC_DATABASE_PROBLEM: 'Parece que ha habido un problema con la base de datos. Por favor, vuelve a intentarlo más tarde.',\r\n                ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_EMAIL: 'Ya existe una cuenta registrada con ese E-mail. Si es tuya, prueba a iniciar sesión-',\r\n                ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_USERNAME: 'Ya existe un usuario con ese nombre.',\r\n                ERROR_WRONG_EMAIL_PASSWORD_COMBINATION: 'No existe una cuenta registrada con este E-mail o la contraseña es incorrecta.',\r\n                ERROR_UPLOADING_IMAGE: 'Error subiendo la imagen.',\r\n                ERROR_SOMETHING_HAPPENED: 'Parece que ha ocurrido un error.',\r\n                ERROR_API_FILEREADER_NOT_SUPPORTED: 'Lo sentimos, la API FileReader no está soportada.',\r\n                ERROR_PASSWORDS_DONT_MATCH: 'Las contraseñas no coinciden',\r\n                ERROR_TOO_MANY_REQUESTS: 'Parece que has realizado demasiadas peticiones en poco tiempo. Por favor, vuelve a intentarlo más tarde.',\r\n                ERROR_TEXT_WRONG_PASSWORD: 'Parece que la contraseña introducida no coincide con su contraseña actual.',\r\n                ERROR_NO_ACCOUNT_WITH_THIS_EMAIL: 'Parece que no hay ninguna cuenta registrada con este E-mail.',\r\n                ERROR_GETTING_CURRENT_LOCATION: 'Parece que ha habido un problema accediendo a su ubicación actual.',\r\n                ERROR_COULD_NOT_SET_YOUR_RATING: 'Parece que ha habido un problema: No se ha podido guardar su valoración.',\r\n                ERROR_PROBLEM_RETRIEVING_RANKING: 'Parece que ha habido un problema al cargar el ranking. Por favor, comprueba tu conexión.',\r\n                ERROR_PROBLEM_GETTING_CURRENT_LOCATION: 'Parece que ha habido un problema: no se ha podido obtener tu localizacion actual.',\r\n                ERROR_PROBLEM_GETTING_NEARBY_USERS: 'Parece que ha habido un problema: no se han podido obtener los usuarios cercanos.',\r\n                ERROR_PROBLEM_GETTING_EVENTS: 'Parece que ha habido un problema: no se han podido obtener los eventos.',\r\n\r\n                /* RULES */\r\n                RULE_TEXT_MANDATORY_FIELD: 'Este campo es obligatorio',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_USERNAME: 'Mínimo 5 caracteres',\r\n                RULE_TEXT_MAX_VALUE_CHARACTERS_USERNAME: 'Máximo 14 caracteres',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_USERNAME_TO_START_SEARCHING: 'Mínimo 5 caracteres para realizar la búsqueda',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_USER_DESCRIPTION: 'Mínimo 20 caracteres',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_PASSWORD: 'Mínimo 8 caracteres',\r\n                RULE_YOU_HAVE_TO_BE_AT_LEAST_X_YEARS_OLD_TO_REGISTER: 'Debes tener al menos {age} años.',\r\n                RULE_INVALID_DATE: 'Fecha no válida',\r\n                RULE_TEXT_SELECT_RECOMMENDED_ADDRESS: 'Selecciona una de las direcciones recomendadas',\r\n\r\n                /* INSTRUCTIONS */\r\n                ASK_FOR_IMAGE_SELECTION: 'Por favor, selecciona una imagen',\r\n                TEXT_VERIFICATION_EMAIL_SENT_TO: 'Para poder continuar, completa el proceso de verificación a través del enlace que hemos enviado a tu E-mail:',\r\n                TEXT_FILL_FIELDS_CORRECTLY: 'Por favor, completa correctamente todos los campos.',\r\n\r\n                /* TEXTS */\r\n                TEXT_LANGUAGES_YOU_WANT_TO_IMPROVE: '¿Qué idiomas buscas mejorar?',\r\n                TEXT_LANGUAGES_YOU_WANT_TO_PRACTICE: 'Idiomas que quieres practicar',\r\n                TEXT_LANGUAGES_YOU_SPEAK_FLUENTLY: '¿Qué idiomas hablas con soltura?',\r\n                TEXT_MOTHER_LANGUAGES: 'Idiomas maternos',\r\n                TEXT_LANGUAGE_HE_SHE_WANT_TO_IMPROVE: 'Idioma que busca mejorar',\r\n                TEXT_LANGUAGE_HE_SHE_WANT_TO_PRACTICE: 'Idioma que quiere practicar',\r\n                TEXT_LANGUAGE_HE_SHE_SPEAK_FLUENTLY: 'Idioma que habla con soltura',\r\n                TEXT_MOTHER_LANGUAGE: 'Idioma materno',\r\n                TEXT_LANGUAGE: 'Idioma',\r\n                TEXT_GENDER: 'Género',\r\n                TEXT_DISTANCE: 'Distancia',\r\n                TEXT_AGE: 'Edad',\r\n                TEXT_FILTER_BY_MOTHER_LANGUAGE: 'Filtrar por idioma materno',\r\n                TEXT_FILTER_BY_LANGUAGE_TO_LEARN: 'Filtrar por idioma que quiere practicar',\r\n                TEXT_SEARCH: 'Buscar',\r\n                TEXT_NO_FIT_USERS_TO_LIST: 'No se han encontrado usuarios que cumplan con los requisitos.',\r\n                TEXT_FILTERS: 'Filtros',\r\n                TEXT_RATE_USER: 'Valora al usuario',\r\n                TEXT_YOU: 'Tú',\r\n                TEXT_CANCEL: 'Cancelar',\r\n                TEXT_RATE: 'Valorar',\r\n                TEXT_REMOVE: 'Eliminar',\r\n                TEXT_NO_LIMIT: 'Sin límite',\r\n                TEXT_REMOVE_FILTERS: 'Eliminar filtros',\r\n                TEXT_YOUR_PROFILE: 'Tu perfil',\r\n                TEXT_EDIT: 'Editar',\r\n                TEXT_EDIT_PROFILE: 'Editar perfil',\r\n                TEXT_USERS: 'Usuarios',\r\n                TEXT_TO_FILTER: 'Filtrar',\r\n                TEXT_EVENTS: 'Eventos',\r\n                TEXT_RANKING: 'Ranking',\r\n                TEXT_CHATS: 'Chats',\r\n                TEXT_CLOSE: 'Cerrar',\r\n                TEXT_SHOW_USERS: 'Mostrar usuarios',\r\n                TEXT_OF: 'de',\r\n                TEXT_CREATE_YOUR_ACCOUNT: 'Crea tu cuenta',\r\n                TEXT_CREATE_AN_ACCOUNT: 'Crear una cuenta',\r\n                TEXT_NAME: 'Nombre',\r\n                TEXT_LASTNAME: 'Apellidos',\r\n                TEXT_EMAIL: 'E-mail',\r\n                TEXT_EMAIL_DIRECTION: 'Correo electrónico',\r\n                TEXT_PASSWORD: 'Contraseña',\r\n                TEXT_REPEAT_PASSWORD: 'Repite la contraseña',\r\n                TEXT_REGISTER: 'Registrar',\r\n                TEXT_REGISTER_NOW: '¡Regístrate ahora!',\r\n                TEXT_ALREADY_HAVE_AN_ACCOUNT: '¿Ya tienes una cuenta?',\r\n                TEXT_ACCESS_NOW: '¡Accede ahora!',\r\n                TEXT_ACCESS_TO_YOUR_ACCOUNT: 'Accede a tu cuenta',\r\n                TEXT_VERIFY_YOUR_EMAIL: 'Verifica tu E-mail',\r\n                TEXT_USERNAME: 'Nombre de usuario',\r\n                TEXT_FILL_YOUR_PROFILE: 'Rellena tu perfil',\r\n                TEXT_BIRTHDATE: 'Fecha de nacimiento',\r\n                TEXT_TELL_US_A_LITTLE_ABOUT_YOU: 'Cuéntanos un poco sobre ti',\r\n                TEXT_TO_CONTINUE: 'Continuar',\r\n                TEXT_YOUR_LANGUAGES: 'Tus idiomas',\r\n                TEXT_WOMAN: 'Mujer',\r\n                TEXT_MAN: 'Hombre',\r\n                TEXT_ANY: 'Cualquiera',\r\n                TEXT_OTHER: 'Otro',\r\n                TEXT_CHOOSE_YOUR_PROFILE_IMAGE: 'Elige tu foto de perfil',\r\n                TEXT_PROFILE_IMAGE: 'Foto de perfil',\r\n                TEXT_EMAIL_NOT_VALID: 'E-mail no válido',\r\n                TEXT_USERNAME_NOT_VALID: 'Nombre de usuario no válido',\r\n                TEXT_HAVE_YOU_FORGOTTEN_YOUR_PASSWORD: '¿Has olvidado tu contraseña?',\r\n                TEXT_STILL_DONT_HAVE_AN_ACCOUNT: '¿Todavía no tienes una cuenta?',\r\n                TEXT_TO_LOG_IN: 'Iniciar sesión',\r\n                TEXT_TO_LOG_OUT: 'Cerrar sesión',\r\n                TEXT_RESEND_EMAIL: 'Volver a enviar E-mail',\r\n                TEXT_YOU_ARE_ABOUT_TO_LOG_OUT: 'Va a salir de su cuenta',\r\n                TEXT_CONFIRM: 'Confirmar',\r\n                TEXT_ARE_YOU_SURE_YOU_WANT_TO_LOG_OUT: '¿Estás seguro de que quieres cerrar sesión?',\r\n                TEXT_PROFILE_INFO: 'Información de perfil',\r\n                TEXT_LANGUAGES_TO_PRACTICE: 'Idiomas a practicar',\r\n                TEXT_SAVE: 'Guardar',\r\n                TEXT_SETTINGS: 'Configuración e información',\r\n                TEXT_ACCOUNT: 'Cuenta',\r\n                TEXT_PERMISSIONS: 'Permisos',\r\n                TEXT_NAME_AND_LASTNAME: 'Nombre y apellidos',\r\n                TEXT_CHANGE_NAME_AND_LASTNAME: 'Cambiar nombre y apellidos',\r\n                TEXT_CHANGE_EMAIL: 'Cambiar correo electrónico',\r\n                TEXT_UPDATE: 'Actualizar',\r\n                TEXT_VERIFY_YOUR_PASSWORD: 'Verifica tu contraseña',\r\n                TEXT_REMOVE_ACCOUNT: 'Borrar cuenta',\r\n                TEXT_INTRODUCE_YOUR_PASSWORD_TO_CONTINUE: 'Vuelve a introducir tu contraseña de WeBabble para continuar.',\r\n                TEXT_YOUR_EMAIL_HAS_BEEN_UPDATED: 'Tu dirección de correo electrónico ha sido actualizada.',\r\n                TEXT_YOUR_PASSWORD_HAS_BEEN_UPDATED: 'Tu contraseña ha sido actualizada.',\r\n                TEXT_CHANGE_PASSWORD: 'Cambiar contraseña',\r\n                TEXT_CURRENT_PASSWORD: 'Contraseña actual',\r\n                TEXT_NEW_PASSWORD: 'Nueva contraseña',\r\n                TEXT_CONFIRM_PASSWORD: 'Confirmar la contraseña',\r\n                TEXT_UPDATE_PASSWORD: 'Actualizar contraseña',\r\n                TEXT_ENTER_YOUR_EMAIL_TO_RESET_YOUR_PASSWORD: 'Introduce tu E-mail y te ayudaremos a recuperar la contraseña:',\r\n                TEXT_RESET_PASSWORD: 'Restablecer contraseña',\r\n                TEXT_RESET_PASSWORD_INSTRUCTIONS: 'En un breve período de tiempo recibirás un email. Ábrelo y sigue las instrucciones para restablecer tu contraseña.',\r\n                TEXT_SPACE_YEARS: ' años',\r\n                TEXT_PARTICIPANTS: 'Participantes',\r\n                TEXT_NO_PARTICIPANTS_YET: 'Parece que todavía no se ha apuntado nadie. ¡Sé el primero!',\r\n                TEXT_VERIFICATION_EMAIL_SENT: 'E-mail de verificación enviado.',\r\n                TEXT_NO_USERS_MATCH_SEARCH: 'Parece que no hay usuarios que coincidan con tu búsqueda.',\r\n                TEXT_NO_EVENTS_AVAILABLE: 'Parece que no hay eventos disponibles.',\r\n                TEXT_NO_CHATS_AVAILABLE: 'Parece que no tienes ningún chat todavía. ¡Comienza a hablar con algún usuario!',\r\n                TEXT_NO_CHATS_MATCH_SEARCH: 'Parece que no tienes chats con usuarios que coincidan con tu búsqueda.',\r\n                TEXT_LANGUAGE_INVOLVED_IN_EVENTS: 'Idiomas de los eventos',\r\n                TEXT_LOCATION_PERMISSION_NOT_GRANTED: 'Parece que no has dado permiso para acceder a tu localización. Concédelo para poder disponer de esta funcionalidad.',\r\n                TEXT_CONFIRM_EVENT_PARTICIPATION: 'Te has apuntado a este evento.',\r\n                TEXT_CANCEL_EVENT_PARTICIPATION: 'Has cancelado tu participación en este evento.',\r\n                TEXT_APP_LANGUAGE: 'Idioma',\r\n                TEXT_LANGUAGE_OF_APP: 'Idioma de la aplicación',\r\n                TEXT_LANGUAGE_DE: 'Alemán',\r\n                TEXT_LANGUAGE_ZH: 'Chino',\r\n                TEXT_LANGUAGE_ES: 'Español',\r\n                TEXT_LANGUAGE_FR: 'Francés',\r\n                TEXT_LANGUAGE_EN: 'Inglés',\r\n                TEXT_LANGUAGE_IT: 'Italiano',\r\n                TEXT_LANGUAGE_JA: 'Japonés',\r\n                TEXT_LANGUAGE_PT: 'Portugués',\r\n                TEXT_LANGUAGE_ALL: 'Cualquier idioma',\r\n                TEXT_WE_BABBLE_SLOGAN: 'Aprender idiomas ahora es más fácil',\r\n                TEXT_LOCATION: 'Ubicación',\r\n                TEXT_NOTIFICATIONS: 'Notificaciones',\r\n                TEXT_GRANTED: 'Concedido',\r\n                TEXT_NOT_GRANTED: 'No concedido',\r\n                TEXT_CREATE_EVENT: 'Crear evento',\r\n                TEXT_PUBLISH: 'Publicar',\r\n                TEXT_DATE: 'Fecha',\r\n                TEXT_DESCRIPTION: 'Descripción',\r\n                TEXT_LANGUAGES: 'Idiomas',\r\n                TEXT_INFORMATION: 'Información',\r\n                TEXT_HEADER_IMAGE: 'Imagen de cabecera',\r\n                TEXT_PLACE: 'Lugar',\r\n                TEXT_ADDRESS: 'Dirección',\r\n                TEXT_YOU_ARE_ABOUT_TO_REMOVE_EVENT: 'Vas a borrar este evento',\r\n                TEXT_ARE_YOU_SURE_YOU_WANT_TO_REMOVE_EVENT: '¿Estás seguro de que quieres borrar este evento?',\r\n                TEXT_EDIT_EVENT: 'Editar evento'\r\n            }\r\n        },\r\n        en: {\r\n            messages: {\r\n                /* ERRORS */\r\n                ERROR_GENERIC_PROBLEM: 'It seems that there has been a problem with your request. Please, try again later.',\r\n                ERROR_GENERIC_CONNECTION_PROBLEM: 'It seems that there has been a connection problem. Please, try again later.',\r\n                ERROR_GENERIC_DATABASE_PROBLEM: 'It seems that there has been a database problem. Please, try again later.',\r\n                ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_EMAIL: 'There is already an account registered with this E-mail. If this account is yours, try to log in.',\r\n                ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_USERNAME: 'This username is already in use.',\r\n                ERROR_WRONG_EMAIL_PASSWORD_COMBINATION: 'There is no account registered with this E-mail or the password is incorrect.',\r\n                ERROR_UPLOADING_IMAGE: 'Error uploading the image.',\r\n                ERROR_SOMETHING_HAPPENED: 'It seems that there has been an error.',\r\n                ERROR_API_FILEREADER_NOT_SUPPORTED: 'We are sorry, the FileReader API is not supported by your browser.',\r\n                ERROR_PASSWORDS_DONT_MATCH: 'Passwords do not match.',\r\n                ERROR_TOO_MANY_REQUESTS: 'It seems that you made several request in a short time. Please, try again later.',\r\n                ERROR_TEXT_WRONG_PASSWORD: 'It seems that the introduced password does not match your current password.',\r\n                ERROR_NO_ACCOUNT_WITH_THIS_EMAIL: 'It seems that there is no account registered with this E-mail.',\r\n                ERROR_GETTING_CURRENT_LOCATION: 'It seems that there was a problem accessing your current location.',\r\n                ERROR_COULD_NOT_SET_YOUR_RATING: 'It seems that there was a problem: your rate could not be submitted.',\r\n                ERROR_PROBLEM_RETRIEVING_RANKING: 'It seems that there was a problem while loading Ranking. Please, check your connection.',\r\n                ERROR_PROBLEM_GETTING_CURRENT_LOCATION: 'It seems that there was a problem: we could not access your current location.',\r\n                ERROR_PROBLEM_GETTING_NEARBY_USERS: 'It seems that there was a problem: we could not retrieve nearby users.',\r\n                ERROR_PROBLEM_GETTING_EVENTS: 'It seems that there was a problem: we could not retrieve events.',\r\n\r\n                /* RULES */\r\n                RULE_TEXT_MANDATORY_FIELD: 'This field is required.',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_USERNAME: 'Minimum 5 characters.',\r\n                RULE_TEXT_MAX_VALUE_CHARACTERS_USERNAME: 'Maximum 14 characters.',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_USERNAME_TO_START_SEARCHING: 'Write at least 5 to search.',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_USER_DESCRIPTION: 'Minimum 20 characters.',\r\n                RULE_TEXT_MIN_VALUE_CHARACTERS_PASSWORD: 'Minimum 8 characters.',\r\n                RULE_YOU_HAVE_TO_BE_AT_LEAST_X_YEARS_OLD_TO_REGISTER: 'You have to be at least {age} years old.',\r\n                RULE_INVALID_DATE: 'Invalid date',\r\n                RULE_TEXT_SELECT_RECOMMENDED_ADDRESS: 'Select one of the recommended addresses',\r\n\r\n                /* INSTRUCTIONS */\r\n                ASK_FOR_IMAGE_SELECTION: 'Please, select an image.',\r\n                TEXT_VERIFICATION_EMAIL_SENT_TO: 'In order to continue, complete the verification process through the link we have sent to your E-mail:',\r\n                TEXT_FILL_FIELDS_CORRECTLY: 'Please, complete all fields correctly.',\r\n\r\n                /* TEXTS */\r\n                TEXT_DESCRIPTION: 'Description',\r\n                TEXT_LANGUAGES_YOU_WANT_TO_IMPROVE: 'What languages do you want to improve?',\r\n                TEXT_LANGUAGES_YOU_WANT_TO_PRACTICE: 'Languages ​​you want to practice',\r\n                TEXT_LANGUAGES_YOU_SPEAK_FLUENTLY: 'What languages ​​do you speak fluently?',\r\n                TEXT_MOTHER_LANGUAGES: 'First languages',\r\n                TEXT_LANGUAGE_HE_SHE_WANT_TO_IMPROVE: 'Language you are looking to improve',\r\n                TEXT_LANGUAGE_HE_SHE_WANT_TO_PRACTICE: 'Language you want to practice',\r\n                TEXT_LANGUAGE_HE_SHE_SPEAK_FLUENTLY: 'Language you speak fluently',\r\n                TEXT_MOTHER_LANGUAGE: 'First language',\r\n                TEXT_LANGUAGE: 'Language',\r\n                TEXT_GENDER: 'Gender',\r\n                TEXT_DISTANCE: 'Distance',\r\n                TEXT_AGE: 'Age',\r\n                TEXT_FILTER_BY_MOTHER_LANGUAGE: 'Filter by mother tongue',\r\n                TEXT_FILTER_BY_LANGUAGE_TO_LEARN: 'Filter by language they want to practice.',\r\n                TEXT_SEARCH: 'Search',\r\n                TEXT_NO_FIT_USERS_TO_LIST: 'No users found that meet the requirements.',\r\n                TEXT_FILTERS: 'Filters',\r\n                TEXT_RATE_USER: 'Rate user',\r\n                TEXT_YOU: 'You',\r\n                TEXT_CANCEL: 'Cancel',\r\n                TEXT_RATE: 'Rate',\r\n                TEXT_REMOVE: 'Remove',\r\n                TEXT_NO_LIMIT: 'Limitless',\r\n                TEXT_REMOVE_FILTERS: 'Remove filters',\r\n                TEXT_YOUR_PROFILE: 'Your profile',\r\n                TEXT_EDIT: 'Edit',\r\n                TEXT_EDIT_PROFILE: 'Edit profile',\r\n                TEXT_USERS: 'Users',\r\n                TEXT_TO_FILTER: 'Filter',\r\n                TEXT_EVENTS: 'Events',\r\n                TEXT_RANKING: 'Ranking',\r\n                TEXT_CHATS: 'Chats',\r\n                TEXT_CLOSE: 'Close',\r\n                TEXT_SHOW_USERS: 'Show users',\r\n                TEXT_OF: 'of',\r\n                TEXT_CREATE_YOUR_ACCOUNT: 'Create your account',\r\n                TEXT_CREATE_AN_ACCOUNT: 'Create an account',\r\n                TEXT_NAME: 'Name',\r\n                TEXT_LASTNAME: 'Last name',\r\n                TEXT_EMAIL: 'E-mail',\r\n                TEXT_EMAIL_DIRECTION: 'E-mail',\r\n                TEXT_PASSWORD: 'Password',\r\n                TEXT_REPEAT_PASSWORD: 'Repeat password',\r\n                TEXT_REGISTER: 'Sign up',\r\n                TEXT_REGISTER_NOW: 'Sign up now!',\r\n                TEXT_ALREADY_HAVE_AN_ACCOUNT: 'Do you already have an account?',\r\n                TEXT_ACCESS_NOW: 'Access now!',\r\n                TEXT_ACCESS_TO_YOUR_ACCOUNT: 'Log in into your account',\r\n                TEXT_VERIFY_YOUR_EMAIL: 'Verify your E-mail',\r\n                TEXT_USERNAME: 'Username',\r\n                TEXT_PROFILE_IMAGE: 'Profile image',\r\n                TEXT_FILL_YOUR_PROFILE: 'Fill your profile',\r\n                TEXT_BIRTHDATE: 'Date of birth',\r\n                TEXT_TELL_US_A_LITTLE_ABOUT_YOU: 'Tell us a bit about yourself',\r\n                TEXT_TO_CONTINUE: 'Continue',\r\n                TEXT_YOUR_LANGUAGES: 'Your languages',\r\n                TEXT_WOMAN: 'Woman',\r\n                TEXT_MAN: 'Man',\r\n                TEXT_ANY: 'Any',\r\n                TEXT_OTHER: 'Other',\r\n                TEXT_CHOOSE_YOUR_PROFILE_IMAGE: 'Choose your profile picture',\r\n                TEXT_EMAIL_NOT_VALID: 'Invalid E-mail',\r\n                TEXT_USERNAME_NOT_VALID: 'Invalid username',\r\n                TEXT_HAVE_YOU_FORGOTTEN_YOUR_PASSWORD: '¿Has olvidado tu contraseña?',\r\n                TEXT_STILL_DONT_HAVE_AN_ACCOUNT: 'Have you forgotten your password?',\r\n                TEXT_TO_LOG_IN: 'Sign in',\r\n                TEXT_TO_LOG_OUT: 'Log out',\r\n                TEXT_RESEND_EMAIL: 'Resend E-mail',\r\n                TEXT_YOU_ARE_ABOUT_TO_LOG_OUT: 'You are going to log out of your account.',\r\n                TEXT_CONFIRM: 'Confirm',\r\n                TEXT_ARE_YOU_SURE_YOU_WANT_TO_LOG_OUT: 'Are you sure you want to log out?',\r\n                TEXT_PROFILE_INFO: 'Profile information',\r\n                TEXT_LANGUAGES_TO_PRACTICE: 'Languages to practice',\r\n                TEXT_SAVE: 'Save',\r\n                TEXT_SETTINGS: 'Settings and information',\r\n                TEXT_ACCOUNT: 'Account',\r\n                TEXT_PERMISSIONS: 'Permissions',\r\n                TEXT_NAME_AND_LASTNAME: 'Name and last name',\r\n                TEXT_CHANGE_NAME_AND_LASTNAME: 'Edit name and last name',\r\n                TEXT_CHANGE_EMAIL: 'Edit E-mail',\r\n                TEXT_UPDATE: 'Update',\r\n                TEXT_VERIFY_YOUR_PASSWORD: 'Verify your password',\r\n                TEXT_REMOVE_ACCOUNT: 'Remove account',\r\n                TEXT_INTRODUCE_YOUR_PASSWORD_TO_CONTINUE: 'Re-enter your WeBabble password to continue.',\r\n                TEXT_YOUR_EMAIL_HAS_BEEN_UPDATED: 'Your E-mail address has been updated.',\r\n                TEXT_YOUR_PASSWORD_HAS_BEEN_UPDATED: 'Your password address has been updated.',\r\n                TEXT_CHANGE_PASSWORD: 'Edit password',\r\n                TEXT_CURRENT_PASSWORD: 'Current password',\r\n                TEXT_NEW_PASSWORD: 'New password',\r\n                TEXT_CONFIRM_PASSWORD: 'Confirm password',\r\n                TEXT_UPDATE_PASSWORD: 'Update password',\r\n                TEXT_ENTER_YOUR_EMAIL_TO_RESET_YOUR_PASSWORD: 'Enter your E-mail and we will help you recover your password:',\r\n                TEXT_RESET_PASSWORD: 'Restore password',\r\n                TEXT_RESET_PASSWORD_INSTRUCTIONS: 'In a short period of time you will receive an E-mail. Open it and follow the instructions to reset your password.',\r\n                TEXT_SPACE_YEARS: ' years old',\r\n                TEXT_PARTICIPANTS: 'Participants',\r\n                TEXT_NO_PARTICIPANTS_YET: 'It seems that no one has signed up yet. Be the first!',\r\n                TEXT_VERIFICATION_EMAIL_SENT: 'Verification E-mail sent.',\r\n                TEXT_NO_USERS_MATCH_SEARCH: 'There appear to be no users matching your search.',\r\n                TEXT_NO_CHATS_MATCH_SEARCH: 'There appear to be no chats with users matching your search.',\r\n                TEXT_NO_EVENTS_AVAILABLE: 'There seem to be no events available.',\r\n                TEXT_NO_CHATS_AVAILABLE: 'It looks like you do not have any chat yet. Start talking to a user!',\r\n                TEXT_LANGUAGE_INVOLVED_IN_EVENTS: 'Events languages',\r\n                TEXT_LOCATION_PERMISSION_NOT_GRANTED: 'It seems that you have not given permission to access your location. Grant it to have this functionality.',\r\n                TEXT_CONFIRM_EVENT_PARTICIPATION: 'You have signed up for this event.',\r\n                TEXT_CANCEL_EVENT_PARTICIPATION: 'You have canceled your participation in this event.',\r\n                TEXT_APP_LANGUAGE: 'Language',\r\n                TEXT_LANGUAGE_OF_APP: 'Application language',\r\n                TEXT_LANGUAGE_DE: 'German',\r\n                TEXT_LANGUAGE_ZH: 'Chinese',\r\n                TEXT_LANGUAGE_ES: 'Spanish',\r\n                TEXT_LANGUAGE_FR: 'French',\r\n                TEXT_LANGUAGE_EN: 'English',\r\n                TEXT_LANGUAGE_IT: 'Italian',\r\n                TEXT_LANGUAGE_JA: 'Japanese',\r\n                TEXT_LANGUAGE_PT: 'Portuguese',\r\n                TEXT_LANGUAGE_ALL: 'Any language',\r\n                TEXT_WE_BABBLE_SLOGAN: 'Learning languages is now easier',\r\n                TEXT_LOCATION: 'Location',\r\n                TEXT_NOTIFICATIONS: 'Notifications',\r\n                TEXT_GRANTED: 'Granted',\r\n                TEXT_NOT_GRANTED: 'Not granted',\r\n                TEXT_CREATE_EVENT: 'Create event',\r\n                TEXT_PUBLISH: 'Publish',\r\n                TEXT_DATE: 'Date',\r\n                TEXT_LANGUAGES: 'Languages',\r\n                TEXT_INFORMATION: 'Information',\r\n                TEXT_HEADER_IMAGE: 'Header image',\r\n                TEXT_PLACE: 'Place',\r\n                TEXT_ADDRESS: 'Address',\r\n                TEXT_YOU_ARE_ABOUT_TO_REMOVE_EVENT: 'You are going to remove this event',\r\n                TEXT_ARE_YOU_SURE_YOU_WANT_TO_REMOVE_EVENT: 'Are you sure you want to remove this event?',\r\n                TEXT_EDIT_EVENT: 'Edit event'\r\n            }\r\n        }\r\n    },\r\n    dateTimeFormats: {\r\n        'en': {\r\n            abbrMonth: {\r\n                month: 'short'\r\n            },\r\n            short: {\r\n                year: 'numeric', month: 'long', day: 'numeric'\r\n            },\r\n            long: {\r\n                year: 'numeric', month: 'short', day: 'numeric',\r\n                weekday: 'short', hour: 'numeric', minute: 'numeric', hour12: true\r\n            }\r\n        },\r\n        'es': {\r\n            abbrMonth: {\r\n                month: 'short'\r\n            },\r\n            short: {\r\n                year: 'numeric', month: 'long', day: 'numeric'\r\n            },\r\n            long: {\r\n                year: 'numeric', month: 'short', day: 'numeric',\r\n                weekday: 'short', hour: 'numeric', minute: 'numeric', hour12: true\r\n            }\r\n        }\r\n    }\r\n}","import Vue from 'vue';\r\nimport VueI18n from 'vue-i18n';\r\nimport I18NMessages from \"./I18NMessages\";\r\n\r\nVue.use(VueI18n);\r\n\r\nlet localeLanguage = 'es';\r\n\r\nif (navigator.language === 'es' || navigator.language === 'es-ES') {\r\n    localeLanguage = 'es';\r\n} else if (navigator.language === 'en' || navigator.language === 'en-US') {\r\n    localeLanguage = 'en';\r\n}\r\n\r\nconst i18n = new VueI18n({\r\n    locale: localeLanguage, // set locale\r\n    messages: I18NMessages.messages, // set locale messages\r\n    dateTimeFormats: I18NMessages.dateTimeFormats\r\n});\r\n\r\nexport default i18n;","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport * as firebase from \"firebase\";\r\nimport Constants from \"../Constants\";\r\nimport {GeoFirestore} from \"geofirestore\";\r\nimport i18n from \"../../i18n\";\r\n\r\nconst genericDatabaseError = i18n.t('messages.ERROR_GENERIC_DATABASE_PROBLEM');\r\nconst alreadyRegisteredEmailError = i18n.t('messages.ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_EMAIL');\r\nconst emailPasswordCombinationError = i18n.t('messages.ERROR_WRONG_EMAIL_PASSWORD_COMBINATION');\r\nconst tooManyRequestsError = i18n.t('messages.ERROR_TOO_MANY_REQUESTS');\r\nconst genericError = i18n.t('messages.ERROR_GENERIC_PROBLEM');\r\nconst uploadingImageError = i18n.t('messages.ERROR_UPLOADING_IMAGE');\r\n\r\n////////////////////////////////////////////////////////\r\n//-----     DATABASE (Firebase) INTERACTION      -----//\r\n////////////////////////////////////////////////////////\r\n\r\n// @vuese\r\n// Módulo del estado centralizado (Store) encargado de la gestión de la interacción con la base de datos Firebase\r\nexport default {\r\n    namespaced: true,\r\n    state: {},\r\n    getters: {},\r\n    mutations: {},\r\n    actions: {\r\n\r\n        // @vuese\r\n        // Comprueba si el usuario está autenticado\r\n        isUserAuth: function () {\r\n            return firebase.auth().currentUser;\r\n        },\r\n\r\n        // @vuese\r\n        // Establece en base de datos la información de cuenta del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg data {email, password, name, lastName, role}\r\n        setAccount: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Accounts\").doc(firebase.auth().currentUser.uid).set(\r\n                    {\r\n                        'name': data.name,\r\n                        'lastName': data.lastName,\r\n                        'role': 'user',\r\n                        'chats': [],\r\n                        'tokens': [],\r\n                        'language': null\r\n                    },\r\n                    {merge: true}\r\n                )\r\n                    .then(() => {\r\n                        console.log(\"Account info successfully written in firebase\");\r\n                        resolve();\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Establece en base de datos el idioma de aplicación seleccionado por el usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg Identificador del idioma\r\n        setAccountLanguage: function (context, lang) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Accounts\").doc(firebase.auth().currentUser.uid).set(\r\n                    {\r\n                        'language': lang\r\n                    },\r\n                    {merge: true}\r\n                )\r\n                    .then(() => {\r\n                        console.log(\"Account language successfully written in firebase\");\r\n                        resolve();\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Pide permiso para mostrar notificaciones de la aplicación en el navegador\r\n        askForMessagingPermission() {\r\n            return new Promise(function (resolve,) {\r\n                firebase.messaging().requestPermission()\r\n                    .then(() => {\r\n                        resolve(true);\r\n                    })\r\n                    .catch(() => {\r\n                        resolve(false);\r\n                    });\r\n\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Genera y guarda en base de datos un token de notificación\r\n        generatePushNotificationToken() {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                firebase.messaging().getToken().then(async (token) => {\r\n                    if (token) {\r\n                        const currentMessageToken = await window.localStorage.getItem('messagingToken');\r\n\r\n                        console.log('token will be updated', currentMessageToken != token)\r\n                        if (currentMessageToken != token) {\r\n                            let firestoreDB = firebase.firestore();\r\n                            firestoreDB.collection(\"Accounts\").doc(firebase.auth().currentUser.uid).update(\r\n                                {tokens: firebase.firestore.FieldValue.arrayUnion(token)}\r\n                            )\r\n                                .then(() => {\r\n                                    resolve();\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.error(error);\r\n                                    reject(genericDatabaseError);\r\n                                });\r\n                        }\r\n                    } else {\r\n                        reject(genericDatabaseError);\r\n                    }\r\n                }).catch(function (error) {\r\n                    console.error(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de base de datos la información de cuenta del usuario autenticado\r\n        getAccount() {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n                firestoreDB.collection(\"Accounts\").doc(firebase.auth().currentUser.uid).get()\r\n                    .then((doc) => {\r\n                        console.log(\"Account info successfully retrieved from firebase\");\r\n                        resolve({\r\n                            id: doc.id,\r\n                            email: firebase.auth().currentUser.email,\r\n                            ...doc.data()\r\n                        });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Crea el listener de los datos de cuenta de un usuario en la base de datos\r\n        // @arg El context del database store\r\n        // @arg ID del usuario\r\n        createAccountListener: function (context, userID) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                try {\r\n                    let docRef = firestoreDB.collection(\"Accounts\").doc(userID)\r\n                        .onSnapshot(function (user) {\r\n                            let formattedUser = {\r\n                                'id': userID,\r\n                                ...user.data(),\r\n                                'listener': docRef\r\n                            };\r\n                            context.dispatch(\"chats/manageChatListChange\", formattedUser, {root: true}).then(() => {\r\n                                resolve(formattedUser);\r\n                            })\r\n\r\n                        })\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    reject(genericDatabaseError);\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Crea una cuenta de Firebase con los datos pasados como parámetro\r\n        // @arg El context del database store\r\n        // @arg data {email, password, name, lastName}\r\n        createAccount: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                    firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\r\n                        .then(() => {\r\n                            console.log(\"Success creating account in firebase.\");\r\n                            resolve();\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                            if (error.code == 'auth/email-already-in-use') {\r\n                                reject(alreadyRegisteredEmailError);\r\n                            } else {\r\n                                reject(genericDatabaseError);\r\n                            }\r\n                        });\r\n                }\r\n            );\r\n        },\r\n\r\n        // @vuese\r\n        // Establece la persistencia de la sesión del usuario autenticado\r\n        // @arg El context del database store\r\n        setPersistance: function () {\r\n            return new Promise(function (resolve, reject) {\r\n                firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n                    .then(() => {\r\n                        console.log(\"Success setting firebase account persistence.\");\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error)\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Inicia sesión con los datos pasados como parámetro\r\n        // @arg El context del database store\r\n        // @arg data {email, password}\r\n        login: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                firebase.auth().signInWithEmailAndPassword(data.email, data.password)\r\n                    .then(() => {\r\n                        console.log(\"Success logging user in firebase.\");\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        if (error.code == 'auth/wrong-password' || error.code == \"auth/user-not-found\") {\r\n                            reject(emailPasswordCombinationError);\r\n                        } else if (error.code == \"auth/too-many-requests\") {\r\n                            reject(tooManyRequestsError);\r\n                        } else {\r\n                            reject(genericError);\r\n                        }\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Elimina el token de notificación del navegador y la base de datos\r\n        removePushNotificationToken: function () {\r\n            return new Promise(async function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                if (firebase.auth() != null) {\r\n                    try {\r\n                        await firebase.messaging().getToken().then(async (token) => {\r\n                            if (token) {\r\n                                await firestoreDB.collection(\"Accounts\").doc(firebase.auth().currentUser.uid).update(\r\n                                    {tokens: firebase.firestore.FieldValue.arrayRemove(token)}\r\n                                ).then(() => {\r\n                                    resolve();\r\n                                })\r\n                                    .catch(function (error) {\r\n                                        console.error(error);\r\n                                        if (error.code != 'messaging/failed-service-worker-registration'\r\n                                            && error.code != 'messaging/notifications-blocked'\r\n                                            && error.code != 'messaging/unsupported-browser'\r\n                                            && error.code != 'messaging/permission-blocked') {\r\n                                            reject(error);\r\n                                        } else {\r\n                                            resolve();\r\n                                        }\r\n                                    });\r\n                            }\r\n\r\n                        }).catch(function (error) {\r\n                            console.error(error);\r\n\r\n                            if (error.code != 'messaging/failed-service-worker-registration'\r\n                                && error.code != 'messaging/notifications-blocked'\r\n                                && error.code != 'messaging/unsupported-browser'\r\n                                && error.code != 'messaging/permission-blocked') {\r\n                                reject(error);\r\n                            } else {\r\n                                resolve();\r\n                            }\r\n                        });\r\n                    } catch (error) {\r\n                        console.error(error);\r\n\r\n                        if (error.code != 'messaging/failed-service-worker-registration'\r\n                            && error.code != 'messaging/notifications-blocked'\r\n                            && error.code != 'messaging/unsupported-browser'\r\n                            && error.code != 'messaging/permission-blocked') {\r\n                            reject(error);\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    }\r\n                } else {\r\n                    resolve();\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n        // @vuese\r\n        // Cierra sesión del usuario\r\n        // @arg El context del database store\r\n        logout: function (context) {\r\n            return new Promise(async function (resolve, reject) {\r\n                context.dispatch('removePushNotificationToken')\r\n                    .then(() => {\r\n                        firebase.auth().signOut()\r\n                            .then(() => {\r\n                                resolve();\r\n                            })\r\n                            .catch(error => {\r\n                                console.error(error);\r\n                                reject(error);\r\n                            });\r\n                    }).catch(error => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                })\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Envía E-mail de verificación al usuario autenticado\r\n        // @arg El context del database store\r\n        sendEmailVerification: function () {\r\n            return new Promise(function (resolve, reject) {\r\n                firebase.auth().currentUser.sendEmailVerification().then(function () {\r\n                    console.log('Firebase verification email sent.');\r\n                    resolve();\r\n                }, function (error) {\r\n                    console.error(error);\r\n                    if (error.code == \"auth/too-many-requests\") {\r\n                        reject(tooManyRequestsError);\r\n                    } else {\r\n                        reject(genericDatabaseError);\r\n                    }\r\n\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba si el E-mail del usuario autenticado está verificado\r\n        isEmailVerified: function () {\r\n            return new Promise(function (resolve, reject) {\r\n                firebase.auth().currentUser.reload().then(() => {\r\n                    if (firebase.auth().currentUser.emailVerified) {\r\n                        console.log(\"Firebase account email is verified.\");\r\n                        resolve(true);\r\n                    } else {\r\n                        resolve(false);\r\n                    }\r\n                }).catch((error) => {\r\n                    console.error(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Envía E-mail de reseteo de contraseña al correo electrónico pasado com parámetro\r\n        // @arg El context del database store\r\n        // @arg email\r\n        sendPasswordResetEmail: function (context, email) {\r\n            return new Promise(function (resolve, reject) {\r\n                firebase.auth().sendPasswordResetEmail(email).then(function () {\r\n                    console.log(\"Password reset email sent.\");\r\n                    resolve();\r\n                }).catch(function (error) {\r\n                    // An error happened.\r\n                    if (error.code == 'auth/user-not-found') {\r\n                        console.log(\"No account attached to the specified email.\");\r\n                        resolve();\r\n                    } else {\r\n                        console.error(error);\r\n                        reject(genericError);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza en base de datos la información de cuenta del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg data {[name], [lastName], [email]}\r\n        updateAccountData: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n                let batch = firestoreDB.batch();\r\n                let docRef = firestoreDB.collection(\"Accounts\").doc(firebase.auth().currentUser.uid);\r\n                let infoToUpdate = false;\r\n\r\n                if (data.hasOwnProperty('name')) {\r\n                    batch.update(docRef, {\"name\": data.name});\r\n                    infoToUpdate = true;\r\n                }\r\n                if (data.hasOwnProperty('lastName')) {\r\n                    batch.update(docRef, {\"lastName\": data.lastName});\r\n                    infoToUpdate = true;\r\n                }\r\n\r\n                if (infoToUpdate) {\r\n                    batch.commit().then(() => {\r\n                        console.log(\"Account info successfully updated in firebase\");\r\n                        resolve();\r\n                    })\r\n                        .catch(function (error) {\r\n                            console.error(error);\r\n                            reject(genericDatabaseError);\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza en base de datos el E-mail del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg email\r\n        updateAccountEmail: function (context, email) {\r\n            return new Promise(function (resolve, reject) {\r\n                let user = firebase.auth().currentUser;\r\n\r\n                user.updateEmail(email).then(function () {\r\n                    console.log(\"Account email successfully updated in firebase\");\r\n                    resolve()\r\n                }).catch(function (error) {\r\n                    console.error(error);\r\n                    reject(genericError);\r\n                });\r\n\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza la contraseña del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg Contraseña\r\n        updateAccountPassword: function (context, password) {\r\n            return new Promise(function (resolve, reject) {\r\n                let user = firebase.auth().currentUser;\r\n\r\n                user.updatePassword(password).then(function () {\r\n                    console.log(\"Account password successfully updated in firebase\");\r\n                    resolve()\r\n                }).catch(function (error) {\r\n                    console.error(error);\r\n                    reject(genericError);\r\n                });\r\n\r\n            });\r\n        },\r\n\r\n\r\n        // @vuese\r\n        // Obtiene de base de datos la información de perfil de un usuario\r\n        // @arg El context del database store\r\n        // @arg ID del usuario\r\n        getProfileByUID(context, uid) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Profiles\").doc(uid).get()\r\n                    .then((doc) => {\r\n                        if (doc.data() != null && doc.data() != undefined) {\r\n                            if (doc.data().hasOwnProperty(\"birthDate\")) {\r\n                                doc.data()[\"birthDate\"] = doc.data()[\"birthDate\"].toDate().setHours(0, 0, 0);\r\n                            }\r\n                            resolve({\r\n                                id: doc.id,\r\n                                ...doc.data()\r\n                            });\r\n                        } else {\r\n                            resolve(null);\r\n                        }\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de base de datos la información de perfil del usuario autenticado\r\n        // @arg El context del database store\r\n        getProfile(context) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('getProfileByUID', firebase.auth().currentUser.uid)\r\n                    .then((profileInfo) => {\r\n                        if (profileInfo && profileInfo.hasOwnProperty(\"birthDate\")) {\r\n                            profileInfo[\"birthDate\"] = profileInfo[\"birthDate\"].toDate().setHours(0, 0, 0);\r\n                        }\r\n\r\n                        console.log(\"Profile info successfully retrieved from firebase\");\r\n                        resolve(profileInfo);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de base de datos la información de varios perfiles de usuario\r\n        // @arg El context del database store\r\n        // @arg IDs de usuario\r\n        getMultipleProfilesByUID(context, ids) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let promises = [];\r\n                let userProfiles = [];\r\n\r\n                ids.forEach(id => {\r\n                    promises.push(\r\n                        context.dispatch('getProfileByUID', id)\r\n                            .then((profileInfo) => {\r\n                                userProfiles.push({\r\n                                    id: id,\r\n                                    ...profileInfo\r\n                                });\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error(error);\r\n                                reject(genericDatabaseError);\r\n                            })\r\n                    );\r\n                });\r\n                Promise.all(promises).then(function () {\r\n                    resolve(userProfiles);\r\n                })\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de base de datos la información de perfil de un usuario\r\n        // @arg El context del database store\r\n        // @arg Nombre de usuario\r\n        getProfileByUsername(context, username) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Profiles\").where(\"username\", \"==\", username).get()\r\n                    .then((querySnapshot) => {\r\n                        if (querySnapshot.size > 0) {\r\n                            console.log(\"Profile info successfully retrieved from firebase\");\r\n                            resolve(querySnapshot.docs);\r\n                        } else {\r\n                            console.log(\"Profile info was not found in firebase\");\r\n                            resolve(null);\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Establece en base de datos la información de perfil del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg data {username, birthDate, gender, description}\r\n        setProfile: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Profiles\").doc(firebase.auth().currentUser.uid).set(\r\n                    {\r\n                        username: data.username.toLowerCase(),\r\n                        birthDate: new Date(new Date(data.birthDate).setHours(0, 0, 0)),\r\n                        gender: data.gender,\r\n                        description: data.description,\r\n                        avgRating: 0,\r\n                        numRatings: 0,\r\n                        score: 0\r\n                    },\r\n                    {\r\n                        merge: true\r\n                    }\r\n                )\r\n                    .then(() => {\r\n                        console.log(\"Profile info successfully written in firebase\");\r\n                        resolve();\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Establece en base de datos el estado de registro del usuario autenticado como completado\r\n        setRegistrationCompleted: function () {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Profiles\").doc(firebase.auth().currentUser.uid).set(\r\n                    {\r\n                        registrationCompleted: true\r\n                    },\r\n                    {\r\n                        merge: true\r\n                    }\r\n                )\r\n                    .then(() => {\r\n                        console.log(\"Registration state successfully written in firebase\");\r\n                        resolve();\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza en base de datos la información de perfil del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg data {[username], [birthDate], [gender], [description], [knownLanguages], [languagesToLearn]}\r\n        updateProfile: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n                let batch = firestoreDB.batch();\r\n                let docRef = firestoreDB.collection(\"Profiles\").doc(firebase.auth().currentUser.uid);\r\n                let infoToUpdate = false;\r\n\r\n                if (data.hasOwnProperty('username')) {\r\n                    batch.update(docRef, {\"username\": data.username});\r\n                    infoToUpdate = true;\r\n                }\r\n                if (data.hasOwnProperty('description')) {\r\n                    batch.update(docRef, {\"description\": data.description});\r\n                    infoToUpdate = true;\r\n                }\r\n                if (data.hasOwnProperty('gender')) {\r\n                    batch.update(docRef, {\"gender\": data.gender});\r\n                    infoToUpdate = true;\r\n                }\r\n                if (data.hasOwnProperty('birthDate')) {\r\n                    batch.update(docRef, {\"birthDate\": new Date(new Date(data.birthDate).setHours(0, 0, 0))});\r\n                    infoToUpdate = true;\r\n                }\r\n                if (data.hasOwnProperty('knownLanguages')) {\r\n                    batch.update(docRef, {\"knownLanguages\": data.knownLanguages});\r\n                    infoToUpdate = true;\r\n                }\r\n                if (data.hasOwnProperty('languagesToLearn')) {\r\n                    batch.update(docRef, {\"languagesToLearn\": data.languagesToLearn});\r\n                    infoToUpdate = true;\r\n                }\r\n                if (infoToUpdate) {\r\n                    batch.commit().then(() => {\r\n                        console.log(\"Profile info successfully updated in firebase\");\r\n                        resolve();\r\n                    })\r\n                        .catch(function (error) {\r\n                            console.error(error);\r\n                            reject(genericDatabaseError);\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n\r\n\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Establece en base de datos los idiomas del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg data {knownLanguages, languagesToLearn}\r\n        setLanguages: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Profiles\").doc(firebase.auth().currentUser.uid).set(\r\n                    {\r\n                        knownLanguages: data.knownLanguages,\r\n                        languagesToLearn: data.languagesToLearn\r\n                    },\r\n                    {\r\n                        merge: true\r\n                    }\r\n                )\r\n                    .then(() => {\r\n                        console.log(\"User languages info successfully written in firebase.\");\r\n                        resolve();\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Almacena en Firebase la imagen de perfil del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg img\r\n        uploadProfileImg: function (context, img) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let userID = firebase.auth().currentUser.uid;\r\n                let path = \"UserProfileImages/\" + userID;\r\n\r\n                let data = {\r\n                    'img': img,\r\n                    'path': path\r\n                };\r\n\r\n                context.dispatch('uploadImg', data)\r\n                    .then((url) => {\r\n                        resolve(url);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(uploadingImageError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Almacena en Firebase una imagen\r\n        // @arg El context del database store\r\n        // @arg data {path, img}\r\n        uploadImg: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let storageDB = firebase.storage().ref().child(data.path);\r\n                storageDB.putString(data.img, 'base64')\r\n                    .then(() => {\r\n                        storageDB.getDownloadURL().then((url) => {\r\n                            console.log('User profile image uploaded.');\r\n                            resolve(url)\r\n                        })\r\n                            .catch((error) => {\r\n                                console.error(error);\r\n                                reject(uploadingImageError);\r\n                            });\r\n                    }).catch(function (error) {\r\n                    console.error(error);\r\n                    reject(uploadingImageError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Establece en base de datos la imagen de perfil del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg URL de la imagen en Firebase\r\n        setProfileImg: function (context, url) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Profiles\").doc(firebase.auth().currentUser.uid).set(\r\n                    {\r\n                        profileImg: url\r\n                    },\r\n                    {merge: true}\r\n                )\r\n                    .then(() => {\r\n                        console.log(\"User profile image successfully written in firebase.\");\r\n                        resolve();\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(uploadingImageError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza en base de datos la localización del usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg Localización del usuario\r\n        updateUserLocation: function (context, location) {\r\n            let geoFirestore = new GeoFirestore(firebase.firestore());\r\n\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                geoFirestore.collection('UserLocations').doc(firebase.auth().currentUser.uid).set({\r\n                    coordinates: new firebase.firestore.GeoPoint(location.lat, location.lng),\r\n                    date: new Date()\r\n                }).then(function () {\r\n                    console.log(\"User location successfully written in firebase.\");\r\n                    resolve();\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de base de datos la localización del usuario autenticado\r\n        // @arg El context del database store\r\n        getLocation: function () {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"UserLocations\").doc(firebase.auth().currentUser.uid).get()\r\n                    .then((doc) => {\r\n                        console.log(\"User location successfully retrieved from firebase.\");\r\n                        let location = {\r\n                            'lat': doc.data().l[0],\r\n                            'lng': doc.data().l[1]\r\n                        };\r\n                        resolve(location);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n\r\n        // @vuese\r\n        // Obtiene de base de datos las valoraciones realizadas por el usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg ratingsInfo/null\r\n        getRatings: function () {\r\n            let firestoreDB = firebase.firestore();\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                firestoreDB.collection(\"Ratings\").doc(firebase.auth().currentUser.uid).get().then(function (doc) {\r\n                    console.log(\"User ratings successfully retrieved from firebase.\");\r\n\r\n                    if (doc.exists) {\r\n                        resolve(doc.data());\r\n                    } else {\r\n                        resolve(null);\r\n                    }\r\n                })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Establece una nueva valoración en la base de datos\r\n        // @arg El context del database store\r\n        // @arg data{id, rating}\r\n        setRating: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n                let newRating = {};\r\n\r\n                newRating[data.id] = data.rating;\r\n                if (data.rating) {\r\n                    firestoreDB.collection(\"Ratings\").doc(firebase.auth().currentUser.uid).set(newRating, {merge: true})\r\n                        .then(() => {\r\n                            console.log(\"Rating successfully written in firebase.\");\r\n                            resolve();\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(error);\r\n                            reject(genericDatabaseError);\r\n                        });\r\n                } else {\r\n                    firestoreDB.collection(\"Ratings\").doc(firebase.auth().currentUser.uid).update({\r\n                        [data.id]: firebase.firestore.FieldValue.delete()\r\n                    })\r\n                        .then(() => {\r\n                            console.log(\"Rating successfully deleted in firebase.\");\r\n                            resolve();\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(error);\r\n                            reject(genericDatabaseError);\r\n                        });\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba en la base de datos si la siguiente página en la obtención de usuarios está vacía\r\n        // @arg El context del database store\r\n        // @arg data{lastUserShowed, limit, filters}\r\n        isNextUsersPageEmpty: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n                let page;\r\n                let lastUserShowed = data.lastUserShowed;\r\n\r\n                page = firestoreDB.collection(\"Profiles\");\r\n\r\n                // --> USERNAME FILTERING\r\n                if (data.filters.username != null && data.filters.username != undefined && data.filters.username != '') {\r\n                    if (lastUserShowed == null) {\r\n                        lastUserShowed = data.filters.username;\r\n                    }\r\n                }\r\n                // --> GENDER FILTERING\r\n                if (data.filters.gender === \"M\") {\r\n                    page = page.where(\"gender\", \"==\", \"M\");\r\n                } else if (data.filters.gender === \"W\") {\r\n                    page = page.where(\"gender\", \"==\", \"W\");\r\n                }\r\n                // --> END GENDER FILTERING\r\n\r\n                // --> AGE FILTERING\r\n                if (data.filters.ageRange[0] > Constants.MIN_USER_AGE || data.filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                    page = page.orderBy(\"birthDate\");\r\n                }\r\n\r\n                if (data.filters.ageRange[0] > Constants.MIN_USER_AGE) {\r\n                    let currentDate = new Date();\r\n                    currentDate.setFullYear(currentDate.getFullYear() - data.filters.ageRange[0]);\r\n                    currentDate.setHours(0, 0, 0);\r\n                    page = page.where(\"birthDate\", \"<\", currentDate);\r\n                }\r\n\r\n                if (data.filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                    let currentDate = new Date();\r\n                    currentDate.setFullYear(currentDate.getFullYear() - data.filters.ageRange[1] - 1);\r\n                    currentDate.setHours(0, 0, 0)\r\n                    page = page.where(\"birthDate\", \">\", currentDate);\r\n                }\r\n                // --> END AGE FILTERING\r\n\r\n                // --> LANGUAGES FILTERING\r\n                if (data.filters.language.filterBy == \"languageToLearn\" && data.filters.language.languageToLearn != \"all\") {\r\n                    page = page.where(\"languagesToLearn\", \"array-contains\", data.filters.language.languageToLearn);\r\n                } else if (data.filters.language.filterBy == \"knownLanguage\" && data.filters.language.knownLanguage != \"all\") {\r\n                    page = page.where(\"knownLanguages\", \"array-contains\", data.filters.language.knownLanguage);\r\n                }\r\n                // --> END LANGUAGES FILTERING\r\n\r\n                page = page.where(\"registrationCompleted\", \"==\", true);\r\n\r\n                if (data.filters.username != null && data.filters.username != undefined && data.filters.username != '') {\r\n                    page = page.orderBy(\"username\").startAfter(lastUserShowed).endAt(data.filters.username + \"\\uf8ff\").limit(data.limit);\r\n                } else {\r\n                    page = page.orderBy(\"username\").startAfter(lastUserShowed).limit(data.limit);\r\n                }\r\n\r\n                page.get()\r\n                    .then(function (documentSnapshots) {\r\n\r\n                        // To remove the logged user\r\n                        let searchedUserIndex = documentSnapshots.docs.findIndex(function (searchedUser) {\r\n                            return searchedUser.id == firebase.auth().currentUser.uid;\r\n                        });\r\n\r\n                        let newDocs = documentSnapshots.docs;\r\n                        if (searchedUserIndex != -1) {\r\n                            newDocs.splice(searchedUserIndex, 1);\r\n                        }\r\n\r\n\r\n                        newDocs = newDocs.map(doc => {\r\n                            const id = doc.id;\r\n                            const dataDocs = doc.data();\r\n                            return {id, ...dataDocs};\r\n                        });\r\n\r\n                        resolve(newDocs.length == 0);\r\n\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos la siguiente página de usuarios\r\n        // @arg El context del database store\r\n        // @arg data{lastUserShowed, limit, filters}\r\n        getNextUsersPage: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n                let page;\r\n                let newLastUserShowed;\r\n                let lastUserShowed = data.lastUserShowed;\r\n\r\n                page = firestoreDB.collection(\"Profiles\");\r\n\r\n                // --> USERNAME FILTERING\r\n                if (data.filters.username != null && data.filters.username != undefined && data.filters.username != '') {\r\n                    if (lastUserShowed == null) {\r\n                        lastUserShowed = data.filters.username;\r\n                    }\r\n                }\r\n                // --> END USERNAME FILTERING\r\n\r\n                // --> GENDER FILTERING\r\n                if (data.filters.gender === \"M\") {\r\n                    page = page.where(\"gender\", \"==\", \"M\");\r\n                } else if (data.filters.gender === \"W\") {\r\n                    page = page.where(\"gender\", \"==\", \"W\");\r\n                }\r\n                // --> END GENDER FILTERING\r\n\r\n                // --> AGE FILTERING\r\n\r\n                page = page.where(\"registrationCompleted\", \"==\", true);\r\n\r\n                if (data.filters.ageRange[0] > Constants.MIN_USER_AGE || data.filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                    page = page.orderBy(\"birthDate\");\r\n                }\r\n\r\n                if (data.filters.ageRange[0] > Constants.MIN_USER_AGE) {\r\n                    let currentDate = new Date();\r\n                    currentDate.setFullYear(currentDate.getFullYear() - data.filters.ageRange[0]);\r\n                    currentDate.setHours(0, 0, 0);\r\n                    page = page.where(\"birthDate\", \"<\", currentDate);\r\n                }\r\n\r\n                if (data.filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                    let currentDate = new Date();\r\n                    currentDate.setFullYear(currentDate.getFullYear() - data.filters.ageRange[1] - 1);\r\n                    currentDate.setHours(0, 0, 0)\r\n                    page = page.where(\"birthDate\", \">\", currentDate);\r\n                }\r\n                // --> END AGE FILTERING\r\n\r\n                // --> LANGUAGES FILTERING\r\n                if (data.filters.language.filterBy == \"languageToLearn\" && data.filters.language.languageToLearn != \"all\") {\r\n                    page = page.where(\"languagesToLearn\", \"array-contains\", data.filters.language.languageToLearn);\r\n                } else if (data.filters.language.filterBy == \"knownLanguage\" && data.filters.language.knownLanguage != \"all\") {\r\n                    page = page.where(\"knownLanguages\", \"array-contains\", data.filters.language.knownLanguage);\r\n                }\r\n                // --> END LANGUAGES FILTERING\r\n\r\n\r\n                if (data.lastUserShowed == null && data.filters.username != null && data.filters.username != undefined && data.filters.username != '') {\r\n                    page = page.orderBy(\"username\").startAt(lastUserShowed).endAt(data.filters.username + \"\\uf8ff\").limit(data.limit);\r\n                } else if (data.lastUserShowed != null && data.filters.username != null && data.filters.username != undefined && data.filters.username != '') {\r\n                    page = page.orderBy(\"username\").startAfter(lastUserShowed).endAt(data.filters.username + \"\\uf8ff\").limit(data.limit);\r\n                } else {\r\n                    page = page.orderBy(\"username\").startAfter(lastUserShowed).limit(data.limit);\r\n                }\r\n\r\n                page.get()\r\n                    .then(function (documentSnapshots) {\r\n\r\n                        // To remove the logged user\r\n                        let searchedUserIndex = documentSnapshots.docs.findIndex(function (searchedUser) {\r\n                            return searchedUser.id == firebase.auth().currentUser.uid;\r\n                        });\r\n\r\n                        let newDocs = documentSnapshots.docs;\r\n\r\n                        if (searchedUserIndex != -1) {\r\n                            newDocs.splice(searchedUserIndex, 1);\r\n                        }\r\n                        newLastUserShowed = documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n\r\n                        newDocs = newDocs.map(doc => {\r\n                            const id = doc.id;\r\n                            const dataDocs = doc.data();\r\n                            return {id, ...dataDocs};\r\n                        });\r\n\r\n\r\n                        resolve({\r\n                            newLastUserShowed: newLastUserShowed,\r\n                            users: newDocs\r\n                        });\r\n\r\n\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos los usuarios cercanos al usuario autenticado\r\n        // @arg El context del database store\r\n        // @arg data{location, maxDistance}\r\n        getNearbyUserIDs(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let geofirestore = new GeoFirestore(firebase.firestore());\r\n                let queryNearbyUsers = geofirestore.collection('UserLocations').near({\r\n                    center: new firebase.firestore.GeoPoint(data.location.lat, data.location.lng),\r\n                    radius: data.maxDistance\r\n                });\r\n\r\n                queryNearbyUsers.get().then((snapshot) => {\r\n                    let ids = [];\r\n                    snapshot.docs.forEach(doc => {\r\n                        if (doc.id != firebase.auth().currentUser.uid)\r\n                            ids.push(doc.id);\r\n                    });\r\n                    resolve(ids);\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(uploadingImageError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos la información de un evento\r\n        // @arg El context del database store\r\n        // @arg ID del evento\r\n        getEventByID(context, id) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Events\").doc(id).get()\r\n                    .then((doc) => {\r\n\r\n                        if (doc.data() != null && doc.data() != undefined) {\r\n                            resolve({\r\n                                id: doc.id,\r\n                                ...doc.data()\r\n                            });\r\n                        } else {\r\n                            resolve(null);\r\n                        }\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Almacena en Firebase la imagen de cabecera de un evento\r\n        // @arg El context del database store\r\n        // @arg data{img, eventID}\r\n        uploadEventHeaderImg: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let path = \"EventHeaderImages/\" + data.eventID;\r\n\r\n                let data2 = {\r\n                    'img': data.img,\r\n                    'path': path\r\n                };\r\n\r\n                context.dispatch('uploadImg', data2)\r\n                    .then((url) => {\r\n                        resolve(url);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(uploadingImageError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Crea y establece en base de datos un evento\r\n        // @arg El context del database store\r\n        // @arg data {date, description, headerImg, location, involvedLanguages, name}\r\n        createEvent: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n                let eventRef = firestoreDB.collection(\"Events\").doc();\r\n\r\n                data.location.coordinates = new firebase.firestore.GeoPoint(data.location.coordinates.lat, data.location.coordinates.lng);\r\n\r\n                context.dispatch('uploadEventHeaderImg', {'img': data.headerImg, 'eventID': eventRef.id})\r\n                    .then((url) => {\r\n                        let eventData = {\r\n                            name: data.name,\r\n                            date: new Date(new Date(data.date).setHours(0, 0, 0)),\r\n                            participants: [],\r\n                            headerImg: url,\r\n                            description: data.description,\r\n                            involvedLanguages: data.involvedLanguages,\r\n                            location: data.location\r\n                        };\r\n                        eventRef.set(\r\n                            {\r\n                                ...eventData\r\n                            },\r\n                            {\r\n                                merge: true\r\n                            }\r\n                        )\r\n                            .then(() => {\r\n                                console.log(\"Event successfully created in firebase\");\r\n                                resolve({...eventData, id: eventRef.id});\r\n                            })\r\n                            .catch(function (error) {\r\n                                console.error(error);\r\n                                reject(genericDatabaseError);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Elimina de la base de datos un evento\r\n        // @arg El context del database store\r\n        // @arg ID del evento\r\n        removeEvent: function (context, eventID) {\r\n            return new Promise(function (resolve, reject) {\r\n                    let firestoreDB = firebase.firestore();\r\n\r\n                    firestoreDB.collection(\"Events\").doc(eventID).delete()\r\n                        .then(() => {\r\n                            console.log(\"Event successfully removed from firebase\");\r\n                            resolve();\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(error);\r\n                            reject(genericDatabaseError);\r\n                        });\r\n\r\n                }\r\n            );\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza en la base de datos la información de un evento\r\n        // @arg El context del database store\r\n        // @arg data {[date], [description], [headerImg], [location], [involvedLanguages], [name]}\r\n        updateEvent: function (context, data) {\r\n            return new Promise(async function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                if (data.hasOwnProperty('location')) {\r\n                    data.location.coordinates = new firebase.firestore.GeoPoint(data.location.coordinates.lat, data.location.coordinates.lng);\r\n                }\r\n\r\n                if (data.hasOwnProperty('headerImg')) {\r\n                    await context.dispatch('uploadEventHeaderImg', {'img': data.headerImg, 'eventID': data.id})\r\n                        .then((url) => {\r\n                            data.headerImg = url;\r\n                        })\r\n                        .catch((error) => {\r\n                            reject(error);\r\n                        });\r\n                }\r\n\r\n                if (data.hasOwnProperty('date')) {\r\n                    data.date = new Date(new Date(data.date).setHours(0, 0, 0));\r\n                }\r\n\r\n                firestoreDB.collection(\"Events\").doc(data.id).update(\r\n                    {\r\n                        ...data\r\n                    }\r\n                )\r\n                    .then(() => {\r\n                        console.log(\"Event successfully updated in firebase\");\r\n                        let returnValue = {};\r\n\r\n                        if (data.hasOwnProperty('headerImg')) {\r\n                            returnValue['headerImg'] = data.headerImg;\r\n                        }\r\n\r\n                        if (data.hasOwnProperty('date')) {\r\n                            returnValue['date'] = new Date(data.date)\r\n                        }\r\n\r\n                        resolve(returnValue);\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos la siguiente página de eventos\r\n        // @arg El context del database store\r\n        // @arg data{lastEventShowed, limit}\r\n        getNextEventsPage: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n                let page;\r\n                let newLastEventShowed;\r\n                let lastEventShowed = data.lastEventShowed;\r\n                let currentDate = new Date();\r\n\r\n                page = firestoreDB.collection(\"Events\");\r\n\r\n                // --> LANGUAGES FILTERING\r\n                if (data.filters.languageInvolved !== \"all\") {\r\n                    page = page.where(\"involvedLanguages\", \"array-contains\", data.filters.languageInvolved);\r\n                }\r\n                // --> END LANGUAGES FILTERING\r\n\r\n                if (lastEventShowed == null) {\r\n                    page = page.where(\"date\", \">\", currentDate).orderBy(\"date\").startAt(lastEventShowed);\r\n                } else {\r\n                    page = page.where(\"date\", \">\", currentDate).orderBy(\"date\").startAfter(lastEventShowed);\r\n                }\r\n                page.limit(data.limit).get()\r\n                    .then(function (documentSnapshots) {\r\n\r\n                        newLastEventShowed = documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n\r\n                        let eventsRetrieved = documentSnapshots.docs.map(doc => {\r\n                            const id = doc.id;\r\n                            const dataDocs = doc.data();\r\n                            return {id, ...dataDocs};\r\n                        });\r\n\r\n                        resolve({\r\n                            newLastEventShowed: newLastEventShowed,\r\n                            events: eventsRetrieved\r\n                        });\r\n\r\n\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos todos los eventos con fecha posterior a la actual\r\n        getEventsToBeCelebrated: function () {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n                let page;\r\n                let currentDate = new Date();\r\n\r\n                page = firestoreDB.collection(\"Events\");\r\n\r\n                page = page.where(\"date\", \">\", currentDate).orderBy(\"date\");\r\n\r\n                page.get()\r\n                    .then(function (documentSnapshots) {\r\n\r\n                        let eventsRetrieved = documentSnapshots.docs.map(doc => {\r\n                            const id = doc.id;\r\n                            const dataDocs = doc.data();\r\n                            return {id, ...dataDocs};\r\n                        });\r\n\r\n                        resolve(eventsRetrieved);\r\n\r\n\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba en la base de datos si la siguiente página de eventos está vacía\r\n        // @arg El context del database store\r\n        // @arg data{lastEventShowed, limit}\r\n        isNextEventsPageEmpty: function (context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n                let page;\r\n                let lastEventShowed = data.lastEventShowed;\r\n                let currentDate = new Date();\r\n\r\n                page = firestoreDB.collection(\"Events\");\r\n\r\n                // --> LANGUAGES FILTERING\r\n                if (data.filters.languageInvolved !== \"all\") {\r\n                    page = page.where(\"involvedLanguages\", \"array-contains\", data.filters.languageInvolved);\r\n                }\r\n                // --> END LANGUAGES FILTERING\r\n\r\n                page = page.where(\"date\", \">\", currentDate).orderBy(\"date\").startAfter(lastEventShowed);\r\n                page.limit(data.limit).get()\r\n                    .then(function (documentSnapshots) {\r\n\r\n                        resolve(documentSnapshots.docs.length == 0);\r\n\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Añade en la base de datos un participante a un evento\r\n        // @arg El context del database store\r\n        // @arg ID del evento\r\n        addParticipantToEvent: function (context, eventID) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Events\").doc(eventID).update({\r\n                    participants: firebase.firestore.FieldValue.arrayUnion(firebase.auth().currentUser.uid)\r\n                }).then(function () {\r\n                    console.log(\"User successfully added to event in firebase.\")\r\n                    resolve(firebase.auth().currentUser.uid);\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Elimina de un evento a un participante en la base de datos\r\n        // @arg El context del database store\r\n        // @arg ID del evento\r\n        removeParticipantFromEvent: function (context, eventID) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Events\").doc(eventID).update({\r\n                    participants: firebase.firestore.FieldValue.arrayRemove(firebase.auth().currentUser.uid)\r\n                }).then(function () {\r\n                    console.log(\"User successfully remove from event in firebase.\")\r\n                    resolve(firebase.auth().currentUser.uid);\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Crea los listeners de los mensajes de un chat en la base de datos\r\n        // @arg El context del database store\r\n        // @arg ID del chat\r\n        createChatMessagesListener: function (context, chatID) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                try {\r\n                    let docRef = firestoreDB.collection(\"Chats\").doc(chatID).collection(\"Messages\")\r\n                        .onSnapshot(function (chatMessages) {\r\n\r\n                            let messages = chatMessages.docChanges().map(change => {\r\n                                const id = change.doc.id;\r\n                                const dataDocs = change.doc.data();\r\n                                return {id, change: change.type, ...dataDocs};\r\n                            });\r\n\r\n                            let formattedChatMessages = {\r\n                                'id': chatID,\r\n                                'messages': messages,\r\n                                'listener': docRef\r\n                            };\r\n                            context.dispatch(\"chats/manageChatMessagesChange\", formattedChatMessages, {root: true}).then(() => {\r\n                                resolve();\r\n                            })\r\n\r\n                        })\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    reject(genericDatabaseError);\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza en la base de datos todos los mensajes sin leer de un chat a estado leido\r\n        // @arg El context del database store\r\n        // @arg data {chatID, messages}\r\n        setMessagesToRead(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                let batch = firestoreDB.batch();\r\n\r\n                data.messages.forEach(message => {\r\n                    batch.update(firestoreDB.collection(\"Chats\").doc(data.chatID).collection(\"Messages\").doc(message),\r\n                        {\r\n                            'read': true\r\n                        });\r\n                });\r\n\r\n                batch.commit().then(function () {\r\n                    resolve();\r\n                })\r\n                    .catch(function (error) {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Añade en la base de datos un mensaje a un chat\r\n        // @arg El context del database store\r\n        // @arg data {chatID, message}\r\n        addMessagesToChat(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                let newMessage = {\r\n                    'date': firebase.firestore.FieldValue.serverTimestamp(),\r\n                    'sender': data.message.sender,\r\n                    'read': false,\r\n                    'text': data.message.text\r\n                };\r\n\r\n                firestoreDB.collection(\"Chats\").doc(data.chatID).collection(\"Messages\").doc().set(newMessage)\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(\"Error adding message\", error);\r\n                        reject(genericError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Añade en la base de datos un nuevo chat\r\n        // @arg El context del database store\r\n        // @arg chat {id, users[]}\r\n        addChat(context, chat) {\r\n            return new Promise(function (resolve, reject) {\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                let newChat = {\r\n                    'users': chat.users\r\n                };\r\n\r\n                firestoreDB.collection(\"Chats\").doc(chat.id).set(newChat)\r\n                    .then(() => {\r\n                        firestoreDB.collection(\"Accounts\").doc(firebase.auth().currentUser.uid).update({chats: firebase.firestore.FieldValue.arrayUnion(chat.id)})\r\n                            .then(() => {\r\n                                resolve();\r\n                            });\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.error(\"Error adding chat\", error);\r\n                        reject(genericError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos la información de un chat\r\n        // @arg El context del database store\r\n        // @arg ID del chat\r\n        getChatByID(context, chatID) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n\r\n                firestoreDB.collection(\"Chats\").doc(chatID).get()\r\n                    .then((doc) => {\r\n                        resolve({\r\n                            id: doc.id,\r\n                            ...doc.data()\r\n                        });\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericDatabaseError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos el top 100 de los usuarios del ranking\r\n        getTop100RankingUsers: function () {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let firestoreDB = firebase.firestore();\r\n                let page = firestoreDB.collection(\"Ranking\");\r\n                page = page.orderBy(\"position\").limit(Constants.MAX_RANKING_PAGE_SIZE);\r\n                page.get()\r\n                    .then(function (documentSnapshots) {\r\n                        let newDocs = documentSnapshots.docs.map(doc => {\r\n                            const position = doc.id;\r\n                            const dataDocs = doc.data();\r\n                            return {position: position, ...dataDocs};\r\n                        });\r\n\r\n                        resolve(newDocs);\r\n\r\n                    }).catch((error) => {\r\n                    console.log(error);\r\n                    reject(genericDatabaseError);\r\n                });\r\n            });\r\n        }\r\n    }\r\n}","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport AuxMethods from \"../AuxMethods\";\r\nimport database from \"./database\";\r\n\r\n////////////////////////////////////////////////////////\r\n//-----        APP PERMISSIONS MANAGEMENT        -----//\r\n////////////////////////////////////////////////////////\r\n\r\n// @vuese\r\n// Módulo del estado centralizado (Store) encargado de la gestión de los permisos en el navegador para la aplicación\r\nexport default {\r\n    namespaced: true,\r\n    modules: {\r\n        database\r\n    },\r\n    state: {\r\n        // @vuese\r\n        // Almacena el estado de concesión del permiso de geolocalización\r\n        isGeolocationPermissionGranted: false,\r\n\r\n        // @vuese\r\n        // Almacena el estado de concesión del permiso de notificaciones\r\n        isPushNotificationPermissionGranted: false\r\n    },\r\n    getters: {\r\n        // @vuese\r\n        // Utilizado para obtener el estado de concesión del permiso de geolocalización\r\n        // @arg El state del permissions store\r\n        getIsGeolocationPermissionGranted: (state) => {\r\n            return state.isGeolocationPermissionGranted;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener el estado de concesión del permiso de notificaciones\r\n        // @arg El state del permissions store\r\n        getIsPushNotificationPermissionGranted: (state) => {\r\n            return state.isPushNotificationPermissionGranted;\r\n        }\r\n    },\r\n    mutations: {\r\n        // @vuese\r\n        // Restablece todas las variables del state a sus valores por defecto\r\n        // @arg El state del permissions store\r\n        resetState(state) {\r\n            state.isGeolocationPermissionGranted = false;\r\n            state.isPushNotificationPermissionGranted = false;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del estado de concesión del permiso de geolocalización con el valor pasado como parámetro\r\n        // @arg El state del permissions store\r\n        // @arg El estado de concesión del permiso de geolocalización\r\n        setIsGeolocationPermissionGranted(state, isGeolocationPermissionGranted) {\r\n            state.isGeolocationPermissionGranted = isGeolocationPermissionGranted;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del estado de concesión del permiso de notificaciones con el valor pasado como parámetro\r\n        // @arg El state del permissions store\r\n        // @arg El estado de concesión del permiso de notificaciones\r\n        setIsPushNotificationPermissionGranted(state, isPushNotificationPermissionGranted) {\r\n            state.isPushNotificationPermissionGranted = isPushNotificationPermissionGranted;\r\n        }\r\n    },\r\n    actions: {\r\n        // @vuese\r\n        // Resetea el estado del permissions store\r\n        // @arg El context del permissions store\r\n        resetState(context) {\r\n            return new Promise(function (resolve) {\r\n                context.commit('resetState');\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba el estado del permiso de geolocalización y pide su concesión si todavía no se ha requerido al usuario\r\n        // @arg El context del permissions store\r\n        checkForGeolocationPermission: function (context) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (navigator.permissions == undefined) {\r\n                    context.commit(\"setIsGeolocationPermissionGranted\", false);\r\n                    resolve(false);\r\n                } else if (!context.getters.getIsGeolocationPermissionGranted) {\r\n                    navigator.permissions.query({name: 'geolocation'}).then(function (result) {\r\n                        if (result.state == 'granted') {\r\n                            // Permission is already granted\r\n                            context.commit(\"setIsGeolocationPermissionGranted\", true);\r\n\r\n                            context.dispatch('user/getLocation', null, {root: true}).catch((error) => {\r\n                                reject(error);\r\n                            });\r\n\r\n                            resolve(true);\r\n                        } else if (result.state == 'prompt') {\r\n                            // Navigator will ask for permission\r\n                            context.commit(\"setIsGeolocationPermissionGranted\", false);\r\n                            navigator.geolocation.getCurrentPosition(AuxMethods.emptyCallback);\r\n                        } else if (result.state == 'denied') {\r\n                            // User has denied permission\r\n                            context.commit(\"setIsGeolocationPermissionGranted\", false);\r\n                            resolve(false);\r\n                        }\r\n\r\n                        result.onchange = function () {\r\n                            // Whenever permission state changes\r\n\r\n                            if (result.state == 'granted') {\r\n                                // Permission is already granted\r\n                                context.commit(\"setIsGeolocationPermissionGranted\", true);\r\n\r\n                                context.dispatch('user/getLocation', null, {root: true}).catch((error) => {\r\n                                    reject(error);\r\n                                });\r\n\r\n                                resolve(true);\r\n                            } else if (result.state == 'prompt') {\r\n                                // Navigator will ask for permission\r\n                                context.commit(\"setIsGeolocationPermissionGranted\", false);\r\n                                navigator.geolocation.getCurrentPosition(AuxMethods.emptyCallback);\r\n\r\n                            } else if (result.state == 'denied') {\r\n                                // User has denied permission\r\n                                context.commit(\"setIsGeolocationPermissionGranted\", false);\r\n                                resolve(false);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba el estado del permiso de notificaciones y pide su concesión si todavía no se ha requerido al usuario\r\n        // @arg El context del permissions store\r\n        checkForPushNotificationsPermission: function (context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch(\"database/askForMessagingPermission\").then(function (isPermissionGranted) {\r\n                    if (isPermissionGranted) {\r\n                        context.commit(\"setIsPushNotificationPermissionGranted\", true);\r\n                        context.dispatch('user/generateNotificationToken', null, {root: true}).catch((error) => {\r\n                            reject(error);\r\n                        });\r\n                        resolve(true);\r\n                    } else {\r\n                        context.commit(\"setIsPushNotificationPermissionGranted\", false);\r\n                        resolve(false);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport Constants from \"../Constants\";\r\nimport database from \"./database\";\r\nimport permissions from \"./permissions\";\r\n\r\n////////////////////////////////////////////////////////\r\n//-----                APP USERS                 -----//\r\n////////////////////////////////////////////////////////\r\n\r\n// @vuese\r\n// Módulo del estado centralizado (Store) encargado de la gestión de la búsqueda de usuarios\r\nexport default {\r\n    namespaced: true,\r\n    modules: {\r\n        database,\r\n        permissions\r\n    },\r\n    state: {\r\n        /* All users retrieved */\r\n        // @vuese\r\n        // Almacena todos los usuarios obtenidos de la base de datos\r\n        users: {},\r\n\r\n        /* User IDs result of the searching process */\r\n        // @vuese\r\n        // Almacena los identificadores de los usuarios a mostrar\r\n        searchedUsersIDs: [],\r\n        // @vuese\r\n        // Almacena una referencia al último usuario mostrado en la búsqueda\r\n        lastUserShowed: null,\r\n        // @vuese\r\n        // Filtro de género en la búsqueda de usuarios\r\n        genderFilter: \"O\",\r\n        // @vuese\r\n        // Filtro de edad en la búsqueda de usuarios\r\n        ageRangeFilter: [Constants.MIN_USER_AGE, Constants.MAX_USER_AGE],\r\n        // @vuese\r\n        // Filtro de idiomas en la búsqueda de usuarios\r\n        languageFilter: {\r\n            filterBy: \"languageToLearn\",\r\n            knownLanguage: \"all\",\r\n            languageToLearn: \"all\"\r\n        },\r\n        // @vuese\r\n        // Filtro de nombre de usuario en la búsqueda de usuarios\r\n        searchByUsernameFilter: null,\r\n        // @vuese\r\n        // Máxima distancia en el filtro de distancia en la búsqueda de usuarios\r\n        maxDistanceFilter: 3,\r\n        // @vuese\r\n        // Rangos en el filtro de distancias en la búsqueda de usuarios\r\n        maxDistanceRanges: [1, 5, 10, null],\r\n        // @vuese\r\n        // Texto de los rangos en el filtro de distancias en la búsqueda de usuarios\r\n        maxDistanceRangesText: ['1 km', '5 km', '10 km', '∞'],\r\n        // @vuese\r\n        // Filtro de distancia con la localización del usuario en la búsqueda de usuarios\r\n        locationFilter: null,\r\n        // @vuese\r\n        // Almacena los identificadores de los usuarios cercanos al usuario autenticado\r\n        nearbyUsersIDs: null,\r\n    },\r\n    getters: {\r\n        // @vuese\r\n        // Devuelve los idiomas conocidos y a practicar de un usuario\r\n        // @arg El state del users store\r\n        // @arg ID del usuario\r\n        getLanguagesByUserID: (state) => (id) => {\r\n            return state.users[id].knownLanguages.concat(state.users[id].languagesToLearn);\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el filtro de género en la búsqueda de usuarios\r\n        // @arg El state del users store\r\n        getGenderFilter: (state) => {\r\n            return state.genderFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el filtro de edad en la búsqueda de usuarios\r\n        // @arg El state del users store\r\n        getAgeRangeFilter: (state) => {\r\n            return state.ageRangeFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el filtro de idiomas en la búsqueda de usuarios\r\n        // @arg El state del users store\r\n        getLanguageFilter: (state) => {\r\n            return state.languageFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el filtro de nombre de usuario en la búsqueda de usuarios\r\n        // @arg El state del users store\r\n        getSearchByUsernameFilter: (state) => {\r\n            return state.searchByUsernameFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el filtro de máxima distancia en la búsqueda de usuarios\r\n        // @arg El state del users store\r\n        getMaxDistanceFilter: (state) => {\r\n            return state.maxDistanceFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el texto de los rangos del filtro de máxima distancia en la búsqueda de usuarios\r\n        // @arg El state del users store\r\n        getMaxDistanceRangesText: (state) => {\r\n            return state.maxDistanceRangesText;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la informacion de un usuario\r\n        // @arg El state del users store\r\n        // @arg ID del usuario\r\n        getUserByID: (state) => (id) => {\r\n            return state.users[id];\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la lista de identificadores de usuarios cercanos\r\n        // @arg El state del users store\r\n        getNearbyUsersIDs: (state) => {\r\n            return state.nearbyUsersIDs;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los datos de los eventos a mostrar en la vista de lista\r\n        // @arg El state del users store\r\n        getNearbyUsersIDsLength: (state) => {\r\n            return state.nearbyUsersIDs.length;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la presencia o no de filtros establecidos\r\n        // @arg El state del users store\r\n        // @arg Los getters del users store\r\n        areThereFiltersOn: (state, getters) => {\r\n            let filters = getters.getFilters;\r\n            let filtersOn = false;\r\n\r\n            if (filters.gender === \"M\" || filters.gender === \"W\"\r\n                || filters.ageRange[0] > Constants.MIN_USER_AGE\r\n                || filters.ageRange[1] < Constants.MAX_USER_AGE\r\n                || (filters.language.filterBy == \"languageToLearn\" && filters.language.languageToLearn != \"all\")\r\n                || (filters.language.filterBy == \"knownLanguage\" && filters.language.knownLanguage != \"all\")\r\n                || (filters.maxDistance != null && filters.maxDistance != 3)) {\r\n                filtersOn = true;\r\n            }\r\n\r\n            return filtersOn;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los filtros en un objeto\r\n        // @arg El state del users store\r\n        getFilters: (state) => {\r\n            return {\r\n                gender: state.genderFilter,\r\n                ageRange: state.ageRangeFilter,\r\n                language: state.languageFilter,\r\n                maxDistance: state.maxDistanceRanges[state.maxDistanceFilter],\r\n                location: state.locationFilter,\r\n                username: state.searchByUsernameFilter\r\n            };\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la referencia al último usuario mostrado en la búsqueda\r\n        // @arg El state del users store\r\n        getLastUserShowed: (state) => {\r\n            return state.lastUserShowed;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los usuarios a mostrar con toda su información\r\n        // @arg El state del users store\r\n        getSearchedUsers: (state) => {\r\n\r\n            let searchedUsersReturn = [];\r\n\r\n            state.searchedUsersIDs.forEach(userID => {\r\n                searchedUsersReturn.push({\r\n                    id: userID,\r\n                    ...state.users[userID]\r\n                });\r\n            });\r\n\r\n            return searchedUsersReturn;\r\n        }\r\n    },\r\n    mutations: {\r\n        // @vuese\r\n        // Restablece todas las variables del state a sus valores por defecto\r\n        // @arg El state del users store\r\n        resetState(state) {\r\n            /* All users retrieved */\r\n            state.users = {};\r\n\r\n            /* User IDs result of the searching process */\r\n            state.searchedUsersIDs = [];\r\n            state.lastUserShowed = null;\r\n            state.genderFilter = \"O\";\r\n            state.ageRangeFilter = [Constants.MIN_USER_AGE, Constants.MAX_USER_AGE];\r\n            state.languageFilter = {\r\n                'filterBy': \"languageToLearn\",\r\n                'knownLanguage': \"all\",\r\n                'languageToLearn': \"all\"\r\n            };\r\n            state.searchByUsernameFilter = null;\r\n            state.maxDistanceFilter = 3;\r\n            state.maxDistanceRanges = [1000, 5000, 10000, null];\r\n            state.maxDistanceRangesText = ['1 km', '5 km', '10 km', '∞'];\r\n            state.locationFilter = null;\r\n            state.nearbyUsersIDs = null;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el filtro de género almacenado\r\n        // @arg El state del users store\r\n        // @arg Identificador de género\r\n        setGenderFilter: (state, genderFilter) => {\r\n            state.genderFilter = genderFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el filtro de edad almacenado\r\n        // @arg El state del users store\r\n        // @arg Filtro de edad\r\n        setAgeRangeFilter: (state, ageRangeFilter) => {\r\n            state.ageRangeFilter = ageRangeFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza la lista de identificadores de usuarios a mostrar\r\n        // @arg El state del users store\r\n        // @arg Lista de identificadores de usuarios a mostrar\r\n        setNearbyUsersIDs: (state, nearbyUsersIDs) => {\r\n            state.nearbyUsersIDs = nearbyUsersIDs;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el filtro de idiomas almacenado\r\n        // @arg El state del users store\r\n        // @arg Filtro de idiomas\r\n        setLanguageFilter: (state, languageFilter) => {\r\n            state.languageFilter = languageFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el filtro de localización almacenado\r\n        // @arg El state del users store\r\n        // @arg Filtro de localización\r\n        setLocationFilter: (state, locationFilter) => {\r\n            state.locationFilter = locationFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el filtro de nombre de usuario almacenado\r\n        // @arg El state del users store\r\n        // @arg Nombre de usuario\r\n        setSearchByUsernameFilter: (state, searchByUsernameFilter) => {\r\n            state.searchByUsernameFilter = searchByUsernameFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el filtro de máxima distancia almacenado\r\n        // @arg El state del users store\r\n        // @arg Filtro de máxima distancia\r\n        setMaxDistanceFilter: (state, maxDistanceFilter) => {\r\n            state.maxDistanceFilter = maxDistanceFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un usuario a la lista de usuarios almacenados\r\n        // @arg El state del users store\r\n        // @arg Usuario\r\n        addUser(state, user) {\r\n            state.users[user.id] = user;\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un ID de usuario a la lista de usuarios a mostrar\r\n        // @arg El state del users store\r\n        // @arg ID del usuario\r\n        addSearchedUserID(state, userID) {\r\n            if (-1 == state.searchedUsersIDs.findIndex(id => {\r\n                return id == userID;\r\n            })) {\r\n                state.searchedUsersIDs.push(userID);\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Restablece la lista de identificadores de usuarios a mostrar a su valor por defecto\r\n        // @arg El state del users store\r\n        resetSearchedUsersIDs(state) {\r\n            state.searchedUsersIDs = [];\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza la referencia al último usuario mostrado en la búsqueda\r\n        // @arg El state del users store\r\n        // @arg Referencia al último usuario mostrado en la búsqueda\r\n        setLastUserShowed(state, lastUserShowed) {\r\n            state.lastUserShowed = lastUserShowed;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza los valores agragados de la valoración de un usuario a partir de los valores pasados como parámetro\r\n        // @arg El state del users store\r\n        // @arg data {id, rating}\r\n        addRating(state, data) {\r\n            let userTo = state.users[data.id];\r\n\r\n            if (data.prev == null) {\r\n                //new rate\r\n                let newAvgRating = userTo.avgRating * userTo.numRatings;\r\n                newAvgRating += data.rating;\r\n                newAvgRating /= (userTo.numRatings + 1);\r\n                state.users[data.id].avgRating = newAvgRating;\r\n                state.users[data.id].numRatings = userTo.numRatings + 1;\r\n            } else {\r\n                if (data.rating == null) {\r\n                    //remove rate\r\n                    let newAvgRating = userTo.avgRating * userTo.numRatings;\r\n                    newAvgRating = newAvgRating - data.prev;\r\n                    if ((userTo.numRatings - 1) != 0)\r\n                        newAvgRating /= (userTo.numRatings - 1);\r\n                    state.users[data.id].avgRating = newAvgRating;\r\n                    state.users[data.id].numRatings = userTo.numRatings - 1;\r\n                } else {\r\n                    //modify rate\r\n                    let newAvgRating = userTo.avgRating * userTo.numRatings;\r\n                    newAvgRating = newAvgRating + data.rating - data.prev;\r\n                    if (userTo.numRatings != 0)\r\n                        newAvgRating /= userTo.numRatings;\r\n                    state.users[data.id].avgRating = newAvgRating;\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        // @vuese\r\n        // Resetea el estado del users store\r\n        // @arg El context del users store\r\n        resetState(context) {\r\n            context.commit('resetState');\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene los usuarios de base de datos que cumplen con los filtros de forma paginada\r\n        // @arg El context del users store\r\n        getSearchedUsers(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                let filters = context.getters.getFilters;\r\n\r\n                if (filters.location != null && filters.location != undefined && filters.maxDistance != null) {\r\n                    if (context.getters.getLastUserShowed == null) {\r\n                        context.dispatch('database/getNearbyUserIDs', {\r\n                            location: filters.location,\r\n                            maxDistance: filters.maxDistance\r\n                        })\r\n                            .then((ids) => {\r\n                                context.commit('setNearbyUsersIDs', ids);\r\n                                context.dispatch('getNearbyUsersProfiles')\r\n                                    .then(() => {\r\n                                        context.dispatch('areThereMoreNearbyUsers')\r\n                                            .then((areThereMore) => {\r\n                                                resolve(areThereMore);\r\n                                            })\r\n                                            .catch((error) => {\r\n                                                reject(error);\r\n                                            });\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        reject(error);\r\n                                    });\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error);\r\n                            });\r\n                    } else {\r\n                        context.dispatch('getNearbyUsersProfiles')\r\n                            .then(() => {\r\n                                context.dispatch('areThereMoreNearbyUsers')\r\n                                    .then((areThereMore) => {\r\n                                        resolve(areThereMore);\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        reject(error);\r\n                                    });\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error);\r\n                            });\r\n                    }\r\n                } else {\r\n                    context.dispatch('database/getNextUsersPage', {\r\n                        lastUserShowed: context.getters.getLastUserShowed,\r\n                        limit: Constants.SEARCHED_USERS_PAGE_SIZE,\r\n                        filters: filters\r\n                    })\r\n                        .then((data) => {\r\n                            context.commit('setLastUserShowed', data.newLastUserShowed);\r\n\r\n                            data.users.forEach(user => {\r\n                                context.commit('addUser', user);\r\n                                context.commit('addSearchedUserID', user.id);\r\n                            });\r\n                            if (data.users.length > 0) {\r\n\r\n                                context.dispatch('database/isNextUsersPageEmpty', {\r\n                                    lastUserShowed: context.getters.getLastUserShowed,\r\n                                    limit: Constants.SEARCHED_USERS_PAGE_SIZE,\r\n                                    filters: filters\r\n                                })\r\n                                    .then((isEmpty) => {\r\n                                        if (data.users.length > 0 && data.users.length < Constants.SEARCHED_USERS_PAGE_SIZE\r\n                                            && !isEmpty) {\r\n                                            context.dispatch('database/getNextUsersPage', {\r\n                                                lastUserShowed: context.getters.getLastUserShowed,\r\n                                                limit: Constants.SEARCHED_USERS_PAGE_SIZE - data.users.length,\r\n                                                filters: filters\r\n                                            })\r\n                                                .then((data2) => {\r\n                                                    context.commit('setLastUserShowed', data2.newLastUserShowed);\r\n                                                    data2.users.forEach(user => {\r\n                                                        context.commit('addUser', user);\r\n                                                        context.commit('addSearchedUserID', user.id);\r\n                                                    });\r\n                                                    context.dispatch('database/isNextUsersPageEmpty', {\r\n                                                        lastUserShowed: context.getters.getLastUserShowed,\r\n                                                        limit: Constants.SEARCHED_USERS_PAGE_SIZE,\r\n                                                        filters: filters\r\n                                                    })\r\n                                                        .then((isEmpty2) => {\r\n                                                            resolve(!isEmpty2);\r\n                                                        })\r\n                                                        .catch((error) => {\r\n                                                            reject(error);\r\n                                                        });\r\n                                                }).catch((error) => {\r\n                                                reject(error);\r\n                                            });\r\n                                        } else {\r\n                                            resolve(!isEmpty);\r\n                                        }\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        reject(error);\r\n                                    });\r\n                            } else {\r\n                                resolve(false);\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            reject(error);\r\n                        });\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba si quedan usuarios en base de datos que cumplan con los filtros y no hayan sido mostrados ya\r\n        // @arg El context del users store\r\n        areThereMoreNearbyUsers(context) {\r\n            return new Promise(async function (resolve, reject) {\r\n                let allIDs = context.getters.getNearbyUsersIDs;\r\n                let filters = context.getters.getFilters;\r\n                let lastUserShowed = context.getters.getLastUserShowed;\r\n                let i;\r\n\r\n                while (lastUserShowed + 1 < context.getters.getNearbyUsersIDsLength) {\r\n                    if (lastUserShowed == null) {\r\n                        i = 0;\r\n                    } else {\r\n                        i = lastUserShowed + 1;\r\n                    }\r\n\r\n                    let idsToGetProfiles = [];\r\n\r\n                    for (; i < Constants.SEARCHED_USERS_PAGE_SIZE + lastUserShowed + 1; i++) {\r\n                        if (i == context.getters.getNearbyUsersIDsLength)\r\n                            break;\r\n                        idsToGetProfiles.push(allIDs[i]);\r\n\r\n                    }\r\n\r\n                    lastUserShowed = i - 1;\r\n\r\n                    await context.dispatch('database/getMultipleProfilesByUID', idsToGetProfiles)\r\n                        .then((userProfiles) => {\r\n                            userProfiles.forEach(user => {\r\n                                let isValid = true;\r\n\r\n                                // --> USERNAME FILTERING\r\n                                if (filters.username != null && filters.username != undefined && filters.username != ''\r\n                                    && !user.username.startsWith(filters.username)) {\r\n                                    isValid = false;\r\n                                }\r\n                                // --> END USERNAME FILTERING\r\n\r\n                                // --> GENDER FILTERING\r\n                                if ((filters.gender === \"M\" && user.gender !== \"M\")\r\n                                    || (filters.gender === \"W\" && user.gender !== \"W\")) {\r\n                                    isValid = false;\r\n                                }\r\n                                // --> END GENDER FILTERING\r\n\r\n                                // --> AGE FILTERING\r\n                                if (filters.ageRange[0] > Constants.MIN_USER_AGE || filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                                    if (filters.ageRange[0] > Constants.MIN_USER_AGE) {\r\n                                        let currentDate = new Date();\r\n                                        currentDate.setFullYear(currentDate.getFullYear() - filters.ageRange[0]);\r\n                                        currentDate.setHours(0, 0, 0);\r\n                                        if (new Date(user.birthDate.toDate().setHours(0, 0, 0)) >= new Date(currentDate)) {\r\n                                            isValid = false;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                                        let currentDate = new Date();\r\n                                        currentDate.setFullYear(currentDate.getFullYear() - filters.ageRange[1] - 1);\r\n                                        currentDate.setHours(0, 0, 0)\r\n                                        if (new Date(user.birthDate.toDate().setHours(0, 0, 0)) <= new Date(currentDate)) {\r\n                                            isValid = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                // --> END AGE FILTERING\r\n\r\n                                // --> LANGUAGES FILTERING\r\n                                if (filters.language.filterBy == \"languageToLearn\" && filters.language.languageToLearn != \"all\") {\r\n\r\n                                    let languageToLearnIndex = user.languagesToLearn.findIndex(function (lang) {\r\n                                        return lang == filters.language.languageToLearn;\r\n                                    });\r\n\r\n                                    if (languageToLearnIndex == -1) {\r\n                                        isValid = false;\r\n                                    }\r\n                                } else if (filters.language.filterBy == \"knownLanguage\" && filters.language.knownLanguage != \"all\") {\r\n                                    let knownLanguageIndex = user.knownLanguages.findIndex(function (lang) {\r\n                                        return lang == filters.language.knownLanguage;\r\n                                    });\r\n\r\n                                    if (knownLanguageIndex == -1) {\r\n                                        isValid = false;\r\n                                    }\r\n                                }\r\n                                // --> END LANGUAGES FILTERING\r\n\r\n                                if (!user.registrationCompleted) {\r\n                                    isValid = false;\r\n                                }\r\n\r\n                                if (isValid) {\r\n                                    resolve(true);\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            reject(error);\r\n                        });\r\n                }\r\n\r\n                resolve(false);\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene los usuarios cercanos al usuario autenticado de base de datos que cumplen con los filtros de forma paginada\r\n        // @arg El context del users store\r\n        getNearbyUsersProfiles(context) {\r\n            return new Promise(async function (resolve, reject) {\r\n                let usersAdded = 0;\r\n                let allIDs = context.getters.getNearbyUsersIDs;\r\n                let filters = context.getters.getFilters;\r\n\r\n                while (usersAdded < Constants.SEARCHED_USERS_PAGE_SIZE && context.getters.getLastUserShowed + 1 < context.getters.getNearbyUsersIDsLength) {\r\n                    let i;\r\n                    let lastUserShowed = context.getters.getLastUserShowed;\r\n\r\n                    if (lastUserShowed == null) {\r\n                        i = 0;\r\n                        lastUserShowed = 0;\r\n                    } else {\r\n                        i = lastUserShowed + 1;\r\n                    }\r\n\r\n                    let idsToGetProfiles = [];\r\n                    for (; i < Constants.SEARCHED_USERS_PAGE_SIZE + lastUserShowed; i++) {\r\n                        if (i == context.getters.getNearbyUsersIDsLength)\r\n                            break;\r\n\r\n                        idsToGetProfiles.push(allIDs[i]);\r\n                    }\r\n\r\n                    context.commit('setLastUserShowed', i - 1);\r\n\r\n                    await context.dispatch('database/getMultipleProfilesByUID', idsToGetProfiles)\r\n                        .then(async (userProfiles) => {\r\n                            userProfiles.forEach(user => {\r\n                                let isValid = true;\r\n\r\n                                // --> USERNAME FILTERING\r\n                                if (filters.username != null && filters.username != undefined && filters.username != ''\r\n                                    && !user.username.startsWith(filters.username)) {\r\n                                    isValid = false;\r\n                                }\r\n                                // --> END USERNAME FILTERING\r\n\r\n                                // --> GENDER FILTERING\r\n                                if ((filters.gender === \"M\" && user.gender !== \"M\")\r\n                                    || (filters.gender === \"W\" && user.gender !== \"W\")) {\r\n                                    isValid = false;\r\n                                }\r\n                                // --> END GENDER FILTERING\r\n\r\n                                // --> AGE FILTERING\r\n                                if (filters.ageRange[0] > Constants.MIN_USER_AGE || filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                                    if (filters.ageRange[0] > Constants.MIN_USER_AGE) {\r\n                                        let currentDate = new Date();\r\n                                        currentDate.setFullYear(currentDate.getFullYear() - filters.ageRange[0]);\r\n                                        currentDate.setHours(0, 0, 0);\r\n                                        if (new Date(user.birthDate.toDate().setHours(0, 0, 0)) >= new Date(currentDate)) {\r\n                                            isValid = false;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (filters.ageRange[1] < Constants.MAX_USER_AGE) {\r\n                                        let currentDate = new Date();\r\n                                        currentDate.setFullYear(currentDate.getFullYear() - filters.ageRange[1] - 1);\r\n                                        currentDate.setHours(0, 0, 0)\r\n                                        if (new Date(user.birthDate.toDate().setHours(0, 0, 0)) <= new Date(currentDate)) {\r\n                                            isValid = false;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                // --> END AGE FILTERING\r\n\r\n                                // --> LANGUAGES FILTERING\r\n                                if (filters.language.filterBy == \"languageToLearn\" && filters.language.languageToLearn != \"all\") {\r\n\r\n                                    let languageToLearnIndex = user.languagesToLearn.findIndex(function (lang) {\r\n                                        return lang == filters.language.languageToLearn;\r\n                                    });\r\n\r\n                                    if (languageToLearnIndex == -1) {\r\n                                        isValid = false;\r\n                                    }\r\n                                } else if (filters.language.filterBy == \"knownLanguage\" && filters.language.knownLanguage != \"all\") {\r\n                                    let knownLanguageIndex = user.knownLanguages.findIndex(function (lang) {\r\n                                        return lang == filters.language.knownLanguage;\r\n                                    });\r\n\r\n                                    if (knownLanguageIndex == -1) {\r\n                                        isValid = false;\r\n                                    }\r\n                                }\r\n                                // --> END LANGUAGES FILTERING\r\n\r\n                                if (isValid) {\r\n                                    context.commit('addUser', user);\r\n                                    context.commit('addSearchedUserID', user.id);\r\n                                    usersAdded++;\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch((error) => {\r\n                            reject(error);\r\n                        });\r\n                }\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Resetea la lista de los usuarios almacenados\r\n        // @arg El context del users store\r\n        resetSearchedUsers(context) {\r\n            return new Promise(function (resolve) {\r\n                context.commit(\"resetSearchedUsersIDs\");\r\n                context.commit('setLastUserShowed', null);\r\n\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Establece todos los filtros de búsqueda\r\n        // @arg El context del users store\r\n        // @arg filters{gender, ageRange, language, maxDistance, location}\r\n        setFilters(context, filters) {\r\n            return new Promise(function (resolve) {\r\n                context.commit(\"setGenderFilter\", filters.gender);\r\n                context.commit(\"setAgeRangeFilter\", filters.ageRange);\r\n                context.commit(\"setLanguageFilter\", filters.language);\r\n                context.commit(\"setMaxDistanceFilter\", filters.maxDistance);\r\n                context.commit(\"setLocationFilter\", filters.location);\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene y almacena la información de un usuario\r\n        // @arg El context del users store\r\n        // @arg ID del usuario\r\n        getUserByID(context, id) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/getProfileByUID', id)\r\n                    .then((profileInfo) => {\r\n                        if (profileInfo) {\r\n                            context.commit('addUser', profileInfo);\r\n                            resolve(profileInfo);\r\n                        } else {\r\n                            resolve(false);\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(\"Error getting user by it's id in firebase.\");\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Resetea los filtros de búsqueda de usuarios a sus valores por defecto\r\n        // @arg El context del users store\r\n        resetFilters(context) {\r\n            return new Promise(function (resolve) {\r\n                context.commit(\"setGenderFilter\", \"O\");\r\n                context.commit(\"setAgeRangeFilter\", [Constants.MIN_USER_AGE, Constants.MAX_USER_AGE]);\r\n                context.commit('setLanguageFilter', {\r\n                    filterBy: \"languageToLearn\",\r\n                    knownLanguage: \"all\",\r\n                    languageToLearn: \"all\"\r\n                });\r\n\r\n                context.commit(\"setLocationFilter\", null);\r\n                context.commit(\"setNearbyUsersIDs\", null);\r\n                context.commit(\"setNearbyUsersIDs\", null);\r\n                context.commit(\"setMaxDistanceFilter\", 3)\r\n                context.commit(\"setSearchByUsernameFilter\", null)\r\n\r\n                let filters = context.getters.getFilters;\r\n                filters[\"maxDistance\"] = 3;\r\n\r\n                resolve(filters);\r\n            });\r\n        }\r\n    }\r\n}","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport database from \"./database.js\";\r\nimport users from \"./users.js\";\r\nimport i18n from \"../../i18n\";\r\n\r\nlet alreadyAccountUsernameError = i18n.t('messages.ERROR_ALREADY_AN_ACCOUNT_WITH_THIS_USERNAME');\r\nlet genericError = i18n.t('messages.ERROR_GENERIC_PROBLEM');\r\nlet gettingCurrentLocationError = i18n.t('messages.ERROR_GETTING_CURRENT_LOCATION');\r\n\r\n////////////////////////////////////////////////////////\r\n//-----         ACCOUNTS & PROFILES INFO         -----//\r\n////////////////////////////////////////////////////////\r\n\r\n// @vuese\r\n// Módulo del estado centralizado (Store) encargado de la gestión del usuario autenticado\r\nexport default {\r\n    namespaced: true,\r\n    modules: {\r\n        database,\r\n        users\r\n    },\r\n    state: {\r\n        /* User account info */\r\n        // @vuese\r\n        // ID del usuario autenticado\r\n        id: null,\r\n        // @vuese\r\n        // Nombre del usuario autenticado\r\n        'name': null,\r\n        // @vuese\r\n        // Apellidos del usuario autenticado\r\n        lastName: null,\r\n        // @vuese\r\n        // E-mail del usuario autenticado\r\n        email: null,\r\n        // @vuese\r\n        // Lista de identificadores de los chats del usuario autenticado\r\n        chats: [],\r\n        // @vuese\r\n        // Rol del usuario autenticado en la aplicación\r\n        role: 'user',\r\n        // @vuese\r\n        // Language seleccionado por el usuario autenticado para la aplicación\r\n        language: null,\r\n\r\n        /* User profile */\r\n        // 1st part\r\n        // @vuese\r\n        // Nombre de usuario del usuario autenticado\r\n        username: null,\r\n        // @vuese\r\n        // Fecha de nacimiento del usuario autenticado\r\n        birthDate: null,\r\n        // @vuese\r\n        // Género del usuario autenticado\r\n        gender: null,\r\n        // @vuese\r\n        // Descripción del usuario autenticado\r\n        description: null,\r\n        // @vuese\r\n        // Valoración media del usuario autenticado\r\n        avgRating: null,\r\n        // @vuese\r\n        // Número de valoraciones realizadas al usuario autenticado\r\n        numRatings: null,\r\n        // 2nd part\r\n        // @vuese\r\n        // Idiomas conocidos del usuario autenticado\r\n        knownLanguages: null,\r\n        // @vuese\r\n        // Idiomas a practicar del usuario autenticado\r\n        languagesToLearn: null,\r\n        // 3rd part\r\n        // @vuese\r\n        // Imagen de perfil del usuario autenticado\r\n        profileImg: null,\r\n\r\n        /* Geolocation info */\r\n        // @vuese\r\n        // Localización del usuario autenticado\r\n        location: null,\r\n\r\n        /* Ratings info */\r\n        // @vuese\r\n        // Valoraciones realizadas por el usuario autenticado\r\n        ratings: null,\r\n\r\n        /* Constants */\r\n        // @vuese\r\n        // Géneros disponibles en al aplicación\r\n        genderOptions: {\r\n            \"M\": {\r\n                img: \"img/genders/male.svg\",\r\n                defaultProfileImg: 'img/defaultUserImages/defaultUserImage.svg'\r\n            },\r\n            \"W\": {\r\n                img: \"img/genders/female.svg\",\r\n                defaultProfileImg: 'img/defaultUserImages/defaultUserImage.svg'\r\n            },\r\n            \"O\": {\r\n                img: \"img/genders/other.svg\",\r\n                defaultProfileImg: 'img/defaultUserImages/defaultUserImage.svg'\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Idiomas disponibles en al aplicación\r\n        languageOptions: {\r\n            \"de\": {\r\n                img: \"img/flags/de.svg\"\r\n            },\r\n            \"zh\": {\r\n                img: \"img/flags/zh.svg\"\r\n            },\r\n            \"es\": {\r\n                img: \"img/flags/es.svg\"\r\n            },\r\n            \"fr\": {\r\n                img: \"img/flags/fr.svg\"\r\n            },\r\n            \"en\": {\r\n                img: \"img/flags/en.svg\"\r\n            },\r\n            \"it\": {\r\n                img: \"img/flags/it.svg\"\r\n            },\r\n            \"ja\": {\r\n                img: \"img/flags/ja.svg\"\r\n            },\r\n            \"pt\": {\r\n                img: \"img/flags/pt.svg\"\r\n            },\r\n            \"all\": {\r\n                img: \"img/flags/all.svg\"\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        // @vuese\r\n        // Devuelve el nombre del usuario autenticado\r\n        // @arg El state del user store\r\n        getName: (state) => {\r\n            return state.name;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el ID del usuario autenticado\r\n        // @arg El state del user store\r\n        getID: (state) => {\r\n            return state.id;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los apellidos del usuario autenticado\r\n        // @arg El state del user store\r\n        getLastName: (state) => {\r\n            return state.lastName;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el E-mail del usuario autenticado\r\n        // @arg El state del user store\r\n        getEmail: (state) => {\r\n            return state.email;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el rol del usuario autenticado\r\n        // @arg El state del user store\r\n        getRole: (state) => {\r\n            return state.role;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los identificadores de los chats del usuario autenticado\r\n        // @arg El state del user store\r\n        getChats: (state) => {\r\n            return state.chats;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la información de perfil del usuario autenticado\r\n        // @arg El state del user store\r\n        getProfile: (state) => {\r\n            let data = {};\r\n\r\n            if (state.username) {\r\n                data = {\r\n                    'username': state.username,\r\n                    ...data\r\n                }\r\n            }\r\n            if (state.birthDate) {\r\n                data = {\r\n                    'birthDate': state.birthDate,\r\n                    ...data\r\n                }\r\n            }\r\n            if (state.gender) {\r\n                data = {\r\n                    'gender': state.gender,\r\n                    ...data\r\n                }\r\n            }\r\n            if (state.description) {\r\n                data = {\r\n                    'description': state.description,\r\n                    ...data\r\n                }\r\n            }\r\n            if (state.profileImg) {\r\n                data = {\r\n                    'profileImg': state.profileImg,\r\n                    ...data\r\n                }\r\n            }\r\n            if (state.knownLanguages) {\r\n                data = {\r\n                    'knownLanguages': state.knownLanguages,\r\n                    ...data\r\n                }\r\n            }\r\n            if (state.languagesToLearn) {\r\n                data = {\r\n                    'languagesToLearn': state.languagesToLearn,\r\n                    ...data\r\n                }\r\n            }\r\n\r\n            data = {\r\n                'avgRating': state.avgRating,\r\n                'numRatings': state.numRatings,\r\n                ...data\r\n            }\r\n\r\n            return data;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la fecha de nacimiento del usuario autenticado\r\n        // @arg El state del user store\r\n        getBirthDate: (state) => {\r\n            return state.birthDate;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el género del usuario autenticado\r\n        // @arg El state del user store\r\n        getGender: (state) => {\r\n            return state.gender;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la descripción del usuario autenticado\r\n        // @arg El state del user store\r\n        getDescription: (state) => {\r\n            return state.description;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la imagen de perfil del usuario autenticado\r\n        // @arg El state del user store\r\n        getProfileImg: (state) => {\r\n            return state.profileImg;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los idiomas conocidos por el usuario autenticado\r\n        // @arg El state del user store\r\n        getKnownLanguages: (state) => {\r\n            return state.knownLanguages;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los idiomas a practicar por el usuario autenticado\r\n        // @arg El state del user store\r\n        getLanguagesToLearn: (state) => {\r\n            return state.languagesToLearn;\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene la imagen asociada a un género\r\n        // @arg El state del user store\r\n        // @arg ID del género\r\n        getGenderImgByID: (state) => (id) => {\r\n            return state.genderOptions[id].img;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la imagen de perfil por defecto\r\n        // @arg El state del user store\r\n        getGenderDefaultProfileImgByUserGender: (state) => {\r\n            return state.genderOptions[\"O\"].defaultProfileImg;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los géneros disponibles en la aplicación en forma de Array\r\n        // @arg El state del user store\r\n        // @arg Los getters del user store\r\n        getGenderOptionsAsArray: (state, getters) => {\r\n            let genderOptions = {\r\n                \"M\": {\r\n                    'text': i18n.t('messages.TEXT_MAN')\r\n                },\r\n                \"W\": {\r\n                    'text': i18n.t('messages.TEXT_WOMAN')\r\n                },\r\n                \"O\": {\r\n                    'text': i18n.t('messages.TEXT_OTHER')\r\n                }\r\n            };\r\n            return Object.keys(genderOptions).map(function (id) {\r\n                let text = genderOptions[id].text;\r\n                let img = getters.getGenderImgByID(id);\r\n                return new Object({id, text, img});\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la imagen correspondiente un idioma\r\n        // @arg El state del user store\r\n        // @arg ID del idioma\r\n        getLanguageImgByID: (state) => (id) => {\r\n            return state.languageOptions[id].img;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los idiomas disponibles en la aplicación en forma de Array\r\n        // @arg El state del user store\r\n        // @arg Los getters del user store\r\n        getLanguageOptionsAsArray: (state, getters) => {\r\n            let languageOptions = {\r\n                \"de\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_DE')\r\n                },\r\n                \"zh\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_ZH')\r\n                },\r\n                \"es\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_ES')\r\n                },\r\n                \"fr\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_FR')\r\n                },\r\n                \"en\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_EN')\r\n                },\r\n                \"it\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_IT')\r\n                },\r\n                \"ja\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_JA')\r\n                },\r\n                \"pt\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_PT')\r\n                },\r\n                \"all\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_ALL')\r\n                }\r\n            };\r\n            return Object.keys(state.languageOptions).map(function (id) {\r\n                let text = languageOptions[id].text;\r\n                let img = getters.getLanguageImgByID(id);\r\n                return new Object({id, text, img});\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la información de un idioma\r\n        // @arg El state del user store\r\n        // @arg El ID del idioma\r\n        getLanguageFromLanguageOptionsByID: (state) => (id) => {\r\n            let languageOptions = {\r\n                \"de\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_DE')\r\n                },\r\n                \"zh\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_ZH')\r\n                },\r\n                \"es\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_ES')\r\n                },\r\n                \"fr\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_FR')\r\n                },\r\n                \"en\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_EN')\r\n                },\r\n                \"it\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_IT')\r\n                },\r\n                \"ja\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_JA')\r\n                },\r\n                \"pt\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_PT')\r\n                },\r\n                \"all\": {\r\n                    'text': i18n.t('messages.TEXT_LANGUAGE_ALL')\r\n                }\r\n            };\r\n\r\n            return {\r\n                ...state.languageOptions[id],\r\n                'text': languageOptions[id].text\r\n            };\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la localización del usuario\r\n        // @arg El state del user store\r\n        getLocation: (state) => {\r\n            return state.location;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve las valoraciones realizadas por el usuario\r\n        // @arg El state del user store\r\n        getRatings: (state) => {\r\n            return state.ratings;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve la información de una valoración realizada por el usuario\r\n        // @arg El state del user store\r\n        // @arg ID de la valoración\r\n        getRating: (state) => (id) => {\r\n            if (state.ratings) {\r\n                return state.ratings[id];\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    },\r\n    mutations: {\r\n        // @vuese\r\n        // Actualiza el valor del nombre del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Nombre\r\n        setName(state, name) {\r\n            state.name = name;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el idioma seleccionado para la aplicación por el usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Nombre\r\n        setLanguage(state, language) {\r\n            i18n.locale = language;\r\n            state.language = language;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de los apellidos del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Apellidos\r\n        setLastName(state, lastName) {\r\n            state.lastName = lastName;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del E-mail del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg E-mail\r\n        setEmail(state, email) {\r\n            state.email = email;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza los valores de los campos de la cuenta del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg accountInfo{[email], [name], [lastName], [profileImg], [id], [chats], [role], [language]}\r\n        setAccount(state, accountInfo) {\r\n            if (accountInfo.hasOwnProperty('email')) {\r\n                state.email = accountInfo.email;\r\n            }\r\n            if (accountInfo.hasOwnProperty('name')) {\r\n                state.name = accountInfo.name;\r\n            }\r\n            if (accountInfo.hasOwnProperty('lastName')) {\r\n                state.lastName = accountInfo.lastName;\r\n            }\r\n            if (accountInfo.hasOwnProperty('profileImg')) {\r\n                state.role = accountInfo.role;\r\n            }\r\n            if (accountInfo.hasOwnProperty('id')) {\r\n                state.id = accountInfo.id;\r\n            }\r\n            if (accountInfo.hasOwnProperty('chats')) {\r\n                state.chats = accountInfo.chats;\r\n            }\r\n            if (accountInfo.hasOwnProperty('role')) {\r\n                state.role = accountInfo.role;\r\n            }\r\n            if (accountInfo.hasOwnProperty('language') && accountInfo.language != null) {\r\n                i18n.locale = accountInfo.language;\r\n                state.language = accountInfo.language;\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del nombre de usuario del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Nombre de usuario\r\n        setUsername(state, username) {\r\n            state.username = username;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de la fecha de nacimiento del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Fecha de nacimiento\r\n        setBirthDate(state, birthDate) {\r\n            state.birthDate = birthDate;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del género del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Género\r\n        setGender(state, gender) {\r\n            state.gender = gender;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del descripción del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Descripción\r\n        setDescription(state, description) {\r\n            state.description = description;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de la valoración media del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Valoración media\r\n        setAvgRating(state, avgRating) {\r\n            state.avgRating = avgRating;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del número de valoraciones al usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Número de valoracione\r\n        setNumRatings(state, numRatings) {\r\n            state.numRatings = numRatings;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de los idiomas conocidos por el usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Idiomas conocidos\r\n        setKnownLanguages(state, knownLanguages) {\r\n            state.knownLanguages = knownLanguages;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del idiomas a practicar por el usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Idiomas a practicar\r\n        setLanguagesToLearn(state, languagesToLearn) {\r\n            state.languagesToLearn = languagesToLearn;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de la imagen de perfil del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Imagen de perfil\r\n        setProfileImg(state, profileImg) {\r\n            state.profileImg = profileImg;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de las valoraciones del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Valoraciones\r\n        setRatings(state, ratings) {\r\n            state.ratings = ratings;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de una valoración del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg data{id, rating}\r\n        setRating(state, data) {\r\n            if (state.ratings == null) {\r\n                state.ratings = {};\r\n            }\r\n            state.ratings[data.id] = data.rating;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza los valores de los campos del perfil del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg accountInfo{[username], [birthDate], [gender], [description], [avgRating], [numRatings], [knownLanguages], [languagesToLearn], [profileImg]}\r\n        setProfile(state, profileInfo) {\r\n            if (profileInfo) {\r\n\r\n                if (profileInfo.hasOwnProperty('username')) {\r\n                    state.username = profileInfo.username;\r\n                }\r\n                if (profileInfo.hasOwnProperty('birthDate')) {\r\n                    state.birthDate = profileInfo.birthDate;\r\n                }\r\n                if (profileInfo.hasOwnProperty('gender')) {\r\n                    state.gender = profileInfo.gender;\r\n                }\r\n                if (profileInfo.hasOwnProperty('description')) {\r\n                    state.description = profileInfo.description;\r\n                }\r\n                if (profileInfo.hasOwnProperty('avgRating')) {\r\n                    state.avgRating = profileInfo.avgRating;\r\n                }\r\n                if (profileInfo.hasOwnProperty('numRatings')) {\r\n                    state.numRatings = profileInfo.numRatings;\r\n                }\r\n                if (profileInfo.hasOwnProperty('knownLanguages')) {\r\n                    state.knownLanguages = profileInfo.knownLanguages;\r\n                }\r\n                if (profileInfo.hasOwnProperty('languagesToLearn')) {\r\n                    state.languagesToLearn = profileInfo.languagesToLearn;\r\n                }\r\n                if (profileInfo.hasOwnProperty('profileImg')) {\r\n                    state.profileImg = profileInfo.profileImg;\r\n                }\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Restablece todas las variables del state a sus valores por defecto\r\n        // @arg El state del user store\r\n        resetState(state) {\r\n            /* User account*/\r\n            state.id = null;\r\n            state.name = null;\r\n            state.lastName = null;\r\n            state.email = null;\r\n            state.role = 'user';\r\n            state.chats = [];\r\n\r\n            /* User profile */\r\n            // 1st part\r\n            state.username = null;\r\n            state.birthDate = null;\r\n            state.gender = null;\r\n            state.description = null;\r\n            state.avgRating = null;\r\n            state.numRatings = null;\r\n            // 2nd part\r\n            state.knownLanguages = null;\r\n            state.languagesToLearn = null;\r\n            // 3rd part\r\n            state.profileImg = null;\r\n\r\n            /* Ratings info */\r\n            state.ratings = null;\r\n\r\n            /* Geolocation info */\r\n            state.location = null;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor de la localización del usuario autenticado\r\n        // @arg El state del user store\r\n        // @arg Localización\r\n        setLocation(state, location) {\r\n            state.location = location;\r\n        }\r\n    },\r\n    actions: {\r\n        // @vuese\r\n        // Inicia el state con los datos apropiados\r\n        // @arg El context del user store\r\n        initState(context) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/getProfile')\r\n                    .then((profileInfo) => {\r\n                        context.commit('setProfile', profileInfo);\r\n\r\n                        context.dispatch('database/getAccount')\r\n                            .then((accountInfo) => {\r\n                                context.commit('setAccount', accountInfo);\r\n                                context.dispatch('getRatings')\r\n                                    .then(() => {\r\n                                        resolve();\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        reject(error)\r\n                                    });\r\n                                resolve();\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error)\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Resetea el estado del user store\r\n        // @arg El context del user store\r\n        resetState(context) {\r\n            return new Promise(function (resolve) {\r\n                context.commit('resetState');\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Crea una cuenta de usuario con los datos pasados como parámetro\r\n        // @arg El context del user store\r\n        // @arg data {email, password, name, lastName}\r\n        createAccount(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/createAccount', data)\r\n                    .then(() => {\r\n                        context.dispatch('database/setPersistance')\r\n                            .then(() => {\r\n                                context.dispatch('database/setAccount', data)\r\n                                    .then(() => {\r\n                                        context.commit('setAccount', data);\r\n                                        resolve();\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.log('Error creating user account.');\r\n                                        reject(error)\r\n                                    });\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error)\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda el idioma de la aplicación\r\n        // @arg El context del user store\r\n        // @arg Identificador del idioma\r\n        //----------------------------------------------------------------------------->\r\n        // ~ setLanguage ~                                                             >\r\n        // To set app language for that user                                           >\r\n        // parameters required: lang                                                   >\r\n        //----------------------------------------------------------------------------->\r\n        setLanguage(context, lang) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/setAccountLanguage', lang)\r\n                    .then(() => {\r\n                        context.commit('setLanguage', lang);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Genera un token de notificación y lo guarda\r\n        // @arg El context del user store\r\n        generateNotificationToken(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/generatePushNotificationToken')\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda el nombre y apellidos del usuario con los datos pasados como parámetro\r\n        // @arg El context del user store\r\n        // @arg data {[name], [lastName]}\r\n        updateAccountNameAndLastName(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/updateAccountData', data)\r\n                    .then(() => {\r\n                        if (data.hasOwnProperty('name')) {\r\n                            context.commit('setName', data.name);\r\n                        }\r\n                        if (data.hasOwnProperty('lastName')) {\r\n                            context.commit('setLastName', data.lastName);\r\n                        }\r\n\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda el E-mail del usuario pasado como parámetro\r\n        // @arg El context del user store\r\n        // @arg E-mail\r\n        updateAccountEmail(context, email) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/updateAccountEmail', email)\r\n                    .then(() => {\r\n                        context.commit('setEmail', email);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda la contraseña con la pasada como parámetro\r\n        // @arg El context del user store\r\n        // @arg Contraseña\r\n        updateAccountPassword(context, password) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/updateAccountPassword', password)\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Realiza el login del usuario con los datos pasados como parámetro\r\n        // @arg El context del user store\r\n        // @arg data {email, password}\r\n        login(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/login', data)\r\n                    .then(() => {\r\n                        context.commit('setAccount', data);\r\n                        context.dispatch('database/setPersistance')\r\n                            .then(() => {\r\n                                resolve();\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error)\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba si el usuario está loggeado\r\n        // @arg El context del user store\r\n        isUserLogged: function (context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/isUserAuth')\r\n                    .then((isIt) => {\r\n                        resolve(isIt);\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Cierra la sesión del usuario\r\n        // @arg El context del user store\r\n        logout(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/logout')\r\n                    .then(() => {\r\n                        /*context.dispatch('resetAppState', null, {root: true})\r\n                            .then(function () {\r\n                                resolve();\r\n                            }).catch((error) => {\r\n                                reject(error)\r\n                        });*/\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Envía un correo electrónico de verificación al E-mail del usuario\r\n        // @arg El context del user store\r\n        sendEmailVerification(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/sendEmailVerification')\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error sending verification email.');\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Envía un correo electrónico de reseteo de contraseña al E-mail pasado como parámetro\r\n        // @arg El context del user store\r\n        // @arg E-mail\r\n        sendPasswordResetEmail(context, email) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/sendPasswordResetEmail', email)\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error sending password email.');\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba si el E-mail del usuario está verificado\r\n        // @arg El context del user store\r\n        checkIfEmailIsVerified(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/isEmailVerified')\r\n                    .then((isVerified) => {\r\n                        resolve(isVerified);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error checking if email is verified.');\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Comprueba si un nombre de usuario está registrado en la aplicación\r\n        // @arg El context del user store\r\n        // @arg Nombre de usuario\r\n        checkIfUsernameIsAlreadyRegistered(context, username) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/getProfileByUsername', username)\r\n                    .then((profileInfo) => {\r\n                        if (profileInfo) {\r\n                            resolve(true);\r\n                        } else {\r\n                            resolve(false);\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error checking if username is already registered.');\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Crea y almacena el perfil del usuario con los datos pasados como parámetro\r\n        // @arg El context del user store\r\n        // @arg data {username, birthDate, gender, description}\r\n        createProfile(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('checkIfUsernameIsAlreadyRegistered', data.username)\r\n                    .then((isAlreadyRegistered) => {\r\n                        if (isAlreadyRegistered) {\r\n                            reject(alreadyAccountUsernameError);\r\n                        } else {\r\n                            context.dispatch('database/setProfile', data)\r\n                                .then(() => {\r\n                                    context.commit('setUsername', data.username);\r\n                                    context.commit('setBirthDate', data.birthDate);\r\n                                    context.commit('setGender', data.gender);\r\n                                    context.commit('setDescription', data.description);\r\n                                    context.commit('setAvgRating', 0);\r\n                                    context.commit('setNumRatings', 0);\r\n                                    resolve();\r\n                                })\r\n                                .catch((error) => {\r\n                                    console.log('Error creating user profile.');\r\n                                    reject(error);\r\n                                });\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda el perfil del usuario con los datos pasados como parámetro\r\n        // @arg El context del user store\r\n        // @arg data {[username], [birthDate], [gender], [description], [knownLanguages], [languagesToLearn]}\r\n        updateProfile(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/updateProfile', data)\r\n                    .then(async () => {\r\n\r\n                        if (data.hasOwnProperty('username')) {\r\n                            context.commit('setUsername', data.username);\r\n                        }\r\n                        if (data.hasOwnProperty('description')) {\r\n                            context.commit('setDescription', data.description);\r\n                        }\r\n                        if (data.hasOwnProperty('gender')) {\r\n                            context.commit('setGender', data.gender);\r\n                        }\r\n                        if (data.hasOwnProperty('birthDate')) {\r\n                            context.commit('setBirthDate', data.birthDate);\r\n                        }\r\n                        if (data.hasOwnProperty('knownLanguages')) {\r\n                            context.commit('setKnownLanguages', data.knownLanguages);\r\n                        }\r\n                        if (data.hasOwnProperty('languagesToLearn')) {\r\n                            context.commit('setLanguagesToLearn', data.languagesToLearn);\r\n                        }\r\n\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda los idiomas conocidos y a practicar del usuario\r\n        // @arg El context del user store\r\n        // @arg data {knownLanguages, languagesToLearn}\r\n        setLanguages(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/setLanguages', data)\r\n                    .then(() => {\r\n                        context.commit('setKnownLanguages', data.knownLanguages);\r\n                        context.commit('setLanguagesToLearn', data.languagesToLearn);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error setting user languages.');\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda la imagen de perfil con la pasada como parámetro\r\n        // @arg El context del user store\r\n        // @arg img\r\n        setProfileImg(context, img) {\r\n            return new Promise(function (resolve, reject) {\r\n                Vue.nextTick(() => {\r\n\r\n                    context.dispatch('database/uploadProfileImg', img)\r\n                        .then((url) => {\r\n                            context.dispatch('database/setProfileImg', url)\r\n                                .then(() => {\r\n                                    context.commit('setProfileImg', url);\r\n                                    resolve();\r\n                                })\r\n                                .catch((error) => {\r\n                                    console.log('Error setting user profile image.');\r\n                                    console.error(error)\r\n                                    reject(error);\r\n                                });\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log('Error uploading user profile image.');\r\n                            reject(error);\r\n                        });\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda el estado de registro del usuario como completado\r\n        // @arg El context del user store\r\n        setRegistrationCompleted(context) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/setRegistrationCompleted')\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error updating user registration state.');\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene el estado de registro del usuario\r\n        // @arg El context del user store\r\n        getRegistrationState(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/getProfile')\r\n                    .then((profileInfo) => {\r\n\r\n                        context.dispatch('checkRegistrationState', profileInfo)\r\n                            .then((state) => {\r\n                                context.commit('setProfile', profileInfo);\r\n                                resolve(state);\r\n                            })\r\n                            .catch((error) => {\r\n                                console.log(error);\r\n                                reject(error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Evalúa el estado de registro del usuario\r\n        // @arg El context del user store\r\n        // @arg data {username, gender, description, avgRating, numRatings, knownLanguages, languagesToLearn, profileImg}\r\n        checkRegistrationState(context, data) {\r\n\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('checkIfEmailIsVerified')\r\n                    .then((isVerified) => {\r\n                        if (isVerified) {\r\n                            // Part 0 completed\r\n                            if (data && data.hasOwnProperty('username') && data.hasOwnProperty('gender')\r\n                                && data.hasOwnProperty('description') && data.hasOwnProperty('avgRating')\r\n                                && data.hasOwnProperty('numRatings')) {\r\n                                // Part 1 completed\r\n                                if (data.hasOwnProperty('knownLanguages') && data.hasOwnProperty('languagesToLearn')) {\r\n                                    // Part 2 completed\r\n                                    if (data.hasOwnProperty('profileImg')) {\r\n                                        // Part 3 completed\r\n                                        // Registration process completed\r\n                                        resolve('dashboard');\r\n                                    } else {\r\n                                        // State 3\r\n                                        resolve('set-your-profile-image');\r\n                                    }\r\n                                } else {\r\n                                    // State 2\r\n                                    resolve('fill-your-languages');\r\n                                }\r\n                            } else {\r\n                                // State 1\r\n                                resolve('fill-your-profile-info');\r\n                            }\r\n                        } else {\r\n                            // State 0\r\n                            resolve('email-verification');\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(genericError);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene y almacena la localización actual del usuario\r\n        getCurrentLocation() {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    navigator.geolocation.getCurrentPosition(position => {\r\n                            resolve({\r\n                                lat: position.coords.latitude,\r\n                                lng: position.coords.longitude\r\n                            })\r\n                        },\r\n                        function (error) {\r\n                            console.error(error);\r\n                            reject(gettingCurrentLocationError);\r\n                        });\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene las valoraciones realizadas por el usuario y las almacena\r\n        // @arg El context del user store\r\n        getRatings(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/getRatings')\r\n                    .then((ratingsInfo) => {\r\n                        context.commit('setRatings', ratingsInfo);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error retrieving user ratings.');\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza y guarda una valoración realizada por el usuario con los datos pasados como parámetro\r\n        // @arg El context del user store\r\n        // @arg data {id, rating}\r\n        rateUser(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/setRating', data)\r\n                    .then(() => {\r\n                        context.commit('setRating', data);\r\n                        context.commit('users/addRating', data);\r\n\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                        console.log('Error rating user.');\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene y almacena la localización del usuario\r\n        // @arg El context del user store\r\n        getLocation(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('getCurrentLocation')\r\n                    .then((currentLocation) => {\r\n                        context.commit('setLocation', currentLocation);\r\n                        context.dispatch('database/updateUserLocation', currentLocation)\r\n                            .then(() => {\r\n                                resolve(currentLocation);\r\n                            })\r\n                            .catch(() => {\r\n                                resolve(currentLocation);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        context.dispatch('database/getLocation')\r\n                            .then((location) => {\r\n                                context.commit('setLocation', location);\r\n                                resolve(location);\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error);\r\n                            });\r\n                    });\r\n            });\r\n        }\r\n    }\r\n};","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport Constants from \"../Constants\";\r\nimport database from \"./database\";\r\nimport permissions from \"./permissions\";\r\nimport users from \"./users.js\";\r\nimport user from \"./user.js\";\r\nimport haversine from 'haversine-distance'\r\n\r\n////////////////////////////////////////////////////////\r\n//-----                 EVENTS                   -----//\r\n////////////////////////////////////////////////////////\r\n\r\n// @vuese\r\n// Módulo del estado centralizado (Store) encargado de la gestión de los eventos de intercambio de idiomas\r\nexport default {\r\n    namespaced: true,\r\n    modules: {\r\n        user,\r\n        users,\r\n        database,\r\n        permissions\r\n    },\r\n    state: {\r\n        // @vuese\r\n        // Almacena todos los eventos obtenidos de la base de datos\r\n        events: {},\r\n\r\n        // @vuese\r\n        // Almacena los identificadores de los eventos a mostrar en la vista de lista de eventos\r\n        eventsToShowIDs: [],\r\n\r\n        // @vuese\r\n        // Almacena los identificadores de los eventos a mostrar en la vista de lista de mapa\r\n        mapEventsToShowIDs: [],\r\n\r\n        // @vuese\r\n        // Almacena una referencia al último evento mostrado en la vista de lista de eventos\r\n        lastEventShowed: null,\r\n\r\n        // @vuese\r\n        // Almacena el filtro de idioma implicado en los eventos a mostrar en la vista de lista de eventos\r\n        languageInvolvedFilter: \"all\",\r\n\r\n        // @vuese\r\n        // Almacena el modo de vista de eventos seleccionado: 0 o 1\r\n        eventsTab: 0\r\n    },\r\n    getters: {\r\n        // @vuese\r\n        // Devuelve el filtro de idioma implicado en los eventos a mostrar en la vista de lista de eventos\r\n        // @arg El state del events store\r\n        getLanguageInvolvedFilter: (state) => {\r\n            return state.languageInvolvedFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los filtros aplicados sobre los eventos a mostrar en la vista de lista de eventos\r\n        // @arg El state del events store\r\n        getFilters: (state) => {\r\n            return {\r\n                languageInvolved: state.languageInvolvedFilter\r\n            };\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve los eventos obtenidos de la base de datos\r\n        // @arg El state del events store\r\n        getEvents: (state) => {\r\n            return state.events;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve el modo de vista de eventos seleccionado\r\n        // @arg El state del events store\r\n        getEventsTab: (state) => {\r\n            return state.eventsTab;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los datos de un evento por su identificador\r\n        // @arg El state del events store\r\n        // @arg El identificador del evento\r\n        getEventByID: (state) => (id) => {\r\n            return state.events[id];\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los datos de los eventos a mostrar en la vista de lista\r\n        // @arg El state del events store\r\n        // @arg Los getters del events store\r\n        getEventsToShow: (state, getters) => {\r\n            let eventsToShow = [];\r\n            state.eventsToShowIDs.forEach((eventID) => {\r\n                let distance = null;\r\n                let userLocation = getters['user/getLocation'];\r\n\r\n                if (userLocation != null && userLocation.lat != undefined && userLocation.lng != undefined) {\r\n                    distance = haversine(state.events[eventID].location.coordinates, userLocation);\r\n                    distance = distance / 1000;\r\n                }\r\n\r\n                let nEvent = {\r\n                    'id': eventID,\r\n                    ...state.events[eventID]\r\n                };\r\n\r\n                nEvent['distance'] = distance;\r\n                eventsToShow.push(nEvent);\r\n            });\r\n            return eventsToShow;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los datos de los eventos a mostrar en la vista de mapa\r\n        // @arg El state del events store\r\n        getMapEventsToShow: (state) => {\r\n            let eventsToShow = [];\r\n            state.mapEventsToShowIDs.forEach((eventID) => {\r\n                eventsToShow.push({\r\n                    id: eventID,\r\n                    ...state.events[eventID]\r\n                })\r\n            });\r\n            return eventsToShow;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener la referencia al último evento mostrado en la lista de vista\r\n        // @arg El state del events store\r\n        getLastEventShowed: (state) => {\r\n            return state.lastEventShowed;\r\n        },\r\n\r\n        // @vuese\r\n        // Devuelve si el usuario autenticado está apuntado o no a un evento\r\n        // @arg El state del events store\r\n        // @arg data{eventID, userID}\r\n        amIParticipating: (state) => (data) => {\r\n\r\n            let found = null;\r\n            if (state.events[data.eventID]) {\r\n                found = state.events[data.eventID].participants.find(participantID => participantID == data.userID);\r\n                return found != undefined;\r\n            }\r\n            return null;\r\n\r\n        }\r\n    },\r\n    mutations: {\r\n        // @vuese\r\n        // Actualiza el valor del filtro de idiomas implicados en los eventos de la vista de lista\r\n        // @arg El state del events store\r\n        // @arg El identificador del idioma por el que filtrar los eventos\r\n        setLanguageInvolvedFilter(state, languageInvolvedFilter) {\r\n            state.languageInvolvedFilter = languageInvolvedFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el modo de vista de los eventos seleccionado\r\n        // @arg El state del events store\r\n        // @arg Modo de vista de los eventos seleccionado: 0 o 1\r\n        setEventsTab(state, eventsTab) {\r\n            state.eventsTab = eventsTab;\r\n        },\r\n\r\n        // @vuese\r\n        // Elimina un evento de la lista de eventos obtenidos por su ID\r\n        // @arg El state del events store\r\n        // @arg ID del evento a eliminar\r\n        removeEventByID(state, eventID) {\r\n            delete state.events[eventID];\r\n\r\n            let indexEventsToShowIDs = state.eventsToShowIDs.findIndex(id => {\r\n                return id == eventID;\r\n            });\r\n            state.eventsToShowIDs.splice(indexEventsToShowIDs, 1);\r\n\r\n            let indexMapEventsToShowIDs = state.mapEventsToShowIDs.findIndex(id => {\r\n                return id == eventID;\r\n            });\r\n            state.mapEventsToShowIDs.splice(indexMapEventsToShowIDs, 1);\r\n        },\r\n\r\n        // @vuese\r\n        // Restablece todas las variables del state a sus valores por defecto\r\n        // @arg El state del events store\r\n        resetState(state) {\r\n            state.events = {};\r\n            state.eventsToShowIDs.splice(0, state.eventsToShowIDs.length);\r\n            state.mapEventsToShowIDs.splice(0, state.mapEventsToShowIDs.length);\r\n            state.lastEventShowed = null;\r\n            state.languageInvolvedFilter = \"all\";\r\n        },\r\n\r\n        // @vuese\r\n        // Restablece la lista de identificadores de eventos a mostrar a su valor por defecto\r\n        // @arg El state del events store\r\n        resetEventsToShowIDs(state) {\r\n            state.eventsToShowIDs.splice(0, state.eventsToShowIDs.length);\r\n            state.lastEventShowed = null;\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un evento a la lista de eventos obtenidos\r\n        // @arg El evento a añadir\r\n        addEvent(state, event) {\r\n            state.events[event.id] = event;\r\n        },\r\n\r\n        // @vuese\r\n        // Añade al usuario autenticado como participante en un evento almacenado\r\n        // @arg data{eventID, userID}\r\n        addParticipantToEvent(state, data) {\r\n            if (-1 == state.events[data.eventID].participants.findIndex(participantID => participantID == data.userID)) {\r\n                state.events[data.eventID].participants.push(data.userID);\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Elimina al usuario autenticado como participante en un evento almacenado\r\n        // @arg El state del events store\r\n        // @arg data{eventID, userID}\r\n        removeParticipantFromEvent(state, data) {\r\n            let searchedUserIndex = state.events[data.eventID].participants.findIndex(function (userID) {\r\n                return userID == data.userID;\r\n            });\r\n            state.events[data.eventID].participants.splice(searchedUserIndex, 1);\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un evento de la lista de eventos obtenidos a la lista de eventos a mostrar en la vista de lista\r\n        // @arg El state del events store\r\n        // @arg ID del evento a mostrar\r\n        addEventToShow(state, eventID) {\r\n            if (-1 == state.eventsToShowIDs.findIndex(id => {\r\n                return id == eventID;\r\n            })) {\r\n                state.eventsToShowIDs.push(eventID);\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un evento de la lista de eventos obtenidos a la lista de eventos a mostrar en la vista de mapa\r\n        // @arg El state del events store\r\n        // @arg ID del evento a mostrar\r\n        addMapEventToShow(state, eventID) {\r\n            if (-1 == state.mapEventsToShowIDs.findIndex(id => {\r\n                return id == eventID;\r\n            })) {\r\n                state.mapEventsToShowIDs.push(eventID);\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza la referencia al último evento mostrado en la vista de lista\r\n        // @arg El state del events store\r\n        // @arg Referencia al último evento mostrado en la vista de lista\r\n        setLastEventShowed(state, lastEventShowed) {\r\n            state.lastEventShowed = lastEventShowed;\r\n        }\r\n    },\r\n    actions: {\r\n        // @vuese\r\n        // Inicia el state con los datos apropiados\r\n        // @arg El context del events store\r\n        initState(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('resetState')\r\n                    .then(() => {\r\n                        context.dispatch('getAllEvents')\r\n                            .then(() => {\r\n                                resolve();\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error)\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n\r\n        },\r\n\r\n        // @vuese\r\n        // Resetea la lista de los identificadores de los eventos a mostrar en la vista de lista\r\n        // @arg El context del events store\r\n        resetEventsToShowIDs(context) {\r\n            context.commit('resetEventsToShowIDs');\r\n        },\r\n\r\n        // @vuese\r\n        // Crea y almacena un nuevo evento pasado como parámetro\r\n        // @arg El context del events store\r\n        // @arg data {date, description, headerImg, location, involvedLanguages, name}\r\n        createEvent(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/createEvent', data)\r\n                    .then((eventData) => {\r\n                        let eventCoordinates = {\r\n                            'lat': eventData.location.coordinates.latitude,\r\n                            'lng': eventData.location.coordinates.longitude\r\n                        }\r\n                        eventData.location.coordinates = eventCoordinates;\r\n                        context.commit('addEvent', eventData);\r\n                        context.commit('addMapEventToShow', eventData.id);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Borra y elimina un evento\r\n        // @arg El context del events store\r\n        // @arg ID del evento a borrar\r\n        removeEvent(context, eventID) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/removeEvent', eventID)\r\n                    .then(() => {\r\n                        context.commit('removeEventByID', eventID);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza un evento evento existente con los datos pasados como parámetro\r\n        // @arg El context del events store\r\n        // @arg data {date, description, headerImg, location, involvedLanguages, name}\r\n        updateEvent(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let dataToUpdate = {};\r\n                let localEvent = context.getters.getEventByID(data.id);\r\n\r\n                if (data.name != localEvent.name) {\r\n                    dataToUpdate['name'] = data.name;\r\n                }\r\n\r\n                if (new Date(data.date.setHours(0, 0, 0)) != localEvent.date.toDate().toString()) {\r\n                    dataToUpdate['date'] = data.date;\r\n                }\r\n\r\n                if (data.headerImg != localEvent.headerImg) {\r\n                    dataToUpdate['headerImg'] = data.headerImg;\r\n                }\r\n\r\n                if (data.description != localEvent.description) {\r\n                    dataToUpdate['description'] = data.description;\r\n                }\r\n\r\n                if (data.involvedLanguages.length != localEvent.involvedLanguages.length) {\r\n                    dataToUpdate['involvedLanguages'] = data.involvedLanguages;\r\n                } else {\r\n                    for (let i = 0; i < data.involvedLanguages.length; i++) {\r\n                        if (data.involvedLanguages[i] != localEvent.involvedLanguages[i]) {\r\n                            dataToUpdate['involvedLanguages'] = data.involvedLanguages;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (data.location.coordinates != localEvent.location.coordinates\r\n                    || data.location.city != localEvent.location.city\r\n                    || data.location.place != localEvent.location.place\r\n                    || data.location.address != localEvent.location.address) {\r\n                    dataToUpdate['location'] = data.location;\r\n                }\r\n\r\n\r\n                if (Object.keys(dataToUpdate).length > 0) {\r\n                    dataToUpdate['id'] = data.id;\r\n                    context.dispatch('database/updateEvent', dataToUpdate)\r\n                        .then((updatesValues) => {\r\n                            for (let [key, value] of Object.entries(dataToUpdate)) {\r\n                                localEvent[key] = value;\r\n                                if (key == 'location') {\r\n                                    let eventCoordinates = {\r\n                                        'lat': localEvent.location.coordinates.latitude,\r\n                                        'lng': localEvent.location.coordinates.longitude\r\n                                    }\r\n                                    localEvent.location.coordinates = eventCoordinates;\r\n                                }\r\n                            }\r\n\r\n                            for (let [key, value] of Object.entries(updatesValues)) {\r\n                                if (key != 'location') {\r\n                                    localEvent[key] = value;\r\n                                }\r\n                            }\r\n\r\n                            context.commit('addEvent', localEvent);\r\n                            resolve();\r\n                        })\r\n                        .catch((error) => {\r\n                            reject(error)\r\n                        });\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene los eventos de base de datos  con fecha mayor a la actual de forma paginada\r\n        // @arg El context del events store\r\n        getEvents(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                let filters = context.getters.getFilters;\r\n\r\n                context.dispatch('database/getNextEventsPage', {\r\n                    lastEventShowed: context.getters.getLastEventShowed,\r\n                    limit: Constants.EVENTS_PAGE_SIZE,\r\n                    filters: filters\r\n                })\r\n                    .then((data) => {\r\n                        context.commit('setLastEventShowed', data.newLastEventShowed);\r\n\r\n                        data.events.forEach(event => {\r\n                            let userLocation = context.getters['user/getLocation'];\r\n                            let distance = null;\r\n                            let eventLocation = {\r\n                                'lat': event.location.coordinates.latitude,\r\n                                'lng': event.location.coordinates.longitude\r\n                            }\r\n\r\n                            let eventNonFormattedLoc = event.location;\r\n                            eventNonFormattedLoc['coordinates'] = eventLocation;\r\n                            event['location'] = eventNonFormattedLoc;\r\n\r\n                            if (userLocation != null) {\r\n                                distance = haversine(event.location.coordinates, userLocation);\r\n                                distance = distance / 1000;\r\n                            }\r\n\r\n                            event = {\r\n                                ...event,\r\n                                'distance': distance\r\n                            };\r\n                            context.commit('addEvent', event);\r\n                            context.commit('addEventToShow', event.id);\r\n                        });\r\n\r\n                        if (data.events.length > 0) {\r\n                            context.dispatch('database/isNextEventsPageEmpty', {\r\n                                lastEventShowed: context.getters.getLastEventShowed,\r\n                                limit: Constants.EVENTS_PAGE_SIZE,\r\n                                filters: filters\r\n                            })\r\n                                .then((isEmpty) => {\r\n                                    resolve(!isEmpty);\r\n                                })\r\n                                .catch((error) => {\r\n                                    reject(error);\r\n                                });\r\n                        } else {\r\n                            resolve(false);\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene todos los eventos de base de datos con fecha mayor a la actual\r\n        // @arg El context del events store\r\n        getAllEvents(context) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/getEventsToBeCelebrated')\r\n                    .then((eventsRetrieved) => {\r\n\r\n                        eventsRetrieved.forEach(event => {\r\n                            let eventLocation = {\r\n                                'lat': event.location.coordinates.latitude,\r\n                                'lng': event.location.coordinates.longitude\r\n                            }\r\n\r\n                            let eventNonFormattedLoc = event.location;\r\n                            eventNonFormattedLoc['coordinates'] = eventLocation;\r\n                            event['location'] = eventNonFormattedLoc;\r\n                            context.commit('addEvent', event);\r\n                            context.commit('addMapEventToShow', event.id);\r\n                        });\r\n\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene de la base de datos los datos de los usuarios implicados en un evento y los almacena\r\n        // @arg El context del events store\r\n        // @arg El ID del evento\r\n        getEventParticipants(context, eventID) {\r\n            return new Promise(function (resolve, reject) {\r\n                let event = context.getters.getEventByID(eventID);\r\n                context.dispatch('database/getMultipleProfilesByUID', event.participants)\r\n                    .then((userProfiles) => {\r\n                        userProfiles.forEach(user => {\r\n                            context.commit('users/addUser', user);\r\n                        });\r\n                        resolve(userProfiles);\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Resetea el estado del events store\r\n        // @arg El context del events store\r\n        resetState(context) {\r\n            return new Promise(function (resolve) {\r\n                context.commit('resetState');\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Añade al usuario autenticado como participante en un evento\r\n        // @arg El ID del evento\r\n        addParticipantToEvent: function (context, eventID) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/addParticipantToEvent', eventID)\r\n                    .then((userID) => {\r\n                        context.commit(\"addParticipantToEvent\", {eventID: eventID, userID: userID});\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error)\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Elimina al usuario autenticado como participante en un evento\r\n        // @arg El ID del evento\r\n        removeParticipantFromEvent: function (context, eventID) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/removeParticipantFromEvent', eventID)\r\n                    .then((userID) => {\r\n                        context.commit(\"removeParticipantFromEvent\", {eventID: eventID, userID: userID});\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene un evento de la base de datos por su ID\r\n        // @arg ID del evento\r\n        getEventByID(context, id) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('database/getEventByID', id)\r\n                    .then((event) => {\r\n                        if (event) {\r\n                            let userLocation = context.getters['user/getLocation'];\r\n                            let distance = null;\r\n                            let eventLocation = {\r\n                                'lat': event.location.coordinates.latitude,\r\n                                'lng': event.location.coordinates.longitude\r\n                            }\r\n\r\n                            let eventNonFormattedLoc = event.location;\r\n                            eventNonFormattedLoc['coordinates'] = eventLocation;\r\n                            event['location'] = eventNonFormattedLoc;\r\n\r\n                            if (userLocation != null) {\r\n                                distance = haversine(event.location.coordinates, userLocation);\r\n                            }\r\n\r\n                            event = {\r\n                                ...event,\r\n                                'distance': distance / 1000\r\n                            };\r\n                            context.commit('addEvent', event);\r\n                            resolve(event);\r\n                        } else {\r\n                            resolve(null);\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(\"Error getting event by it's id in firebase.\");\r\n                        reject(error)\r\n                    });\r\n            });\r\n        }\r\n\r\n    }\r\n}","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport database from \"./database\";\r\nimport permissions from \"./permissions\";\r\nimport users from \"./users.js\";\r\nimport user from \"./user.js\";\r\n\r\n////////////////////////////////////////////////////////\r\n//-----                  CHATS                   -----//\r\n////////////////////////////////////////////////////////\r\n\r\n// @vuese\r\n// Módulo del estado centralizado (Store) encargado de la gestión de los chats del usuario autenticado\r\nexport default {\r\n    namespaced: true,\r\n    modules: {\r\n        user,\r\n        users,\r\n        database,\r\n        permissions\r\n    },\r\n    state: {\r\n        // @vuese\r\n        // Almacena todos los chats del usuario obtenidos de la base de datos\r\n        chats: {},\r\n\r\n        // @vuese\r\n        // Almacena los identificadores de los chats del usuario a mostrar\r\n        chatsToShowIDs: [],\r\n\r\n        // @vuese\r\n        // Almacena el listener de la lista de chats del usuario\r\n        chatListListener: null,\r\n\r\n        // @vuese\r\n        // Almacena los listeners de los mensajes de cada chat del usuario\r\n        chatMessagesListeners: [],\r\n\r\n        // @vuese\r\n        // Controla el filtro por nombre de usuarios sobre la lista de chats\r\n        usernameFilter: null\r\n    },\r\n    getters: {\r\n        // @vuese\r\n        // Utilizado para obtener el chat con el ID pasado como parámetro con todos sus datos\r\n        // @arg El state del chats store\r\n        // @arg El identificador del chat\r\n        getChatByID: (state) => (id) => {\r\n            return state.chats[id];\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los identificadores de los chats a mostrar\r\n        // @arg El state del chats store\r\n        getChatsToShowIDs: (state) => {\r\n            return state.chatsToShowIDs;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los mensajes del chat con el ID pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg El identificador del chat\r\n        getChatMessagesByChatID: (state) => (chatID) => {\r\n            if (state.chats[chatID] != undefined) {\r\n                return state.chats[chatID].messages;\r\n            } else {\r\n                return [];\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los mensajes no leídos del chat con el ID pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg Los getters del chats store\r\n        // @arg El identificador del chat\r\n        getUnreadMessagesByChatID: (state, getters) => (chatID) => {\r\n            let i;\r\n            let myID = getters['user/getID'];\r\n            let unreadMessages = [];\r\n\r\n            if (state.chats[chatID] != undefined) {\r\n                for (i = state.chats[chatID].messages.length - 1; i >= 0; i--) {\r\n                    if (state.chats[chatID].messages[i].sender != myID && !state.chats[chatID].messages[i].read) {\r\n                        unreadMessages.push(state.chats[chatID].messages[i].id);\r\n                    } else if (state.chats[chatID].messages[i].sender != myID && state.chats[chatID].messages[i].read) {\r\n                        break;\r\n                    } else if (state.chats[chatID].messages[i].sender == myID) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return unreadMessages;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener el número de mensajes no leídos por el usuario autenticado\r\n        // @arg El state del chats store\r\n        // @arg Los getters del chats store\r\n        getUnreadMessages: (state, getters) => {\r\n            let count = 0;\r\n\r\n            state.chatsToShowIDs.forEach(c => {\r\n                count += getters.getUnreadMessagesByChatID(c).length;\r\n            });\r\n\r\n            return count;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los chats a mostrar\r\n        // @arg El state del chats store\r\n        // @arg Los getters del chats store\r\n        getChatsToShow: (state, getters) => {\r\n            let chatsToShow = [];\r\n\r\n            if (state.usernameFilter == null) {\r\n                state.chatsToShowIDs.forEach((chatID) => {\r\n                    let auxChat = {};\r\n                    auxChat.users = state.chats[chatID].users;\r\n                    auxChat.id = state.chats[chatID].id;\r\n                    auxChat.lastMessage = state.chats[chatID].messages[state.chats[chatID].messages.length - 1];\r\n                    chatsToShow.push(auxChat)\r\n                });\r\n            } else {\r\n                state.chatsToShowIDs.forEach((chatID) => {\r\n                    let auxChat = {};\r\n                    auxChat.users = state.chats[chatID].users;\r\n\r\n                    let lowNotMe = getters.getUserByChatID(chatID).username.toLowerCase();\r\n\r\n                    if (lowNotMe.includes(state.usernameFilter.toLowerCase())) {\r\n                        auxChat.id = state.chats[chatID].id;\r\n                        auxChat.lastMessage = state.chats[chatID].messages[state.chats[chatID].messages.length - 1];\r\n                        chatsToShow.push(auxChat)\r\n                    }\r\n                });\r\n            }\r\n\r\n            return chatsToShow;\r\n        },\r\n\r\n        // @vuese\r\n        // Getter utilizado para obtener el otro usuario involucrado en el chat con el ID pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg Los getters del chats store\r\n        // @arg El identificador del chat\r\n        getUserByChatID: (state, getters) => (chatID) => {\r\n            let userID;\r\n            if (state.chats[chatID].users[0] == getters['user/getID']) {\r\n                userID = state.chats[chatID].users[1];\r\n            } else {\r\n                userID = state.chats[chatID].users[0];\r\n            }\r\n\r\n            return getters['users/getUserByID'](userID);\r\n        },\r\n\r\n        // @vuese\r\n        // Getter utilizado para obtener el número de mensajes no leídos del chat con el ID pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg Los getters del chats store\r\n        // @arg El identificador del chat\r\n        getNotReadMessagesCountByChatID: (state, getters) => (id) => {\r\n            let i, count = 0;\r\n            let myID = getters['user/getID'];\r\n\r\n            for (i = state.chats[id].messages.length - 1; i >= 0; i--) {\r\n                if (state.chats[id].messages[i].sender != myID && !state.chats[id].messages[i].read) {\r\n                    count++;\r\n                } else if (state.chats[id].messages[i].sender != myID && state.chats[id].messages[i].read) {\r\n                    break;\r\n                } else if (state.chats[id].messages[i].sender == myID) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n    },\r\n\r\n    mutations: {\r\n        // @vuese\r\n        // Restablece todas las variables del state a sus valores por defecto\r\n        // @arg El state del chats store\r\n        resetState(state) {\r\n            state.chats = {};\r\n            state.chatsToShowIDs.splice(0, state.chatsToShowIDs.length);\r\n\r\n            if (state.chatListListener != null && state.chatListListener != undefined) {\r\n                state.chatListListener();\r\n                state.chatListListener = null;\r\n            }\r\n\r\n            state.chatMessagesListeners.forEach(l => {\r\n                if (l != null && l != undefined) {\r\n                    l();\r\n                }\r\n            });\r\n\r\n            state.chatMessagesListeners.splice(0, state.chatMessagesListeners.length);\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un listener pasado como parámetro a la lista de listeners de mensajes de chats del usuario\r\n        // @arg El state del chats store\r\n        // @arg El listener a añadir\r\n        addChatMessagesListener(state, listener) {\r\n            state.chatMessagesListeners.push(listener);\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un chat pasado como parámetro a la lista de chats obtenidos\r\n        // @arg El state del chats store\r\n        // @arg El chat a añadir\r\n        addChat(state, chat) {\r\n            if (!state.chats[chat.id] || chat.messages.length > state.chats[chat.id].messages.length) {\r\n                Vue.set(state.chats, chat.id, chat);\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza los mensajes pasados como parámetro de un chat con el identificador pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg data{chatID, messages}\r\n        updateChatMessages(state, data) {\r\n            for (let i = state.chats[data.chatID].messages.length - 1; i >= 0; i--) {\r\n\r\n                let index = data.messages.findIndex(function (mMessage) {\r\n                    return mMessage.id === state.chats[data.chatID].messages[i].id;\r\n                });\r\n\r\n                if (index != -1) {\r\n                    Vue.set(state.chats[data.chatID].messages, i, data.messages[index]);\r\n                    data.messages.splice(index, 1);\r\n                    if (data.messages.length == 0) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Añade el identificador pasado como parámetro a la lista de identificadores de chats a mostrar\r\n        // @arg El state del chats store\r\n        // @arg El ID del chat a añadir\r\n        addChatToShow(state, chatID) {\r\n            if (-1 == state.chatsToShowIDs.findIndex(id => id == chatID)) {\r\n                state.chatsToShowIDs.push(chatID);\r\n            }\r\n        },\r\n\r\n        // @vuese\r\n        // Ordena la lista de identificadores de chats a mostrar por la fecha de su último mensaje en orden descendente\r\n        // @arg El state del chats store\r\n        sortChatsToShowByLastMessage(state) {\r\n            function compareChatsByLastMessageDate(a, b) {\r\n                let chatALastMessageDate = null;\r\n                let chatBLastMessageDate = null;\r\n\r\n                if (state.chats[a].messages[state.chats[a].messages.length - 1]) {\r\n                    chatALastMessageDate = state.chats[a].messages[state.chats[a].messages.length - 1].date;\r\n                }\r\n\r\n                if (state.chats[b].messages[state.chats[b].messages.length - 1]) {\r\n                    chatBLastMessageDate = state.chats[b].messages[state.chats[b].messages.length - 1].date;\r\n                }\r\n\r\n                if (chatALastMessageDate < chatBLastMessageDate) {\r\n                    return 1;\r\n                }\r\n                if (chatALastMessageDate > chatBLastMessageDate) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }\r\n\r\n            state.chatsToShowIDs.sort(compareChatsByLastMessageDate);\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del filtro de nombre de usuario con el valor pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg El nombre de usuario por el que filtrar\r\n        setUsernameFilter(state, usernameFilter) {\r\n            state.usernameFilter = usernameFilter;\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza el valor del listener de chats del usuario con el valor pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg El listener de chats del usuario\r\n        setChatListListener(state, chatListListener) {\r\n            state.chatListListener = chatListListener;\r\n        },\r\n\r\n        // @vuese\r\n        // Añade los mensajes pasados como parámetros al chat con el ID pasado como parámetro\r\n        // @arg El state del chats store\r\n        // @arg data{chatID, messages}\r\n        pushChatMessages(state, data) {\r\n            data.messages.forEach((mp) => {\r\n                if (mp.date != null && mp.date != undefined) {\r\n                    if (state.chats[data.chatID].messages.length == 0) {\r\n                        Vue.set(state.chats[data.chatID].messages, 0, mp);\r\n                    } else {\r\n                        let alreadyAdded = false;\r\n\r\n                        for (let i = state.chats[data.chatID].messages.length - 1; i >= 0; i--) {\r\n                            if (mp.date != null && mp.date != undefined && (\r\n                                (state.chats[data.chatID].messages[i].date < mp.date && !state.chats[data.chatID].messages[i + 1] && state.chats[data.chatID].messages[i].id != mp.id)\r\n                                || (state.chats[data.chatID].messages[i].date < mp.date && state.chats[data.chatID].messages[i + 1].date > mp.date && state.chats[data.chatID].messages[i].id != mp.id && state.chats[data.chatID].messages[i + 1].id != mp.id))) {\r\n                                state.chats[data.chatID].messages.splice(i + 1, 0, mp);\r\n                                alreadyAdded = true;\r\n                                break;\r\n                            } else if (mp.date != null && mp.date != undefined && i == 0 && state.chats[data.chatID].messages[i].date > mp.date && state.chats[data.chatID].messages[i].id != mp.id) {\r\n                                state.chats[data.chatID].messages.splice(i, 0, mp);\r\n                                alreadyAdded = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (!alreadyAdded && state.chats[data.chatID].messages.length == 0) {\r\n                            state.chats[data.chatID].messages.push(mp);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    actions: {\r\n        // @vuese\r\n        // Resetea el estado del chats store\r\n        // @arg El context del chats store\r\n        resetState(context) {\r\n            return new Promise(function (resolve) {\r\n                context.commit('resetState');\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Inicia el state con los datos apropiados\r\n        // @arg El context del chats store\r\n        initState(context) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                context.dispatch('createChatListeners', context.getters['user/getChats'])\r\n                    .then(() => {\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene y gestiona los cambios en la lista de chats del usuario\r\n        // @arg El context del chats store\r\n        // @arg Usuario cuya lista de chats se gestiona: user{chats[], ...}\r\n        manageChatListChange(context, user) {\r\n            return new Promise(async function (resolve, reject) {\r\n\r\n                for (const chatID of user.chats) {\r\n                    if (-1 == context.getters.getChatsToShowIDs.findIndex(id => id == chatID) &&\r\n                        (!context.state.chats.hasOwnProperty(chatID) || context.state.chats[chatID].messages.length == 0)) {\r\n                        // It is new\r\n                        await context.dispatch('database/getChatByID', chatID)\r\n                            .then(async (chat) => {\r\n                                chat = {\r\n                                    ...chat,\r\n                                    'messages': []\r\n                                }\r\n\r\n                                let userID;\r\n\r\n                                if (chat.users[0] == context.getters['user/getID']) {\r\n                                    userID = chat.users[1];\r\n                                } else {\r\n                                    userID = chat.users[0];\r\n                                }\r\n\r\n                                await context.dispatch('users/getUserByID', userID)\r\n                                    .then(() => {\r\n                                        context.commit(\"addChat\", chat);\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        reject(error);\r\n                                    });\r\n\r\n\r\n                                // Create messages listener\r\n                                await context.dispatch('database/createChatMessagesListener', chatID)\r\n                                    .then(() => {\r\n                                        context.commit(\"addChatToShow\", chat.id);\r\n                                        context.commit(\"sortChatsToShowByLastMessage\");\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        reject(error);\r\n                                    });\r\n\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error)\r\n                            });\r\n\r\n                    }\r\n                }\r\n                resolve();\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene y gestiona los cambios en los mensajes de un chat\r\n        // @arg El context del chats store\r\n        // @arg Información del chat cuyos mensajes se gestionan: chatMessages{id, listener, messages[], ...}\r\n        manageChatMessagesChange(context, chatMessages) {\r\n            return new Promise(function (resolve) {\r\n                    context.commit('addChatMessagesListener', chatMessages.listener);\r\n\r\n                    let newMessages = [];\r\n                    let modifiedMessagesToRead = [];\r\n                    let modifiedMessagesDated = [];\r\n\r\n                    chatMessages.messages.forEach((m) => {\r\n                        if (m.change == \"added\" && m.date) {\r\n                            newMessages.push(m);\r\n                        } else if (m.change == \"modified\" && m.read && m.date) {\r\n                            modifiedMessagesToRead.push(m);\r\n                        } else if (m.change == \"modified\" && !m.read && m.date) {\r\n                            modifiedMessagesDated.push(m);\r\n                        }\r\n                    });\r\n\r\n                    if (newMessages.length > 0) {\r\n                        context.commit('pushChatMessages', {chatID: chatMessages.id, messages: newMessages});\r\n                        //context.commit(\"sortChatMessagesByDate\", chatMessages.id);\r\n                    }\r\n                    if (modifiedMessagesDated.length > 0) {\r\n                        context.commit('pushChatMessages', {chatID: chatMessages.id, messages: modifiedMessagesDated});\r\n                        //context.commit(\"sortChatMessagesByDate\", chatMessages.id);\r\n                    }\r\n                    if (modifiedMessagesToRead.length > 0) {\r\n                        context.commit('updateChatMessages', {chatID: chatMessages.id, messages: modifiedMessagesToRead});\r\n                    }\r\n\r\n                    context.commit(\"sortChatsToShowByLastMessage\");\r\n                    resolve();\r\n                }\r\n            );\r\n        },\r\n\r\n        // @vuese\r\n        // Actualiza los mensajes no leidos de un chat a estado leido\r\n        // @arg El context del chats store\r\n        // @arg El ID del chat cuyos mensajes se van a poner a estado leido\r\n        setChatMessagesToReadByChatID(context, chatID) {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                let unreadMessages = context.getters.getUnreadMessagesByChatID(chatID);\r\n\r\n                context.dispatch('database/setMessagesToRead', {chatID: chatID, messages: unreadMessages})\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Envía un mensaje en un chat, creando este último si todavía no existe\r\n        // @arg El context del chats store\r\n        // @arg data{chatID, users, messageText}\r\n        sendNewChatMessage(context, data) {\r\n            return new Promise(function (resolve, reject) {\r\n                let chat = context.getters.getChatByID(data.chatID);\r\n\r\n                let result;\r\n\r\n                if (context.getters.getChatByID(data.chatID).messages.length == 0) {\r\n                    result = context.dispatch('database/addChat', {id: data.chatID, users: chat.users});\r\n                } else {\r\n                    result = Promise.resolve();\r\n                }\r\n\r\n                result.then(() => {\r\n                    context.dispatch('database/addMessagesToChat', {\r\n                        chatID: data.chatID,\r\n                        message: {sender: context.getters['user/getID'], text: data.messageText}\r\n                    }).then(function () {\r\n                        resolve();\r\n                    }).catch((error) => {\r\n                        reject(error);\r\n                    });\r\n                }).catch((error) => {\r\n                    reject(error);\r\n                });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Crea los listeners para los chats del usuario\r\n        // @arg El context del chats store\r\n        createChatListeners: function (context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/createAccountListener', context.getters['user/getID'])\r\n                    .then(() => {\r\n                        if (context.state.chatListListener != null && context.state.chatListListener != undefined) {\r\n                            context.state.chatListListener();\r\n                        }\r\n                        context.commit('setChatListListener', user.listener);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n}","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport Constants from \"../Constants\";\r\nimport database from \"./database\";\r\nimport permissions from \"./permissions\";\r\nimport users from \"./users.js\";\r\nimport user from \"./user.js\";\r\n\r\n\r\n////////////////////////////////////////////////////////\r\n//-----               APP RANKING                -----//\r\n////////////////////////////////////////////////////////\r\n\r\n// @vuese\r\n// Módulo del estado centralizado (Store) encargado de la gestión del ranking\r\nexport default {\r\n    namespaced: true,\r\n    modules: {\r\n        database,\r\n        permissions,\r\n        users,\r\n        user\r\n    },\r\n    state: {\r\n        // @vuese\r\n        // Referencia al último usuario mostrado en el ranking y se utiliza para la paginación del mismo\r\n        lastUserShowed: -1,\r\n\r\n        // @vuese\r\n        // Almacena todos los usuarios del ranking obtenidos de la base de datos\r\n        rankingUsers: [],\r\n\r\n        // @vuese\r\n        // Almacena los identificadores de los usuarios del ranking a mostrar\r\n        rankingUsersIDs: [],\r\n    },\r\n    getters: {\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los usuarios a mostrar con todos sus datos\r\n        // @arg El state del ranking store\r\n        // @arg Los getters del ranking store\r\n        getRankingUsersToShow: (state, getters) => {\r\n            let rus = [];\r\n\r\n            let i = 0;\r\n            state.rankingUsersIDs.forEach(uid => {\r\n                let ru = {\r\n                    ...getters['users/getUserByID'](uid)\r\n                };\r\n\r\n                ru[\"score\"] = state.rankingUsers[i].score;\r\n                ru[\"position\"] = state.rankingUsers[i].position;\r\n\r\n                rus.push(ru);\r\n                i++;\r\n            });\r\n\r\n            return rus;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener el último usuario del ranking mostrado\r\n        // @arg El state del ranking store\r\n        getLastUserShowed: (state) => {\r\n            return state.lastUserShowed;\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para obtener los datos de un usuario según su posición en el ranking\r\n        // @arg El state del ranking store\r\n        // @arg El índice del usuario del ranking a obtener\r\n        getRankedUserByIndex: (state) => (index) => {\r\n            return state.rankingUsers[index];\r\n        },\r\n\r\n        // @vuese\r\n        // Utilizado para devolver todos los usuarios del ranking obtenidos de base de datos\r\n        // @arg El state del ranking store\r\n        getRankingUsers: (state) => {\r\n            return state.rankingUsers;\r\n        }\r\n    },\r\n    mutations: {\r\n        // @vuese\r\n        // Restablece todas las variables del state a sus valores por defecto\r\n        // @arg El state del ranking store\r\n        resetState(state) {\r\n            state.lastUserShowed = -1;\r\n            state.rankingUsers.splice(0, state.rankingUsers.length);\r\n            state.rankingUsersIDs.splice(0, state.rankingUsersIDs.length);\r\n        },\r\n\r\n        // @vuese\r\n        // Asigna los usuarios pasados como parámetro a la variable del estado rankingUsers\r\n        // @arg El state del ranking store\r\n        // @arg Array con los usuarios del ranking a añadir\r\n        setRankingUsers(state, rankingUsers) {\r\n            rankingUsers.forEach(r => {\r\n                state.rankingUsers.push(r);\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Guarda la referencia al último usuario del ranking mostrado\r\n        // @arg El state del ranking store\r\n        // @arg Referencia al último usuario del ranking mostrado\r\n        setLastUserShowed(state, lastUserShowed) {\r\n            state.lastUserShowed = lastUserShowed;\r\n        },\r\n\r\n        // @vuese\r\n        // Añade un nuevo ID de usuario a mostrar a rankingUsersIDs\r\n        // @arg El state del ranking store\r\n        // @arg ID del usuario a añadir a rankingUsersIDs\r\n        addRankingUserID(state, rankingUserID) {\r\n            if (-1 == state.rankingUsersIDs.findIndex(id => {\r\n                return id == rankingUserID;\r\n            })) {\r\n                state.rankingUsersIDs.push(rankingUserID);\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        // @vuese\r\n        // Inicia el state con los datos apropiados\r\n        // @arg El context del ranking store\r\n        initState(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('resetState')\r\n                    .then(() => {\r\n                        context.dispatch('getRankingUsers')\r\n                            .then(() => {\r\n                                console.log(\"tee\")\r\n                                resolve();\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error)\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error)\r\n                    });\r\n            });\r\n\r\n        },\r\n\r\n        // @vuese\r\n        // Obtiene el top 100 de los usuarios del ranking\r\n        // @arg El context del ranking store\r\n        getRankingUsers(context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/getTop100RankingUsers')\r\n                    .then((top100Users) => {\r\n                        context.commit('setRankingUsers', top100Users);\r\n                        resolve();\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Añade los siguientes usuarios a mostrar (tantos como el tamaño de página establecido)\r\n        // @arg El context del ranking store\r\n        getPagedRankingUsers(context) {\r\n            return new Promise(async function (resolve, reject) {\r\n                let newUserShowed = context.getters.getLastUserShowed + 1;\r\n                let pageEnding = newUserShowed + Constants.RANKING_PAGE_SIZE;\r\n                if (newUserShowed == context.getters.getRankingUsers) {\r\n                    resolve(false);\r\n                }\r\n                while (newUserShowed < pageEnding && newUserShowed < context.getters.getRankingUsers.length) {\r\n                    let user = context.getters.getRankedUserByIndex(newUserShowed);\r\n\r\n                    await context.dispatch('users/getUserByID', user.id)\r\n                        .then(() => {\r\n                            context.commit(\"addRankingUserID\", user.id);\r\n                        })\r\n                        .catch((error) => {\r\n                            reject(error);\r\n                        });\r\n                    newUserShowed++;\r\n                }\r\n\r\n                context.commit('setLastUserShowed', newUserShowed - 1);\r\n                if (newUserShowed < context.getters.getRankingUsers.length) {\r\n                    resolve(true);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Determina si hay usuarios del ranking por mostrar\r\n        // @arg El context del ranking store\r\n        areThereMoreRankingUsersToShow(context) {\r\n            return new Promise(async function (resolve) {\r\n                let newUserShowed = context.getters.getLastUserShowed + 1;\r\n                if (newUserShowed < context.getters.getRankingUsers.length) {\r\n                    resolve(true);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Resetea el estado del ranking store\r\n        // @arg El context del ranking store\r\n        resetState(context) {\r\n            return new Promise(function (resolve) {\r\n                context.commit('resetState');\r\n                resolve();\r\n            });\r\n        }\r\n    }\r\n}","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex);\r\n\r\nimport users from \"./modules/users\";\r\nimport events from \"./modules/events\";\r\nimport user from \"./modules/user\";\r\nimport chats from \"./modules/chats\";\r\nimport ranking from \"./modules/ranking\";\r\nimport database from \"./modules/database\";\r\nimport permissions from \"./modules/permissions\";\r\n\r\n// @vuese\r\n// Módulo principal del estado centralizado (Store)\r\nexport default new Vuex.Store({\r\n    modules: {\r\n        user,\r\n        users,\r\n        events,\r\n        chats,\r\n        ranking,\r\n        database,\r\n        permissions\r\n    },\r\n    state: {\r\n        // @vuese\r\n        // Almacena si se ha cargado o no la información de la aplicación\r\n        appInfoLoaded: false\r\n    },\r\n    getters: {\r\n        // @vuese\r\n        // Devuelve si se ha cargado o no la información de la aplicación\r\n        // @arg El state del módulo principal del store\r\n        getAppInfoLoaded: (state) => {\r\n            return state.appInfoLoaded;\r\n        }\r\n    },\r\n    mutations: {\r\n        // @vuese\r\n        // Almacena si se ha cargado o no la información de la aplicación\r\n        // @arg El state del módulo principal del store\r\n        // true/false\r\n        setAppInfoLoaded(state, appInfoLoaded) {\r\n            state.appInfoLoaded = appInfoLoaded;\r\n        }\r\n    },\r\n    actions: {\r\n\r\n        // @vuese\r\n        // Obtiene si el usuario está loggeado o no\r\n        // @arg El context del módulo principal del store\r\n        getLoggedUser: function (context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('database/isUserAuth')\r\n                    .then((user) => {\r\n                        resolve(user);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error);\r\n                        reject(error);\r\n                    });\r\n            });\r\n        },\r\n\r\n        // @vuese\r\n        // Resetea el estado de la aplicación\r\n        // @arg El context del módulo principal del store\r\n        resetAppState: function (context) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (context.getters.getAppInfoLoaded) {\r\n                    let promises = [];\r\n\r\n                    promises.push(context.dispatch('user/resetState'));\r\n                    promises.push(context.dispatch('users/resetState'));\r\n                    promises.push(context.dispatch('chats/resetState'));\r\n                    promises.push(context.dispatch('events/resetState'));\r\n                    promises.push(context.dispatch('ranking/resetState'));\r\n                    promises.push(context.dispatch('permissions/resetState'));\r\n\r\n                    Promise.all(promises).then(() => {\r\n                        console.log('state successfully reseted.');\r\n                        context.commit('setAppInfoLoaded', false);\r\n                        resolve();\r\n                    })\r\n                        .catch((error) => {\r\n                            console.error(error);\r\n                            console.log('Error resetting state.');\r\n                            reject(this.$i18n.t('messages.ERROR_GENERIC_PROBLEM'));\r\n                        });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n        // @vuese\r\n        // Inicializa la aplicación cargando toda la información necesaria\r\n        // @arg El context del módulo principal del store\r\n        initAppInfo: function (context) {\r\n            return new Promise(function (resolve, reject) {\r\n                context.dispatch('user/isUserLogged')\r\n                    .then((isUserLogged) => {\r\n                        if (isUserLogged && !context.getters.getAppInfoLoaded) {\r\n                            context.dispatch('user/initState')\r\n                                .then(() => {\r\n                                    console.log('user module state successfully initiated.');\r\n                                    context.dispatch('chats/initState')\r\n                                        .then(() => {\r\n                                            console.log('chats module state successfully initiated.');\r\n                                            context.dispatch('ranking/initState')\r\n                                                .then(() => {\r\n                                                    console.log('ranking module state successfully initiated.');\r\n                                                    context.dispatch('events/initState')\r\n                                                        .then(() => {\r\n                                                            console.log('events module state successfully initiated.');\r\n                                                            context.commit('setAppInfoLoaded', true);\r\n                                                            resolve();\r\n                                                        })\r\n                                                        .catch((error) => {\r\n                                                            reject(error);\r\n                                                        });\r\n                                                })\r\n                                                .catch((error) => {\r\n                                                    reject(error);\r\n                                                });\r\n                                        })\r\n                                        .catch((error) => {\r\n                                            reject(error);\r\n                                        });\r\n\r\n                                })\r\n                                .catch((error) => {\r\n                                    reject(error);\r\n                                });\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log('Error initiating users module state.');\r\n                        reject(error);\r\n                    });\r\n            })\r\n\r\n        }\r\n    }\r\n});\r\n","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport firebase from \"firebase\";\r\nimport Home from './views/Home.vue'\r\nimport store from './store/store.js'\r\n\r\nVue.use(Router)\r\n\r\nconst router = new Router({\r\n    /*mode: 'history',*/\r\n    base: process.env.BASE_URL,\r\n    routes: [\r\n        {\r\n            //To redirect all routes that do not exist to /home\r\n            path: '*',\r\n            redirect: '/home'\r\n        },\r\n        {\r\n            //To redirect root route to /home\r\n            path: '/',\r\n            redirect: '/home'\r\n        },\r\n        {\r\n            path: '/home',\r\n            name: 'home',\r\n            component: Home\r\n        },\r\n        {\r\n            path: '/login',\r\n            name: 'login',\r\n            component: () => import('./views/account/Login.vue')\r\n        },\r\n        {\r\n            path: '/sign-up',\r\n            name: 'signUp',\r\n            component: () => import('./views/account/SignUp.vue')\r\n        },\r\n        {\r\n            path: '/email-verification',\r\n            name: 'emailVerification',\r\n            component: () => import('./views/account/EmailVerification.vue'),\r\n            meta: {\r\n                requiresAuth: true\r\n            }\r\n        }, {\r\n            path: '/fill-your-profile-info',\r\n            name: 'fillYourProfileInfo',\r\n            component: () => import('./views/account/FillYourProfileInfo.vue'),\r\n            meta: {\r\n                requiresAuth: true\r\n            }\r\n        }, {\r\n            path: '/fill-your-languages',\r\n            name: 'fillYourLanguages',\r\n            component: () => import('./views/account/FillYourLanguages.vue'),\r\n            meta: {\r\n                requiresAuth: true\r\n            }\r\n        }, {\r\n            path: '/set-your-profile-image',\r\n            name: 'setYourProfileImage',\r\n            component: () => import('./views/account/SetYourProfileImage.vue'),\r\n            meta: {\r\n                requiresAuth: true\r\n            }\r\n        }, {\r\n            path: '/send-change-password-email',\r\n            name: 'sendChangePasswordEmail',\r\n            component: () => import('./views/account/SendChangePasswordEmail.vue'),\r\n            meta: {\r\n                requiresAuth: false\r\n            }\r\n        },\r\n        {\r\n            path: '/dashboard',\r\n            name: 'dashboard',\r\n            redirect: {name: 'searchHome'},\r\n            meta: {requiresAuth: true},\r\n            component: () => import('./views/Dashboard.vue'),\r\n            children: [\r\n                {\r\n                    path: 'ranking',\r\n                    name: 'rankingHome',\r\n                    meta: {requiresAuth: true, menu: 'ranking'},\r\n                    component: () => import('./views/ranking/RankingHome.vue')\r\n                },\r\n                {\r\n                    path: 'ranking/user/:id/',\r\n                    name: 'userProfileRanking',\r\n                    meta: {requiresAuth: true, menu: 'ranking'},\r\n                    component: () => import('./views/search/UserProfile.vue')\r\n                },\r\n                {\r\n                    path: 'events',\r\n                    name: 'eventsHome',\r\n                    meta: {requiresAuth: true, menu: 'events'},\r\n                    component: () => import('./views/events/EventsHome.vue')\r\n                },\r\n                {\r\n                    path: 'event/:id/',\r\n                    name: 'eventDescription',\r\n                    meta: {requiresAuth: true, menu: 'events'},\r\n                    component: () => import('./views/events/EventDescription.vue')\r\n                },\r\n                {\r\n                    path: 'event/:id/edit',\r\n                    name: 'eventEdit',\r\n                    meta: {requiresAuth: true, menu: 'events'},\r\n                    component: () => import('./views/events/EventEdit.vue')\r\n                },\r\n                {\r\n                    path: 'events/create',\r\n                    name: 'eventCreate',\r\n                    meta: {requiresAuth: true, menu: 'events'},\r\n                    component: () => import('./views/events/EventCreate.vue')\r\n                },\r\n                {\r\n                    path: 'search',\r\n                    name: 'searchHome',\r\n                    meta: {requiresAuth: true, menu: 'search'},\r\n                    component: () => import('./views/search/SearchHome.vue')\r\n                },\r\n                {\r\n                    path: 'search/filter',\r\n                    name: 'searchFilter',\r\n                    meta: {requiresAuth: true, menu: 'search'},\r\n                    component: () => import('./views/search/SearchFilter.vue')\r\n                },\r\n                {\r\n                    path: 'search/user/:id/',\r\n                    name: 'userProfileSearch',\r\n                    meta: {requiresAuth: true, menu: 'search'},\r\n                    component: () => import('./views/search/UserProfile.vue')\r\n                },\r\n                {\r\n                    path: 'chats',\r\n                    name: 'chatHome',\r\n                    meta: {requiresAuth: true, menu: 'chats'},\r\n                    component: () => import('./views/chats/ChatHome.vue')\r\n                },\r\n                {\r\n                    path: 'chats/chat/:id/',\r\n                    name: 'chatWithUser',\r\n                    meta: {requiresAuth: true, menu: 'chats'},\r\n                    component: () => import('./views/chats/ChatWithUser.vue')\r\n                },\r\n                {\r\n                    path: 'chats/user/:id/',\r\n                    name: 'userProfileChat',\r\n                    meta: {requiresAuth: true, menu: 'chats'},\r\n                    component: () => import('./views/search/UserProfile.vue')\r\n                },\r\n                {\r\n                    path: 'profile',\r\n                    name: 'profileHome',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/profile/ProfileHome.vue')\r\n                },\r\n                {\r\n                    path: 'profile/:id/edit',\r\n                    name: 'profileEdit',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/profile/ProfileEdit.vue')\r\n                },\r\n                {\r\n                    path: 'settings',\r\n                    name: 'settings',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsHome.vue')\r\n                },\r\n                {\r\n                    path: 'settings/account',\r\n                    name: 'settingsAccount',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsAccount.vue')\r\n                },\r\n                {\r\n                    path: 'settings/account/edit/name-and-last-name',\r\n                    name: 'settingsAccountEditNameAndLastName',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsAccountEditNameAndLastName.vue')\r\n                },\r\n                {\r\n                    path: 'settings/account/edit/email',\r\n                    name: 'settingsAccountEditEmail',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsAccountEditEmail.vue')\r\n                },\r\n                {\r\n                    path: 'settings/account/password-verification',\r\n                    name: 'settingsAccountPasswordVerification',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsAccountPasswordVerification.vue')\r\n                },\r\n                {\r\n                    path: 'settings/account/edit/password',\r\n                    name: 'settingsAccountEditPassword',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsAccountEditPassword.vue')\r\n                },\r\n                {\r\n                    path: 'settings/language',\r\n                    name: 'settingsLanguage',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsLanguage.vue')\r\n                },\r\n                {\r\n                    path: 'settings/permissions',\r\n                    name: 'settingsPermissions',\r\n                    meta: {requiresAuth: true, menu: 'profile'},\r\n                    component: () => import('./views/settings/SettingsPermissions.vue')\r\n                },\r\n            ]\r\n        }\r\n    ]\r\n});\r\n\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    const currentUser = firebase.auth().currentUser;\r\n    const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\r\n\r\n    if (requiresAuth && !currentUser) {\r\n        next('home');\r\n    } else if ((requiresAuth && currentUser && (to.name !== from.name) && (!to.path.startsWith('/dashboard') || !from.path.startsWith('/dashboard'))) || (!requiresAuth && currentUser)) {\r\n        store.dispatch('user/getRegistrationState').then(registrationState => {\r\n            if (to.path.startsWith('/' + registrationState)) {\r\n                next()\r\n            } else if (from.path.startsWith('/' + registrationState)) {\r\n                next({name: from.name});\r\n            } else {\r\n                next({path: '/' + registrationState});\r\n            }\r\n        });\r\n        //next()\r\n    } else {\r\n        next();\r\n    }\r\n\r\n});\r\n\r\nexport default router;\r\n","/* eslint-disable no-console */\n\nimport {register} from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n    register(`${process.env.BASE_URL}firebase-messaging-sw.js`, {\n        ready() {\n            console.log(\n                'App is being served from cache by a service worker.\\n' +\n                'For more details, visit https://goo.gl/AFskqB'\n            )\n        },\n        registered() {\n            console.log('Service worker has been registered.')\n        },\n        cached() {\n            console.log('Content has been cached for offline use.')\n        },\n        updatefound() {\n            console.log('New content is downloading.')\n        },\n        updated() {\n            console.log('New content is available; please refresh.')\n        },\n        offline() {\n            console.log('No internet connection found. App is running in offline mode.')\n        },\n        error(error) {\n            console.error('Error during service worker registration:', error)\n        }\n    })\n}\n","import Vue from 'vue';\nimport Vuetify, {VTextField} from 'vuetify/lib';\n\nVue.use(Vuetify);\nVue.component('v-text-field', VTextField);\n\nexport default new Vuetify({\n    icons: {\n        iconfont: 'mdi'\n    },\n    theme: {\n        themes: {\n            light: {\n                primary: '#00abba',\n                secondary: '#003c4d',\n                thirdary: '#017394',\n                accent: '#82B1FF',\n                error: '#FF5252',\n                info: '#2196F3',\n                success: '#4CAF50',\n                warning: '#FFC107'\n            }\n        }\n    },\n    components: {\n        VTextField\n    }\n});\n","import 'babel-polyfill'\r\nimport '@babel/polyfill'\r\nimport Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store/store'\r\nimport './registerServiceWorker'\r\nimport firebase from \"firebase\";\r\nimport VueChatScroll from 'vue-chat-scroll'\r\n\r\nVue.use(VueChatScroll)\r\nimport VueI18n from 'vue-i18n'\r\n\r\nVue.use(VueI18n)\r\nimport * as VueGoogleMaps from \"vue2-google-maps\";\r\nimport './assets/css/main.css';\r\nimport i18n from \"./i18n\";\r\nimport vuetify from '@/plugins/vuetify';\r\n\r\nVue.use(VueGoogleMaps, {\r\n    load: {\r\n        key: \"AIzaSyBYhPYAZkG6ML2kRArdK8xITPrZWzF0JSw\",\r\n        libraries: \"places\" // necessary for places input\r\n    }\r\n});\r\n\r\nVue.config.productionTip = false\r\n\r\nlet app = '';\r\n\r\nlet config = {\r\n    apiKey: \"AIzaSyABGil2afckXxQ127FS8fW6y5phy1wzd6g\",\r\n    authDomain: \"tfg-vue-m3m.firebaseapp.com\",\r\n    databaseURL: \"https://tfg-vue-m3m.firebaseio.com\",\r\n    projectId: \"tfg-vue-m3m\",\r\n    storageBucket: \"tfg-vue-m3m.appspot.com\",\r\n    messagingSenderId: \"144506012173\",\r\n    appId: \"1:144506012173:web:8a58aa4b50d8b336184b44\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n// Initialize Cloud Firestore through Firebase\r\nlet db = firebase.firestore();\r\n\r\nconst storage = firebase.storage()\r\n\r\nlet messaging = null;\r\ntry {\r\n    messaging = firebase.messaging()\r\n} catch (e) {\r\n    console.log(\"This browser does not support firebase messaging.\")\r\n}\r\n\r\nexport default {\r\n    db,\r\n    storage,\r\n    messaging,\r\n    i18n,\r\n};\r\n\r\n\r\nfirebase.auth().onAuthStateChanged(() => {\r\n    if (!app) {\r\n        app = new Vue({\r\n            router,\r\n            store,\r\n            i18n,\r\n            render: h => h(App),\r\n            vuetify,\r\n            components: {App}\r\n        }).$mount('#app');\r\n    }\r\n})\r\n\r\nimport VuetifyGoogleAutocomplete from 'vuetify-google-autocomplete';\r\n\r\nVue.use(VuetifyGoogleAutocomplete, {\r\n    apiKey: 'AIzaSyBYhPYAZkG6ML2kRArdK8xITPrZWzF0JSw',\r\n    language: i18n.locale,\r\n});\r\n","module.exports = __webpack_public_path__ + \"img/WhiteLogoWeBabble.7ac0fe89.png\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=45b87d34&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=45b87d34&scoped=true&lang=css&\""],"sourceRoot":""}